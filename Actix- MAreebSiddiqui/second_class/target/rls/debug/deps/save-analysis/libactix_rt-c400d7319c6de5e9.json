{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1","program":"/home/areeb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","actix_rt","/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=c400d7319c6de5e9","-C","extra-filename=-c400d7319c6de5e9","--out-dir","/home/areeb/actix_framework/second_class/target/rls/debug/deps","-L","dependency=/home/areeb/actix_framework/second_class/target/rls/debug/deps","--extern","actix_macros=/home/areeb/actix_framework/second_class/target/rls/debug/deps/libactix_macros-4122519c1594b706.so","--extern","actix_threadpool=/home/areeb/actix_framework/second_class/target/rls/debug/deps/libactix_threadpool-2a6b166f47e75a51.rmeta","--extern","copyless=/home/areeb/actix_framework/second_class/target/rls/debug/deps/libcopyless-f2feff20193e8078.rmeta","--extern","futures_channel=/home/areeb/actix_framework/second_class/target/rls/debug/deps/libfutures_channel-7234bd6f2efcc88f.rmeta","--extern","futures_util=/home/areeb/actix_framework/second_class/target/rls/debug/deps/libfutures_util-c65557f0c5dc7dde.rmeta","--extern","smallvec=/home/areeb/actix_framework/second_class/target/rls/debug/deps/libsmallvec-514137fa535db375.rmeta","--extern","tokio=/home/areeb/actix_framework/second_class/target/rls/debug/deps/libtokio-37af7e4b7a4f8f10.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/areeb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/areeb/actix_framework/second_class/target/rls/debug/deps/libactix_rt-c400d7319c6de5e9.rmeta"},"prelude":{"crate_id":{"name":"actix_rt","disambiguator":[3822942410350393708,8015821002945955155]},"crate_root":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src","external_crates":[{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14029911340352309513,3694302842271320647]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7486411228932131176,10611882423765912104]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8951493940525711481,6598059053846807751]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6080538021290120973,12135415365643254465]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[2404946192574906823,11198495443784404083]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8156052144428984436,15205012491124168822]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11527475684179663565,15577722846879460413]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4615572763888095747,7180296191060376175]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16051702409717455556,18428390842256153874]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14083788917415871355,15092499333930635081]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":15,"id":{"name":"actix_macros","disambiguator":[13073802621685606578,15995937053187530311]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":16,"id":{"name":"futures_channel","disambiguator":[1111782795489336423,880782361289939964]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":17,"id":{"name":"futures_core","disambiguator":[6571740547757268696,11353548245172235182]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":18,"id":{"name":"futures_sink","disambiguator":[14944299206882182072,4556415653821710177]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":19,"id":{"name":"futures_util","disambiguator":[2205075490042421011,12390859998552372038]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":20,"id":{"name":"pin_utils","disambiguator":[998553298179852956,9738443211344381780]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":21,"id":{"name":"proc_macro_hack","disambiguator":[4395256638339153277,17569256075867552902]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":22,"id":{"name":"futures_task","disambiguator":[17444878439641093940,15004168525932657068]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":23,"id":{"name":"once_cell","disambiguator":[16569176779988594633,10354031729824279960]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":24,"id":{"name":"pin_project","disambiguator":[13412066408487691160,13680408133216667156]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":25,"id":{"name":"pin_project_internal","disambiguator":[12252044679360651560,7845653236735386685]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":26,"id":{"name":"slab","disambiguator":[14303637837240419134,18129635118717964101]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":27,"id":{"name":"futures_io","disambiguator":[3818625490677540645,10043819737512392963]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":28,"id":{"name":"futures_macro","disambiguator":[10246260697180321916,153482342567721684]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":29,"id":{"name":"proc_macro_nested","disambiguator":[17831709516089431697,10397674720231002674]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":30,"id":{"name":"memchr","disambiguator":[8003936563495583896,16423151844565797093]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":31,"id":{"name":"copyless","disambiguator":[15275391195347963325,7023587996697370845]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":32,"id":{"name":"smallvec","disambiguator":[6500439072766191587,2547788917607191927]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":33,"id":{"name":"tokio","disambiguator":[16657280364725914055,1474526110481611684]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":34,"id":{"name":"pin_project_lite","disambiguator":[12075230274555938339,6105731329665233678]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":35,"id":{"name":"bytes","disambiguator":[6321253367020473209,10347469002845128074]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":36,"id":{"name":"mio","disambiguator":[17582750496510356616,11179833477188173514]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":37,"id":{"name":"net2","disambiguator":[3997162771122278543,17506850625059101602]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":38,"id":{"name":"libc","disambiguator":[1952016384044868676,71149865584711696]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":39,"id":{"name":"cfg_if","disambiguator":[10509600652491765595,688247222960852956]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":40,"id":{"name":"iovec","disambiguator":[992680051446398565,12327189734705886044]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":41,"id":{"name":"log","disambiguator":[18120854042494803080,16165788460556035654]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":42,"id":{"name":"lazy_static","disambiguator":[14540100287950004670,1419756779819563627]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":43,"id":{"name":"mio_uds","disambiguator":[9755509238958662376,14621717065700666256]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":44,"id":{"name":"signal_hook_registry","disambiguator":[1191242594498060217,17664230441855724360]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","num":45,"id":{"name":"arc_swap","disambiguator":[793803151846997335,10903179104145023725]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":46,"id":{"name":"actix_threadpool","disambiguator":[14056506669048424622,4544020084294506306]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":47,"id":{"name":"derive_more","disambiguator":[9042535015440440534,14418264216294886909]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":48,"id":{"name":"parking_lot","disambiguator":[12277341334512876282,17036501401235808435]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":49,"id":{"name":"lock_api","disambiguator":[10409510748091767465,13782347937773166337]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":50,"id":{"name":"scopeguard","disambiguator":[14852362909717270373,5920929660595647021]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":51,"id":{"name":"parking_lot_core","disambiguator":[8701535276370976156,11803279896309518263]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":52,"id":{"name":"threadpool","disambiguator":[1303104684560170305,9505647536554846134]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","num":53,"id":{"name":"num_cpus","disambiguator":[13991451208160820301,2537631075498521209]}}],"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":0,"byte_end":1501,"line_start":1,"line_end":66,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":15},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":227,"byte_end":231,"line_start":6,"line_end":6,"column_start":24,"column_end":28},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":16},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":233,"byte_end":237,"line_start":6,"line_end":6,"column_start":30,"column_end":34},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":316},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":316,"byte_end":323,"line_start":13,"line_end":13,"column_start":24,"column_end":31},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":349,"byte_end":356,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":358,"byte_end":370,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":396,"byte_end":403,"line_start":15,"line_end":15,"column_start":24,"column_end":31},"alias_span":null,"name":"Runtime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":427,"byte_end":433,"line_start":16,"line_end":16,"column_start":23,"column_end":29},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":46,"index":0},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":459,"byte_end":475,"line_start":19,"line_end":19,"column_start":9,"column_end":25},"alias_span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":479,"byte_end":487,"line_start":19,"line_end":19,"column_start":29,"column_end":37},"name":"blocking","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":926,"byte_end":927,"line_start":41,"line_end":41,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":265}},{"kind":"Use","ref_id":{"krate":33,"index":3951},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":962,"byte_end":968,"line_start":43,"line_end":43,"column_start":28,"column_end":34},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":264}},{"kind":"Use","ref_id":{"krate":33,"index":2830},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1037,"byte_end":1046,"line_start":48,"line_end":48,"column_start":25,"column_end":34},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":268}},{"kind":"Use","ref_id":{"krate":33,"index":2664},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1073,"byte_end":1084,"line_start":49,"line_end":49,"column_start":26,"column_end":37},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":268}},{"kind":"Use","ref_id":{"krate":33,"index":2701},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1086,"byte_end":1095,"line_start":49,"line_end":49,"column_start":39,"column_end":48},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":268}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":926,"byte_end":927,"line_start":41,"line_end":41,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":268}},{"kind":"Use","ref_id":{"krate":33,"index":6503},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1328,"byte_end":1335,"line_start":62,"line_end":62,"column_start":26,"column_end":33},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":33,"index":5998},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1363,"byte_end":1372,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":33,"index":5997},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1374,"byte_end":1385,"line_start":63,"line_end":63,"column_start":38,"column_end":49},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":33,"index":6434},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1387,"byte_end":1392,"line_start":63,"line_end":63,"column_start":51,"column_end":56},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":33,"index":6250},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1421,"byte_end":1429,"line_start":64,"line_end":64,"column_start":27,"column_end":35},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":33,"index":6251},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1431,"byte_end":1442,"line_start":64,"line_end":64,"column_start":37,"column_end":48},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":33,"index":6526},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1444,"byte_end":1452,"line_start":64,"line_end":64,"column_start":50,"column_end":58},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":33,"index":6277},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1481,"byte_end":1488,"line_start":65,"line_end":65,"column_start":27,"column_end":34},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":279}},{"kind":"Use","ref_id":{"krate":33,"index":6531},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1490,"byte_end":1497,"line_start":65,"line_end":65,"column_start":36,"column_end":43},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":279}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":0,"byte_end":1501,"line_start":1,"line_end":66,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":157},{"krate":0,"index":201},{"krate":0,"index":213},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":279}],"decl_id":null,"docs":" A runtime implementation that runs everything on the current thread.\n","sig":null,"attributes":[{"value":"deny(rust_2018_idioms, warnings)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":73,"byte_end":109,"line_start":2,"line_end":2,"column_start":1,"column_end":37}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":110,"byte_end":144,"line_start":3,"line_end":3,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":316},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3321,"byte_end":3328,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"Arbiter","qualname":"::arbiter::Arbiter","value":"Arbiter {  }","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":" Arbiters provide an asynchronous execution environment for actors, functions\n and futures. When an Arbiter is created, it spawns a new OS thread, and\n hosts an event loop. Some Arbiter functions execute on the current thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4143,"byte_end":4150,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"current","qualname":"<Arbiter>::current","value":"fn () -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Returns the current thread's arbiter's address. If no Arbiter is present, then this\n function will panic!\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4386,"byte_end":4396,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"is_running","qualname":"<Arbiter>::is_running","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if current arbiter is running.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4521,"byte_end":4525,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"stop","qualname":"<Arbiter>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop arbiter from continuing it's event loop.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":4732,"byte_end":4735,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<Arbiter>::new","value":"fn () -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Spawn new thread and run event loop in spawned thread.\n Returns address of newly created arbiter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":7162,"byte_end":7167,"line_start":178,"line_end":178,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Arbiter>::spawn","value":"fn <F> (future: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for spawning futures on the current\n thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8299,"byte_end":8307,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<Arbiter>::spawn_fn","value":"fn <F, R> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Executes a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for executing futures on the current\n thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8549,"byte_end":8553,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"send","qualname":"<Arbiter>::send","value":"fn <F> (&self, future: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Send a future to the Arbiter's thread, and spawn it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":8895,"byte_end":8902,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"exec_fn","qualname":"<Arbiter>::exec_fn","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread, and execute it. Any result from the function\n is discarded.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":9364,"byte_end":9368,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"exec","qualname":"<Arbiter>::exec","value":"fn <F, R> (&self, f: F) -> impl Future<Output = Result<R, Canceled>>","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread. This function will be executed asynchronously.\n A future is created, and when resolved will contain the result of the function sent\n to the Arbiters thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":9849,"byte_end":9857,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"set_item","qualname":"<Arbiter>::set_item","value":"fn <T> (item: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set item to arbiter storage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10041,"byte_end":10054,"line_start":263,"line_end":263,"column_start":12,"column_end":25},"name":"contains_item","qualname":"<Arbiter>::contains_item","value":"fn <T> () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if arbiter storage contains item\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10307,"byte_end":10315,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"get_item","qualname":"<Arbiter>::get_item","value":"fn <T, F, R> (mut f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a type previously inserted on this arbiter's storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":10827,"byte_end":10839,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"get_mut_item","qualname":"<Arbiter>::get_mut_item","value":"fn <T, F, R> (mut f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a type previously inserted on this arbiter's storage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":11483,"byte_end":11487,"line_start":309,"line_end":309,"column_start":12,"column_end":16},"name":"join","qualname":"<Arbiter>::join","value":"fn (&mut self) -> thread::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for the event loop to stop by joining the underlying thread (if have Some).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":11792,"byte_end":11802,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"local_join","qualname":"<Arbiter>::local_join","value":"fn () -> impl Future<Output = ()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will be completed once all currently spawned futures\n have completed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":174},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":16974,"byte_end":16981,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Builder","qualname":"::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"decl_id":null,"docs":" Builder struct for a actix runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17401,"byte_end":17405,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"fn <T> (mut self, name: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the System.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17711,"byte_end":17724,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<Builder>::stop_on_panic","value":"fn (mut self, stop_on_panic: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option 'stop_on_panic' which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17938,"byte_end":17943,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (self) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new System.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":18453,"byte_end":18456,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"run","qualname":"<Builder>::run","value":"fn <F> (self, f: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":20946,"byte_end":20958,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"SystemRunner","qualname":"::builder::SystemRunner","value":"SystemRunner {  }","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"decl_id":null,"docs":" Helper object that runs System's event loop\n","sig":null,"attributes":[{"value":"must_use = \"SystemRunner must be run\"","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":20877,"byte_end":20917,"line_start":148,"line_end":148,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21171,"byte_end":21174,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"run","qualname":"<SystemRunner>::run","value":"fn (self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start event loop and will finish once the\n `System::stop()` function is called.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21868,"byte_end":21876,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"block_on","qualname":"<SystemRunner>::block_on","value":"fn <F, O> (&mut self, fut: F) -> O","parent":null,"children":[],"decl_id":null,"docs":" Execute a future and wait for result.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":351},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22397,"byte_end":22404,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"decl_id":null,"docs":" Single-threaded runtime provides a way to start reactor\n and runtime on the current thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22598,"byte_end":22601,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"fn () -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime initialized with default configuration values.\n","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22476,"byte_end":22509,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":23667,"byte_end":23672,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"fn <F> (&self, future: F) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the single-threaded runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":24698,"byte_end":24706,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"fn <F> (&mut self, f: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided future, blocking the current thread until the future\n completes.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25239,"byte_end":25245,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"System","qualname":"::system::System","value":"System {  }","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"decl_id":null,"docs":" System is a runtime manager.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26066,"byte_end":26073,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"builder","qualname":"<System>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Build a new system with a customized tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26265,"byte_end":26268,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<System>::new","value":"fn <T> (name: T) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new system.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26123,"byte_end":26156,"line_start":52,"line_end":52,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26537,"byte_end":26549,"line_start":64,"line_end":64,"column_start":12,"column_end":24},"name":"run_in_tokio","qualname":"<System>::run_in_tokio","value":"fn <T> (name: T, local: &LocalSet) -> impl Future<Output = io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Create new system using provided tokio Handle.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26367,"byte_end":26400,"line_start":60,"line_end":60,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":26824,"byte_end":26831,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"current","qualname":"<System>::current","value":"fn () -> System","parent":null,"children":[],"decl_id":null,"docs":" Get current running system.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27092,"byte_end":27098,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"is_set","qualname":"<System>::is_set","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if current system is set, i.e., as already been started.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27237,"byte_end":27248,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"set_current","qualname":"<System>::set_current","value":"fn (sys: System) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set current running system.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27409,"byte_end":27421,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"with_current","qualname":"<System>::with_current","value":"fn <F, R> (f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute function with system reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27676,"byte_end":27678,"line_start":107,"line_end":107,"column_start":12,"column_end":14},"name":"id","qualname":"<System>::id","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" System id\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27755,"byte_end":27759,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"stop","qualname":"<System>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop the system\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":27871,"byte_end":27885,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"stop_with_code","qualname":"<System>::stop_with_code","value":"fn (&self, code: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop the system with a particular exit code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28239,"byte_end":28252,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<System>::stop_on_panic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return status of 'stop_on_panic' option which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28338,"byte_end":28345,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"arbiter","qualname":"<System>::arbiter","value":"fn (&self) -> &Arbiter","parent":null,"children":[],"decl_id":null,"docs":" System arbiter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":28586,"byte_end":28589,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"run","qualname":"<System>::run","value":"fn <F> (f: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":262},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":619,"byte_end":624,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn","value":"fn <F> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the current arbiter.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":264},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":844,"byte_end":850,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"signal","qualname":"::signal","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":267}],"decl_id":null,"docs":" Asynchronous signal handling\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":265},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":882,"byte_end":886,"line_start":40,"line_end":40,"column_start":13,"column_end":17},"name":"unix","qualname":"::signal::unix","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":266}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":857,"byte_end":869,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":268},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1007,"byte_end":1010,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"net","qualname":"::net","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":278}],"decl_id":null,"docs":" TCP/UDP/Unix bindings\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":279},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","byte_start":1296,"byte_end":1300,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"time","qualname":"::time","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":289}],"decl_id":null,"docs":" Utilities for tracking time.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":2702,"byte_end":2716,"line_start":40,"line_end":40,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3445,"byte_end":3452,"line_start":59,"line_end":59,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3558,"byte_end":3565,"line_start":65,"line_end":65,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3629,"byte_end":3636,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":120},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":12168,"byte_end":12182,"line_start":331,"line_end":331,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":12803,"byte_end":12820,"line_start":356,"line_end":356,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":13186,"byte_end":13203,"line_start":369,"line_end":369,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":14813,"byte_end":14826,"line_start":418,"line_end":418,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":15073,"byte_end":15086,"line_start":428,"line_end":428,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":16297,"byte_end":16298,"line_start":463,"line_end":463,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17198,"byte_end":17205,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":19774,"byte_end":19791,"line_start":116,"line_end":116,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21031,"byte_end":21043,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22462,"byte_end":22469,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25444,"byte_end":25450,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":2702,"byte_end":2716,"line_start":40,"line_end":40,"column_start":21,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":7573}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3445,"byte_end":3452,"line_start":59,"line_end":59,"column_start":16,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2185}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3558,"byte_end":3565,"line_start":65,"line_end":65,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":3629,"byte_end":3636,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":12168,"byte_end":12182,"line_start":331,"line_end":331,"column_start":17,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":7887}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":12803,"byte_end":12820,"line_start":356,"line_end":356,"column_start":15,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":1731}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":13186,"byte_end":13203,"line_start":369,"line_end":369,"column_start":17,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":7887}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":14813,"byte_end":14826,"line_start":418,"line_end":418,"column_start":6,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":15073,"byte_end":15086,"line_start":428,"line_end":428,"column_start":17,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":7887}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":16224,"byte_end":16228,"line_start":459,"line_end":459,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":152}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/arbiter.rs","byte_start":16297,"byte_end":16298,"line_start":463,"line_end":463,"column_start":20,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":155},"to":{"krate":0,"index":152}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":17198,"byte_end":17205,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":19774,"byte_end":19791,"line_start":116,"line_end":116,"column_start":6,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/builder.rs","byte_start":21031,"byte_end":21043,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/runtime.rs","byte_start":22462,"byte_end":22469,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.1/src/system.rs","byte_start":25444,"byte_end":25450,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}}]}