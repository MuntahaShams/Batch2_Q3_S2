{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0","program":"/home/areeb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","gimli","/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"read\"","-C","metadata=ddb6fd100c0c9605","-C","extra-filename=-ddb6fd100c0c9605","--out-dir","/home/areeb/actix_framework/second_class/target/rls/debug/deps","-L","dependency=/home/areeb/actix_framework/second_class/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/areeb/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/areeb/actix_framework/second_class/target/rls/debug/deps/libgimli-ddb6fd100c0c9605.rmeta"},"prelude":{"crate_id":{"name":"gimli","disambiguator":[6010631098655437843,18324333978980922751]},"crate_root":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src","external_crates":[{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5366521311420338507,5001693844293236078]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16078967021793905033,18044181950654841110]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3256375668792353550,7694578384779899277]}},{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[17967524032803306908,5163911630854790873]}}],"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":0,"byte_end":2134,"line_start":1,"line_end":75,"column_start":1,"column_end":15}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1712,"byte_end":1713,"line_start":51,"line_end":51,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Format","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1712,"byte_end":1713,"line_start":51,"line_end":51,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1712,"byte_end":1713,"line_start":51,"line_end":51,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4665},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1867,"byte_end":1876,"line_start":61,"line_end":61,"column_start":28,"column_end":37},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1878,"byte_end":1887,"line_start":61,"line_end":61,"column_start":39,"column_end":48},"alias_span":null,"name":"Endianity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4649},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1889,"byte_end":1901,"line_start":61,"line_end":61,"column_start":50,"column_end":62},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1903,"byte_end":1915,"line_start":61,"line_end":61,"column_start":64,"column_end":76},"alias_span":null,"name":"NativeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4630},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1917,"byte_end":1930,"line_start":61,"line_end":61,"column_start":78,"column_end":91},"alias_span":null,"name":"RunTimeEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"DebugAddr","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"CallFrameInstruction","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"EndianSlice","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"ReaderOffsetId, ReaderOffset, Reader","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Abbreviations, AttributeSpecification, Abbreviation, DebugAbbrev","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"IncompleteLineProgram, DebugLine","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"LocListIter, LocationLists","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Expression","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Range, RngListIter, RawRange, RangeLists","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"DebugStrOffsets, DebugStr, DebugLineStr","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"EntriesCursor, CompilationUnitHeader, DebugInfo, UnitHeader, DebugTypes, EntriesRaw, CompilationUnitHeadersIter, UnitOffset, TypeUnitHeader, parse_debug_info_offset, EntriesTree, DebuggingInformationEntry, AttributeValue, TypeUnitHeadersIter","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":86334,"byte_end":86335,"line_start":174,"line_end":174,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"ValueType, Value","parent":{"krate":0,"index":109}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1712,"byte_end":1713,"line_start":51,"line_end":51,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"CallFrameInstruction","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":0,"byte_end":2134,"line_start":1,"line_end":75,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":109},{"krate":0,"index":2034}],"decl_id":null,"docs":" `gimli` is a library for reading and writing the\n [DWARF debugging format](http://dwarfstd.org/).","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":784,"byte_end":806,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":807,"byte_end":846,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"warn(bare_trait_objects)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":888,"byte_end":916,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"warn(unused_extern_crates)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":917,"byte_end":947,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"warn(ellipsis_inclusive_range_patterns)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":948,"byte_end":991,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"warn(explicit_outlives_requirements)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1030,"byte_end":1070,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"allow(unknown_lints)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1133,"byte_end":1157,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1203,"byte_end":1244,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"allow(clippy :: never_loop)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1291,"byte_end":1320,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"allow(clippy :: panic_params)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1393,"byte_end":1424,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"no_std","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1425,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2036},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":2293,"byte_end":2300,"line_start":5,"line_end":5,"column_start":5,"column_end":12},"name":"Dwarf64","qualname":"::common::Format::Dwarf64","value":"Format::Dwarf64","parent":{"krate":0,"index":2035},"children":[],"decl_id":null,"docs":" 64-bit DWARF\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2039},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":2331,"byte_end":2338,"line_start":7,"line_end":7,"column_start":5,"column_end":12},"name":"Dwarf32","qualname":"::common::Format::Dwarf32","value":"Format::Dwarf32","parent":{"krate":0,"index":2035},"children":[],"decl_id":null,"docs":" 32-bit DWARF\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2035},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":2259,"byte_end":2265,"line_start":3,"line_end":3,"column_start":10,"column_end":16},"name":"Format","qualname":"::common::Format","value":"Format::{Dwarf64, Dwarf32}","parent":null,"children":[{"krate":0,"index":2036},{"krate":0,"index":2039}],"decl_id":null,"docs":" Whether the format of a compilation unit is 32- or 64-bit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":2464,"byte_end":2483,"line_start":13,"line_end":13,"column_start":12,"column_end":31},"name":"initial_length_size","qualname":"<Format>::initial_length_size","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of an initial length field for the format.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":2443,"byte_end":2452,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":2682,"byte_end":2691,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"word_size","qualname":"<Format>::word_size","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the natural word size for the format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":2661,"byte_end":2670,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3115,"byte_end":3123,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::common::Encoding","value":"Encoding { address_size, format, version }","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059}],"decl_id":null,"docs":" Encoding parameters that are commonly used for multiple DWARF sections.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3093,"byte_end":3103,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2057},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3166,"byte_end":3178,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"address_size","qualname":"::common::Encoding::address_size","value":"u8","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" The size of an address.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3318,"byte_end":3324,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"name":"format","qualname":"::common::Encoding::format","value":"common::Format","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Whether the DWARF format is 32- or 64-bit.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3384,"byte_end":3391,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"version","qualname":"::common::Encoding::version","value":"u16","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" The DWARF version of the header.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2075},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3514,"byte_end":3526,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"LineEncoding","qualname":"::common::LineEncoding","value":"LineEncoding { minimum_instruction_length, maximum_operations_per_instruction, default_is_stmt, line_base, line_range }","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080}],"decl_id":null,"docs":" Encoding parameters for a line number program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2076},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3607,"byte_end":3633,"line_start":54,"line_end":54,"column_start":9,"column_end":35},"name":"minimum_instruction_length","qualname":"::common::LineEncoding::minimum_instruction_length","value":"u8","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" The size in bytes of the smallest target machine instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2077},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3747,"byte_end":3781,"line_start":58,"line_end":58,"column_start":9,"column_end":43},"name":"maximum_operations_per_instruction","qualname":"::common::LineEncoding::maximum_operations_per_instruction","value":"u8","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" The maximum number of individual operations that may be encoded in an\n instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2078},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3849,"byte_end":3864,"line_start":61,"line_end":61,"column_start":9,"column_end":24},"name":"default_is_stmt","qualname":"::common::LineEncoding::default_is_stmt","value":"bool","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" The initial value of the `is_stmt` register.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2079},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":3960,"byte_end":3969,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"name":"line_base","qualname":"::common::LineEncoding::line_base","value":"i8","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" The minimum value which a special opcode can add to the line register.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2080},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":4065,"byte_end":4075,"line_start":67,"line_end":67,"column_start":9,"column_end":19},"name":"line_range","qualname":"::common::LineEncoding::line_range","value":"u8","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" The range of values which a special opcode can add to the line register.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2096},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":4652,"byte_end":4660,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"Register","qualname":"::common::Register","value":"","parent":null,"children":[],"decl_id":null,"docs":" A DWARF register number.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2122},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":4782,"byte_end":4799,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"DebugAbbrevOffset","qualname":"::common::DebugAbbrevOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_abbrev` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2149},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":4940,"byte_end":4953,"line_start":96,"line_end":96,"column_start":12,"column_end":25},"name":"DebugAddrBase","qualname":"::common::DebugAddrBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_addr` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2172},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":5097,"byte_end":5111,"line_start":100,"line_end":100,"column_start":12,"column_end":26},"name":"DebugAddrIndex","qualname":"::common::DebugAddrIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2195},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":5257,"byte_end":5272,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"DebugInfoOffset","qualname":"::common::DebugInfoOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2232},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":5395,"byte_end":5410,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"DebugLineOffset","qualname":"::common::DebugLineOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_line` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2255},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":5537,"byte_end":5555,"line_start":112,"line_end":112,"column_start":12,"column_end":30},"name":"DebugLineStrOffset","qualname":"::common::DebugLineStrOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_line_str` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2278},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":5793,"byte_end":5812,"line_start":117,"line_end":117,"column_start":12,"column_end":31},"name":"LocationListsOffset","qualname":"::common::LocationListsOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into either the `.debug_loc` section or the `.debug_loclists` section,\n depending on the version of the unit the offset was contained in.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2305},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":5971,"byte_end":5988,"line_start":121,"line_end":121,"column_start":12,"column_end":29},"name":"DebugLocListsBase","qualname":"::common::DebugLocListsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of location list offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2328},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":6148,"byte_end":6166,"line_start":125,"line_end":125,"column_start":12,"column_end":30},"name":"DebugLocListsIndex","qualname":"::common::DebugLocListsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of location list offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2351},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":6298,"byte_end":6316,"line_start":129,"line_end":129,"column_start":12,"column_end":30},"name":"DebugMacinfoOffset","qualname":"::common::DebugMacinfoOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_macinfo` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2378},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":6446,"byte_end":6462,"line_start":133,"line_end":133,"column_start":12,"column_end":28},"name":"DebugMacroOffset","qualname":"::common::DebugMacroOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_macro` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2405},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":6703,"byte_end":6719,"line_start":138,"line_end":138,"column_start":12,"column_end":28},"name":"RangeListsOffset","qualname":"::common::RangeListsOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into either the `.debug_ranges` section or the `.debug_rnglists` section,\n depending on the version of the unit the offset was contained in.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2432},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":6875,"byte_end":6892,"line_start":142,"line_end":142,"column_start":12,"column_end":29},"name":"DebugRngListsBase","qualname":"::common::DebugRngListsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of range list offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2455},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":7049,"byte_end":7067,"line_start":146,"line_end":146,"column_start":12,"column_end":30},"name":"DebugRngListsIndex","qualname":"::common::DebugRngListsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of range list offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2478},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":7189,"byte_end":7203,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"DebugStrOffset","qualname":"::common::DebugStrOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2501},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":7351,"byte_end":7370,"line_start":154,"line_end":154,"column_start":12,"column_end":31},"name":"DebugStrOffsetsBase","qualname":"::common::DebugStrOffsetsBase","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2524},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":7519,"byte_end":7539,"line_start":158,"line_end":158,"column_start":12,"column_end":32},"name":"DebugStrOffsetsIndex","qualname":"::common::DebugStrOffsetsIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" An index into a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2547},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":7686,"byte_end":7702,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"DebugTypesOffset","qualname":"::common::DebugTypesOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_types` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2584},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":7845,"byte_end":7863,"line_start":166,"line_end":166,"column_start":12,"column_end":30},"name":"DebugTypeSignature","qualname":"::common::DebugTypeSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type signature as used in the `.debug_types` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2602},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":7984,"byte_end":8000,"line_start":170,"line_end":170,"column_start":12,"column_end":28},"name":"DebugFrameOffset","qualname":"::common::DebugFrameOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.debug_frame` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2629},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8248,"byte_end":8261,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"name":"EhFrameOffset","qualname":"::common::EhFrameOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the `.eh_frame` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2658},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8624,"byte_end":8639,"line_start":194,"line_end":194,"column_start":5,"column_end":20},"name":"DebugInfoOffset","qualname":"::common::UnitSectionOffset::DebugInfoOffset","value":"UnitSectionOffset::DebugInfoOffset(DebugInfoOffset<T>)","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2661},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8716,"byte_end":8732,"line_start":196,"line_end":196,"column_start":5,"column_end":21},"name":"DebugTypesOffset","qualname":"::common::UnitSectionOffset::DebugTypesOffset","value":"UnitSectionOffset::DebugTypesOffset(DebugTypesOffset<T>)","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" An offset into the `.debug_types` section.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2656},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8539,"byte_end":8556,"line_start":192,"line_end":192,"column_start":10,"column_end":27},"name":"UnitSectionOffset","qualname":"::common::UnitSectionOffset","value":"UnitSectionOffset::{DebugInfoOffset, DebugTypesOffset}","parent":null,"children":[{"krate":0,"index":2658},{"krate":0,"index":2661}],"decl_id":null,"docs":" An offset into the `.debug_info` or `.debug_types` sections.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2698},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8927,"byte_end":8938,"line_start":203,"line_end":203,"column_start":5,"column_end":16},"name":"DebugAbbrev","qualname":"::common::SectionId::DebugAbbrev","value":"SectionId::DebugAbbrev","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_abbrev` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2700},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8979,"byte_end":8988,"line_start":205,"line_end":205,"column_start":5,"column_end":14},"name":"DebugAddr","qualname":"::common::SectionId::DebugAddr","value":"SectionId::DebugAddr","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_addr` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2702},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9032,"byte_end":9044,"line_start":207,"line_end":207,"column_start":5,"column_end":17},"name":"DebugAranges","qualname":"::common::SectionId::DebugAranges","value":"SectionId::DebugAranges","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_aranges` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2704},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9086,"byte_end":9096,"line_start":209,"line_end":209,"column_start":5,"column_end":15},"name":"DebugFrame","qualname":"::common::SectionId::DebugFrame","value":"SectionId::DebugFrame","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_frame` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2706},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9135,"byte_end":9142,"line_start":211,"line_end":211,"column_start":5,"column_end":12},"name":"EhFrame","qualname":"::common::SectionId::EhFrame","value":"SectionId::EhFrame","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.eh_frame` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2708},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9185,"byte_end":9195,"line_start":213,"line_end":213,"column_start":5,"column_end":15},"name":"EhFrameHdr","qualname":"::common::SectionId::EhFrameHdr","value":"SectionId::EhFrameHdr","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.eh_frame_hdr` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2710},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9236,"byte_end":9245,"line_start":215,"line_end":215,"column_start":5,"column_end":14},"name":"DebugInfo","qualname":"::common::SectionId::DebugInfo","value":"SectionId::DebugInfo","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_info` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2712},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9286,"byte_end":9295,"line_start":217,"line_end":217,"column_start":5,"column_end":14},"name":"DebugLine","qualname":"::common::SectionId::DebugLine","value":"SectionId::DebugLine","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_line` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2714},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9340,"byte_end":9352,"line_start":219,"line_end":219,"column_start":5,"column_end":17},"name":"DebugLineStr","qualname":"::common::SectionId::DebugLineStr","value":"SectionId::DebugLineStr","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_line_str` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2716},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9392,"byte_end":9400,"line_start":221,"line_end":221,"column_start":5,"column_end":13},"name":"DebugLoc","qualname":"::common::SectionId::DebugLoc","value":"SectionId::DebugLoc","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_loc` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2718},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9445,"byte_end":9458,"line_start":223,"line_end":223,"column_start":5,"column_end":18},"name":"DebugLocLists","qualname":"::common::SectionId::DebugLocLists","value":"SectionId::DebugLocLists","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_loclists` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2720},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9502,"byte_end":9514,"line_start":225,"line_end":225,"column_start":5,"column_end":17},"name":"DebugMacinfo","qualname":"::common::SectionId::DebugMacinfo","value":"SectionId::DebugMacinfo","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_macinfo` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2722},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9556,"byte_end":9566,"line_start":227,"line_end":227,"column_start":5,"column_end":15},"name":"DebugMacro","qualname":"::common::SectionId::DebugMacro","value":"SectionId::DebugMacro","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_macro` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2724},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9611,"byte_end":9624,"line_start":229,"line_end":229,"column_start":5,"column_end":18},"name":"DebugPubNames","qualname":"::common::SectionId::DebugPubNames","value":"SectionId::DebugPubNames","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_pubnames` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2726},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9669,"byte_end":9682,"line_start":231,"line_end":231,"column_start":5,"column_end":18},"name":"DebugPubTypes","qualname":"::common::SectionId::DebugPubTypes","value":"SectionId::DebugPubTypes","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_pubtypes` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2728},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9725,"byte_end":9736,"line_start":233,"line_end":233,"column_start":5,"column_end":16},"name":"DebugRanges","qualname":"::common::SectionId::DebugRanges","value":"SectionId::DebugRanges","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_ranges` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2730},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9781,"byte_end":9794,"line_start":235,"line_end":235,"column_start":5,"column_end":18},"name":"DebugRngLists","qualname":"::common::SectionId::DebugRngLists","value":"SectionId::DebugRngLists","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_rnglists` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2732},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9834,"byte_end":9842,"line_start":237,"line_end":237,"column_start":5,"column_end":13},"name":"DebugStr","qualname":"::common::SectionId::DebugStr","value":"SectionId::DebugStr","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_str` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9890,"byte_end":9905,"line_start":239,"line_end":239,"column_start":5,"column_end":20},"name":"DebugStrOffsets","qualname":"::common::SectionId::DebugStrOffsets","value":"SectionId::DebugStrOffsets","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_str_offsets` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2736},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9947,"byte_end":9957,"line_start":241,"line_end":241,"column_start":5,"column_end":15},"name":"DebugTypes","qualname":"::common::SectionId::DebugTypes","value":"SectionId::DebugTypes","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" The `.debug_types` section.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2697},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8874,"byte_end":8883,"line_start":201,"line_end":201,"column_start":10,"column_end":19},"name":"SectionId","qualname":"::common::SectionId","value":"SectionId::{DebugAbbrev, DebugAddr, DebugAranges, DebugFrame, EhFrame, EhFrameHdr, DebugInfo, DebugLine, DebugLineStr, DebugLoc, DebugLocLists, DebugMacinfo, DebugMacro, DebugPubNames, DebugPubTypes, DebugRanges, DebugRngLists, DebugStr, DebugStrOffsets, DebugTypes}","parent":null,"children":[{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736}],"decl_id":null,"docs":" An identifier for a DWARF section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":10042,"byte_end":10046,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"name","qualname":"<SectionId>::name","value":"fn (self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the ELF section name for this kind.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2756},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12126,"byte_end":12129,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"Arm","qualname":"::arch::Arm","value":"","parent":null,"children":[],"decl_id":null,"docs":" ARM architecture specific definitions.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2764},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12183,"byte_end":12185,"line_start":34,"line_end":34,"column_start":5,"column_end":7},"name":"R0","qualname":"::arch::Arm::R0","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2765},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12203,"byte_end":12205,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"R1","qualname":"::arch::Arm::R1","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2766},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12223,"byte_end":12225,"line_start":36,"line_end":36,"column_start":5,"column_end":7},"name":"R2","qualname":"::arch::Arm::R2","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2767},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12243,"byte_end":12245,"line_start":37,"line_end":37,"column_start":5,"column_end":7},"name":"R3","qualname":"::arch::Arm::R3","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2768},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12263,"byte_end":12265,"line_start":38,"line_end":38,"column_start":5,"column_end":7},"name":"R4","qualname":"::arch::Arm::R4","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2769},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12283,"byte_end":12285,"line_start":39,"line_end":39,"column_start":5,"column_end":7},"name":"R5","qualname":"::arch::Arm::R5","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2770},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12303,"byte_end":12305,"line_start":40,"line_end":40,"column_start":5,"column_end":7},"name":"R6","qualname":"::arch::Arm::R6","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2771},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12323,"byte_end":12325,"line_start":41,"line_end":41,"column_start":5,"column_end":7},"name":"R7","qualname":"::arch::Arm::R7","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2772},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12343,"byte_end":12345,"line_start":42,"line_end":42,"column_start":5,"column_end":7},"name":"R8","qualname":"::arch::Arm::R8","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2773},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12363,"byte_end":12365,"line_start":43,"line_end":43,"column_start":5,"column_end":7},"name":"R9","qualname":"::arch::Arm::R9","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2774},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12383,"byte_end":12386,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"R10","qualname":"::arch::Arm::R10","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2775},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12406,"byte_end":12409,"line_start":45,"line_end":45,"column_start":5,"column_end":8},"name":"R11","qualname":"::arch::Arm::R11","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2776},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12429,"byte_end":12432,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"R12","qualname":"::arch::Arm::R12","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2777},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12452,"byte_end":12455,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"R13","qualname":"::arch::Arm::R13","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2778},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12475,"byte_end":12478,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"R14","qualname":"::arch::Arm::R14","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2779},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12498,"byte_end":12501,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"R15","qualname":"::arch::Arm::R15","value":"Register","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2782},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12732,"byte_end":12735,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"X86","qualname":"::arch::X86","value":"","parent":null,"children":[],"decl_id":null,"docs":" Intel i386 architecture specific definitions.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2790},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12760,"byte_end":12763,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"EAX","qualname":"::arch::X86::EAX","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2791},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12782,"byte_end":12785,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"ECX","qualname":"::arch::X86::ECX","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2792},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12804,"byte_end":12807,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"EDX","qualname":"::arch::X86::EDX","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2793},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12826,"byte_end":12829,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"name":"EBX","qualname":"::arch::X86::EBX","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2794},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12848,"byte_end":12851,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"ESP","qualname":"::arch::X86::ESP","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2795},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12870,"byte_end":12873,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"EBP","qualname":"::arch::X86::EBP","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2796},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12892,"byte_end":12895,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"ESI","qualname":"::arch::X86::ESI","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2797},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":12914,"byte_end":12917,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"EDI","qualname":"::arch::X86::EDI","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2798},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13033,"byte_end":13035,"line_start":69,"line_end":69,"column_start":5,"column_end":7},"name":"RA","qualname":"::arch::X86::RA","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2799},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13054,"byte_end":13057,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"ST0","qualname":"::arch::X86::ST0","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2800},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13077,"byte_end":13080,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"ST1","qualname":"::arch::X86::ST1","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2801},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13100,"byte_end":13103,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"ST2","qualname":"::arch::X86::ST2","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2802},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13123,"byte_end":13126,"line_start":74,"line_end":74,"column_start":5,"column_end":8},"name":"ST3","qualname":"::arch::X86::ST3","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2803},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13146,"byte_end":13149,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"ST4","qualname":"::arch::X86::ST4","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2804},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13169,"byte_end":13172,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"name":"ST5","qualname":"::arch::X86::ST5","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2805},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13192,"byte_end":13195,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"ST6","qualname":"::arch::X86::ST6","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2806},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13215,"byte_end":13218,"line_start":78,"line_end":78,"column_start":5,"column_end":8},"name":"ST7","qualname":"::arch::X86::ST7","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2807},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13239,"byte_end":13243,"line_start":80,"line_end":80,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::arch::X86::XMM0","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2808},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13264,"byte_end":13268,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"XMM1","qualname":"::arch::X86::XMM1","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2809},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13289,"byte_end":13293,"line_start":82,"line_end":82,"column_start":5,"column_end":9},"name":"XMM2","qualname":"::arch::X86::XMM2","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2810},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13314,"byte_end":13318,"line_start":83,"line_end":83,"column_start":5,"column_end":9},"name":"XMM3","qualname":"::arch::X86::XMM3","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2811},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13339,"byte_end":13343,"line_start":84,"line_end":84,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::arch::X86::XMM4","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2812},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13364,"byte_end":13368,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"XMM5","qualname":"::arch::X86::XMM5","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2813},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13389,"byte_end":13393,"line_start":86,"line_end":86,"column_start":5,"column_end":9},"name":"XMM6","qualname":"::arch::X86::XMM6","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2814},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13414,"byte_end":13418,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"XMM7","qualname":"::arch::X86::XMM7","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2815},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13440,"byte_end":13443,"line_start":89,"line_end":89,"column_start":5,"column_end":8},"name":"MM0","qualname":"::arch::X86::MM0","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2816},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13463,"byte_end":13466,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"MM1","qualname":"::arch::X86::MM1","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2817},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13486,"byte_end":13489,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"MM2","qualname":"::arch::X86::MM2","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2818},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13509,"byte_end":13512,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"MM3","qualname":"::arch::X86::MM3","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2819},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13532,"byte_end":13535,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"MM4","qualname":"::arch::X86::MM4","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2820},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13555,"byte_end":13558,"line_start":94,"line_end":94,"column_start":5,"column_end":8},"name":"MM5","qualname":"::arch::X86::MM5","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2821},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13578,"byte_end":13581,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"MM6","qualname":"::arch::X86::MM6","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2822},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13601,"byte_end":13604,"line_start":96,"line_end":96,"column_start":5,"column_end":8},"name":"MM7","qualname":"::arch::X86::MM7","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2823},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13625,"byte_end":13630,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"MXCSR","qualname":"::arch::X86::MXCSR","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2824},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13653,"byte_end":13655,"line_start":100,"line_end":100,"column_start":5,"column_end":7},"name":"ES","qualname":"::arch::X86::ES","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2825},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13674,"byte_end":13676,"line_start":101,"line_end":101,"column_start":5,"column_end":7},"name":"CS","qualname":"::arch::X86::CS","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2826},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13695,"byte_end":13697,"line_start":102,"line_end":102,"column_start":5,"column_end":7},"name":"SS","qualname":"::arch::X86::SS","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2827},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13716,"byte_end":13718,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"DS","qualname":"::arch::X86::DS","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2828},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13737,"byte_end":13739,"line_start":104,"line_end":104,"column_start":5,"column_end":7},"name":"FS","qualname":"::arch::X86::FS","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2829},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13758,"byte_end":13760,"line_start":105,"line_end":105,"column_start":5,"column_end":7},"name":"GS","qualname":"::arch::X86::GS","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2830},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13780,"byte_end":13782,"line_start":107,"line_end":107,"column_start":5,"column_end":7},"name":"TR","qualname":"::arch::X86::TR","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2831},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13801,"byte_end":13805,"line_start":108,"line_end":108,"column_start":5,"column_end":9},"name":"LDTR","qualname":"::arch::X86::LDTR","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2832},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13827,"byte_end":13834,"line_start":110,"line_end":110,"column_start":5,"column_end":12},"name":"FS_BASE","qualname":"::arch::X86::FS_BASE","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2833},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":13858,"byte_end":13865,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"GS_BASE","qualname":"::arch::X86::GS_BASE","value":"Register","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2836},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14093,"byte_end":14099,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"X86_64","qualname":"::arch::X86_64","value":"","parent":null,"children":[],"decl_id":null,"docs":" AMD64 architecture specific definitions.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2844},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14127,"byte_end":14130,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"RAX","qualname":"::arch::X86_64::RAX","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2845},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14149,"byte_end":14152,"line_start":122,"line_end":122,"column_start":5,"column_end":8},"name":"RDX","qualname":"::arch::X86_64::RDX","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2846},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14171,"byte_end":14174,"line_start":123,"line_end":123,"column_start":5,"column_end":8},"name":"RCX","qualname":"::arch::X86_64::RCX","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2847},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14193,"byte_end":14196,"line_start":124,"line_end":124,"column_start":5,"column_end":8},"name":"RBX","qualname":"::arch::X86_64::RBX","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2848},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14215,"byte_end":14218,"line_start":125,"line_end":125,"column_start":5,"column_end":8},"name":"RSI","qualname":"::arch::X86_64::RSI","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2849},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14237,"byte_end":14240,"line_start":126,"line_end":126,"column_start":5,"column_end":8},"name":"RDI","qualname":"::arch::X86_64::RDI","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2850},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14259,"byte_end":14262,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RBP","qualname":"::arch::X86_64::RBP","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2851},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14281,"byte_end":14284,"line_start":128,"line_end":128,"column_start":5,"column_end":8},"name":"RSP","qualname":"::arch::X86_64::RSP","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2852},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14304,"byte_end":14306,"line_start":130,"line_end":130,"column_start":5,"column_end":7},"name":"R8","qualname":"::arch::X86_64::R8","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2853},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14324,"byte_end":14326,"line_start":131,"line_end":131,"column_start":5,"column_end":7},"name":"R9","qualname":"::arch::X86_64::R9","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2854},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14344,"byte_end":14347,"line_start":132,"line_end":132,"column_start":5,"column_end":8},"name":"R10","qualname":"::arch::X86_64::R10","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2855},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14367,"byte_end":14370,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"R11","qualname":"::arch::X86_64::R11","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2856},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14390,"byte_end":14393,"line_start":134,"line_end":134,"column_start":5,"column_end":8},"name":"R12","qualname":"::arch::X86_64::R12","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2857},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14413,"byte_end":14416,"line_start":135,"line_end":135,"column_start":5,"column_end":8},"name":"R13","qualname":"::arch::X86_64::R13","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2858},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14436,"byte_end":14439,"line_start":136,"line_end":136,"column_start":5,"column_end":8},"name":"R14","qualname":"::arch::X86_64::R14","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2859},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14459,"byte_end":14462,"line_start":137,"line_end":137,"column_start":5,"column_end":8},"name":"R15","qualname":"::arch::X86_64::R15","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2860},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14579,"byte_end":14581,"line_start":140,"line_end":140,"column_start":5,"column_end":7},"name":"RA","qualname":"::arch::X86_64::RA","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2861},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14601,"byte_end":14605,"line_start":142,"line_end":142,"column_start":5,"column_end":9},"name":"XMM0","qualname":"::arch::X86_64::XMM0","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2862},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14626,"byte_end":14630,"line_start":143,"line_end":143,"column_start":5,"column_end":9},"name":"XMM1","qualname":"::arch::X86_64::XMM1","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2863},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14651,"byte_end":14655,"line_start":144,"line_end":144,"column_start":5,"column_end":9},"name":"XMM2","qualname":"::arch::X86_64::XMM2","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2864},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14676,"byte_end":14680,"line_start":145,"line_end":145,"column_start":5,"column_end":9},"name":"XMM3","qualname":"::arch::X86_64::XMM3","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2865},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14701,"byte_end":14705,"line_start":146,"line_end":146,"column_start":5,"column_end":9},"name":"XMM4","qualname":"::arch::X86_64::XMM4","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2866},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14726,"byte_end":14730,"line_start":147,"line_end":147,"column_start":5,"column_end":9},"name":"XMM5","qualname":"::arch::X86_64::XMM5","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2867},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14751,"byte_end":14755,"line_start":148,"line_end":148,"column_start":5,"column_end":9},"name":"XMM6","qualname":"::arch::X86_64::XMM6","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2868},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14776,"byte_end":14780,"line_start":149,"line_end":149,"column_start":5,"column_end":9},"name":"XMM7","qualname":"::arch::X86_64::XMM7","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2869},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14802,"byte_end":14806,"line_start":151,"line_end":151,"column_start":5,"column_end":9},"name":"XMM8","qualname":"::arch::X86_64::XMM8","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2870},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14827,"byte_end":14831,"line_start":152,"line_end":152,"column_start":5,"column_end":9},"name":"XMM9","qualname":"::arch::X86_64::XMM9","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2871},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14852,"byte_end":14857,"line_start":153,"line_end":153,"column_start":5,"column_end":10},"name":"XMM10","qualname":"::arch::X86_64::XMM10","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2872},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14879,"byte_end":14884,"line_start":154,"line_end":154,"column_start":5,"column_end":10},"name":"XMM11","qualname":"::arch::X86_64::XMM11","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2873},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14906,"byte_end":14911,"line_start":155,"line_end":155,"column_start":5,"column_end":10},"name":"XMM12","qualname":"::arch::X86_64::XMM12","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2874},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14933,"byte_end":14938,"line_start":156,"line_end":156,"column_start":5,"column_end":10},"name":"XMM13","qualname":"::arch::X86_64::XMM13","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2875},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14960,"byte_end":14965,"line_start":157,"line_end":157,"column_start":5,"column_end":10},"name":"XMM14","qualname":"::arch::X86_64::XMM14","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2876},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":14987,"byte_end":14992,"line_start":158,"line_end":158,"column_start":5,"column_end":10},"name":"XMM15","qualname":"::arch::X86_64::XMM15","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2877},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15015,"byte_end":15018,"line_start":160,"line_end":160,"column_start":5,"column_end":8},"name":"ST0","qualname":"::arch::X86_64::ST0","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2878},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15038,"byte_end":15041,"line_start":161,"line_end":161,"column_start":5,"column_end":8},"name":"ST1","qualname":"::arch::X86_64::ST1","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2879},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15061,"byte_end":15064,"line_start":162,"line_end":162,"column_start":5,"column_end":8},"name":"ST2","qualname":"::arch::X86_64::ST2","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2880},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15084,"byte_end":15087,"line_start":163,"line_end":163,"column_start":5,"column_end":8},"name":"ST3","qualname":"::arch::X86_64::ST3","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2881},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15107,"byte_end":15110,"line_start":164,"line_end":164,"column_start":5,"column_end":8},"name":"ST4","qualname":"::arch::X86_64::ST4","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2882},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15130,"byte_end":15133,"line_start":165,"line_end":165,"column_start":5,"column_end":8},"name":"ST5","qualname":"::arch::X86_64::ST5","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2883},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15153,"byte_end":15156,"line_start":166,"line_end":166,"column_start":5,"column_end":8},"name":"ST6","qualname":"::arch::X86_64::ST6","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2884},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15176,"byte_end":15179,"line_start":167,"line_end":167,"column_start":5,"column_end":8},"name":"ST7","qualname":"::arch::X86_64::ST7","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2885},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15200,"byte_end":15203,"line_start":169,"line_end":169,"column_start":5,"column_end":8},"name":"MM0","qualname":"::arch::X86_64::MM0","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2886},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15223,"byte_end":15226,"line_start":170,"line_end":170,"column_start":5,"column_end":8},"name":"MM1","qualname":"::arch::X86_64::MM1","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2887},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15246,"byte_end":15249,"line_start":171,"line_end":171,"column_start":5,"column_end":8},"name":"MM2","qualname":"::arch::X86_64::MM2","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2888},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15269,"byte_end":15272,"line_start":172,"line_end":172,"column_start":5,"column_end":8},"name":"MM3","qualname":"::arch::X86_64::MM3","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2889},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15292,"byte_end":15295,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"MM4","qualname":"::arch::X86_64::MM4","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2890},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15315,"byte_end":15318,"line_start":174,"line_end":174,"column_start":5,"column_end":8},"name":"MM5","qualname":"::arch::X86_64::MM5","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2891},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15338,"byte_end":15341,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"MM6","qualname":"::arch::X86_64::MM6","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2892},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15361,"byte_end":15364,"line_start":176,"line_end":176,"column_start":5,"column_end":8},"name":"MM7","qualname":"::arch::X86_64::MM7","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2893},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15385,"byte_end":15391,"line_start":178,"line_end":178,"column_start":5,"column_end":11},"name":"RFLAGS","qualname":"::arch::X86_64::RFLAGS","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2894},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15414,"byte_end":15416,"line_start":179,"line_end":179,"column_start":5,"column_end":7},"name":"ES","qualname":"::arch::X86_64::ES","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2895},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15435,"byte_end":15437,"line_start":180,"line_end":180,"column_start":5,"column_end":7},"name":"CS","qualname":"::arch::X86_64::CS","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2896},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15456,"byte_end":15458,"line_start":181,"line_end":181,"column_start":5,"column_end":7},"name":"SS","qualname":"::arch::X86_64::SS","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2897},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15477,"byte_end":15479,"line_start":182,"line_end":182,"column_start":5,"column_end":7},"name":"DS","qualname":"::arch::X86_64::DS","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2898},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15498,"byte_end":15500,"line_start":183,"line_end":183,"column_start":5,"column_end":7},"name":"FS","qualname":"::arch::X86_64::FS","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2899},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15519,"byte_end":15521,"line_start":184,"line_end":184,"column_start":5,"column_end":7},"name":"GS","qualname":"::arch::X86_64::GS","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2900},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15541,"byte_end":15548,"line_start":186,"line_end":186,"column_start":5,"column_end":12},"name":"FS_BASE","qualname":"::arch::X86_64::FS_BASE","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2901},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15572,"byte_end":15579,"line_start":187,"line_end":187,"column_start":5,"column_end":12},"name":"GS_BASE","qualname":"::arch::X86_64::GS_BASE","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2902},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15604,"byte_end":15606,"line_start":189,"line_end":189,"column_start":5,"column_end":7},"name":"TR","qualname":"::arch::X86_64::TR","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2903},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15625,"byte_end":15629,"line_start":190,"line_end":190,"column_start":5,"column_end":9},"name":"LDTR","qualname":"::arch::X86_64::LDTR","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2904},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15650,"byte_end":15655,"line_start":191,"line_end":191,"column_start":5,"column_end":10},"name":"MXCSR","qualname":"::arch::X86_64::MXCSR","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2905},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15677,"byte_end":15680,"line_start":192,"line_end":192,"column_start":5,"column_end":8},"name":"FCW","qualname":"::arch::X86_64::FCW","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2906},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15700,"byte_end":15703,"line_start":193,"line_end":193,"column_start":5,"column_end":8},"name":"FSW","qualname":"::arch::X86_64::FSW","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2907},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15724,"byte_end":15729,"line_start":195,"line_end":195,"column_start":5,"column_end":10},"name":"XMM16","qualname":"::arch::X86_64::XMM16","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2908},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15751,"byte_end":15756,"line_start":196,"line_end":196,"column_start":5,"column_end":10},"name":"XMM17","qualname":"::arch::X86_64::XMM17","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2909},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15778,"byte_end":15783,"line_start":197,"line_end":197,"column_start":5,"column_end":10},"name":"XMM18","qualname":"::arch::X86_64::XMM18","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2910},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15805,"byte_end":15810,"line_start":198,"line_end":198,"column_start":5,"column_end":10},"name":"XMM19","qualname":"::arch::X86_64::XMM19","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2911},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15832,"byte_end":15837,"line_start":199,"line_end":199,"column_start":5,"column_end":10},"name":"XMM20","qualname":"::arch::X86_64::XMM20","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2912},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15859,"byte_end":15864,"line_start":200,"line_end":200,"column_start":5,"column_end":10},"name":"XMM21","qualname":"::arch::X86_64::XMM21","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2913},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15886,"byte_end":15891,"line_start":201,"line_end":201,"column_start":5,"column_end":10},"name":"XMM22","qualname":"::arch::X86_64::XMM22","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2914},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15913,"byte_end":15918,"line_start":202,"line_end":202,"column_start":5,"column_end":10},"name":"XMM23","qualname":"::arch::X86_64::XMM23","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2915},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15940,"byte_end":15945,"line_start":203,"line_end":203,"column_start":5,"column_end":10},"name":"XMM24","qualname":"::arch::X86_64::XMM24","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2916},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15967,"byte_end":15972,"line_start":204,"line_end":204,"column_start":5,"column_end":10},"name":"XMM25","qualname":"::arch::X86_64::XMM25","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2917},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":15994,"byte_end":15999,"line_start":205,"line_end":205,"column_start":5,"column_end":10},"name":"XMM26","qualname":"::arch::X86_64::XMM26","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2918},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16021,"byte_end":16026,"line_start":206,"line_end":206,"column_start":5,"column_end":10},"name":"XMM27","qualname":"::arch::X86_64::XMM27","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2919},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16048,"byte_end":16053,"line_start":207,"line_end":207,"column_start":5,"column_end":10},"name":"XMM28","qualname":"::arch::X86_64::XMM28","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2920},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16075,"byte_end":16080,"line_start":208,"line_end":208,"column_start":5,"column_end":10},"name":"XMM29","qualname":"::arch::X86_64::XMM29","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2921},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16102,"byte_end":16107,"line_start":209,"line_end":209,"column_start":5,"column_end":10},"name":"XMM30","qualname":"::arch::X86_64::XMM30","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2922},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16129,"byte_end":16134,"line_start":210,"line_end":210,"column_start":5,"column_end":10},"name":"XMM31","qualname":"::arch::X86_64::XMM31","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2923},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16157,"byte_end":16159,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"K0","qualname":"::arch::X86_64::K0","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2924},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16179,"byte_end":16181,"line_start":213,"line_end":213,"column_start":5,"column_end":7},"name":"K1","qualname":"::arch::X86_64::K1","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2925},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16201,"byte_end":16203,"line_start":214,"line_end":214,"column_start":5,"column_end":7},"name":"K2","qualname":"::arch::X86_64::K2","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2926},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16223,"byte_end":16225,"line_start":215,"line_end":215,"column_start":5,"column_end":7},"name":"K3","qualname":"::arch::X86_64::K3","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2927},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16245,"byte_end":16247,"line_start":216,"line_end":216,"column_start":5,"column_end":7},"name":"K4","qualname":"::arch::X86_64::K4","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2928},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16267,"byte_end":16269,"line_start":217,"line_end":217,"column_start":5,"column_end":7},"name":"K5","qualname":"::arch::X86_64::K5","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2929},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16289,"byte_end":16291,"line_start":218,"line_end":218,"column_start":5,"column_end":7},"name":"K6","qualname":"::arch::X86_64::K6","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2930},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/arch.rs","byte_start":16311,"byte_end":16313,"line_start":219,"line_end":219,"column_start":5,"column_end":7},"name":"K7","qualname":"::arch::X86_64::K7","value":"Register","parent":{"krate":0,"index":2843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":2945},{"krate":0,"index":2969},{"krate":0,"index":2967},{"krate":0,"index":2966},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2956},{"krate":0,"index":2950},{"krate":0,"index":2948},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2943},{"krate":0,"index":3007},{"krate":0,"index":3031},{"krate":0,"index":3029},{"krate":0,"index":3028},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3018},{"krate":0,"index":3012},{"krate":0,"index":3010},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3039},{"krate":0,"index":3063},{"krate":0,"index":3061},{"krate":0,"index":3060},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3050},{"krate":0,"index":3044},{"krate":0,"index":3042},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3037},{"krate":0,"index":3182},{"krate":0,"index":3206},{"krate":0,"index":3204},{"krate":0,"index":3203},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3193},{"krate":0,"index":3187},{"krate":0,"index":3185},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3180},{"krate":0,"index":3477},{"krate":0,"index":3501},{"krate":0,"index":3499},{"krate":0,"index":3498},{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3488},{"krate":0,"index":3482},{"krate":0,"index":3480},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3475},{"krate":0,"index":3555},{"krate":0,"index":3579},{"krate":0,"index":3577},{"krate":0,"index":3576},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3566},{"krate":0,"index":3560},{"krate":0,"index":3558},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3605},{"krate":0,"index":3629},{"krate":0,"index":3627},{"krate":0,"index":3626},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3616},{"krate":0,"index":3610},{"krate":0,"index":3608},{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3645},{"krate":0,"index":3669},{"krate":0,"index":3667},{"krate":0,"index":3666},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3656},{"krate":0,"index":3650},{"krate":0,"index":3648},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641},{"krate":0,"index":3643},{"krate":0,"index":3680},{"krate":0,"index":3704},{"krate":0,"index":3702},{"krate":0,"index":3701},{"krate":0,"index":3697},{"krate":0,"index":3698},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3691},{"krate":0,"index":3685},{"krate":0,"index":3683},{"krate":0,"index":3671},{"krate":0,"index":3672},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3678},{"krate":0,"index":3715},{"krate":0,"index":3739},{"krate":0,"index":3737},{"krate":0,"index":3736},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3726},{"krate":0,"index":3720},{"krate":0,"index":3718},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3748},{"krate":0,"index":3772},{"krate":0,"index":3770},{"krate":0,"index":3769},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3759},{"krate":0,"index":3753},{"krate":0,"index":3751},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3746},{"krate":0,"index":3781},{"krate":0,"index":3805},{"krate":0,"index":3803},{"krate":0,"index":3802},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3792},{"krate":0,"index":3786},{"krate":0,"index":3784},{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3779},{"krate":0,"index":3814},{"krate":0,"index":3838},{"krate":0,"index":3836},{"krate":0,"index":3835},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3825},{"krate":0,"index":3819},{"krate":0,"index":3817},{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3812},{"krate":0,"index":3888},{"krate":0,"index":3912},{"krate":0,"index":3910},{"krate":0,"index":3909},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3899},{"krate":0,"index":3893},{"krate":0,"index":3891},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3886},{"krate":0,"index":36},{"krate":0,"index":3919},{"krate":0,"index":3943},{"krate":0,"index":3941},{"krate":0,"index":3940},{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3930},{"krate":0,"index":3924},{"krate":0,"index":3922},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3917},{"krate":0,"index":3953},{"krate":0,"index":3977},{"krate":0,"index":3975},{"krate":0,"index":3974},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3964},{"krate":0,"index":3958},{"krate":0,"index":3956},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3951},{"krate":0,"index":3990},{"krate":0,"index":4014},{"krate":0,"index":4012},{"krate":0,"index":4011},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4001},{"krate":0,"index":3995},{"krate":0,"index":3993},{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3988},{"krate":0,"index":4024},{"krate":0,"index":4048},{"krate":0,"index":4046},{"krate":0,"index":4045},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4038},{"krate":0,"index":4039},{"krate":0,"index":4035},{"krate":0,"index":4029},{"krate":0,"index":4027},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4022},{"krate":0,"index":4056},{"krate":0,"index":4080},{"krate":0,"index":4078},{"krate":0,"index":4077},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4067},{"krate":0,"index":4061},{"krate":0,"index":4059},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4054},{"krate":0,"index":4088},{"krate":0,"index":4112},{"krate":0,"index":4110},{"krate":0,"index":4109},{"krate":0,"index":4105},{"krate":0,"index":4106},{"krate":0,"index":4102},{"krate":0,"index":4103},{"krate":0,"index":4099},{"krate":0,"index":4093},{"krate":0,"index":4091},{"krate":0,"index":4082},{"krate":0,"index":4083},{"krate":0,"index":4084},{"krate":0,"index":4086},{"krate":0,"index":4125},{"krate":0,"index":4149},{"krate":0,"index":4147},{"krate":0,"index":4146},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4136},{"krate":0,"index":4130},{"krate":0,"index":4128},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4123},{"krate":0,"index":4158},{"krate":0,"index":4182},{"krate":0,"index":4180},{"krate":0,"index":4179},{"krate":0,"index":4175},{"krate":0,"index":4176},{"krate":0,"index":4172},{"krate":0,"index":4173},{"krate":0,"index":4169},{"krate":0,"index":4163},{"krate":0,"index":4161},{"krate":0,"index":4151},{"krate":0,"index":4152},{"krate":0,"index":4153},{"krate":0,"index":4154},{"krate":0,"index":4156},{"krate":0,"index":4200},{"krate":0,"index":4224},{"krate":0,"index":4222},{"krate":0,"index":4221},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4211},{"krate":0,"index":4205},{"krate":0,"index":4203},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4198},{"krate":0,"index":4236},{"krate":0,"index":4260},{"krate":0,"index":4258},{"krate":0,"index":4257},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4247},{"krate":0,"index":4241},{"krate":0,"index":4239},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4229},{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4234},{"krate":0,"index":4273},{"krate":0,"index":4297},{"krate":0,"index":4295},{"krate":0,"index":4294},{"krate":0,"index":4290},{"krate":0,"index":4291},{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":4284},{"krate":0,"index":4278},{"krate":0,"index":4276},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4271},{"krate":0,"index":4317},{"krate":0,"index":4341},{"krate":0,"index":4339},{"krate":0,"index":4338},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4328},{"krate":0,"index":4322},{"krate":0,"index":4320},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4312},{"krate":0,"index":4313},{"krate":0,"index":4315},{"krate":0,"index":4355},{"krate":0,"index":4379},{"krate":0,"index":4377},{"krate":0,"index":4376},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4366},{"krate":0,"index":4360},{"krate":0,"index":4358},{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4353},{"krate":0,"index":4558},{"krate":0,"index":4582},{"krate":0,"index":4580},{"krate":0,"index":4579},{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4569},{"krate":0,"index":4563},{"krate":0,"index":4561},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4384},{"krate":0,"index":4385},{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4400},{"krate":0,"index":4401},{"krate":0,"index":4402},{"krate":0,"index":4403},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4422},{"krate":0,"index":4423},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4426},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4501},{"krate":0,"index":4502},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519},{"krate":0,"index":4520},{"krate":0,"index":4521},{"krate":0,"index":4522},{"krate":0,"index":4523},{"krate":0,"index":4524},{"krate":0,"index":4525},{"krate":0,"index":4526},{"krate":0,"index":4527},{"krate":0,"index":4528},{"krate":0,"index":4529},{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4556},{"krate":0,"index":4604},{"krate":0,"index":4628},{"krate":0,"index":4626},{"krate":0,"index":4625},{"krate":0,"index":4621},{"krate":0,"index":4622},{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4615},{"krate":0,"index":4609},{"krate":0,"index":4607},{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4602},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"decl_id":null,"docs":" Constant definitions.","sig":null,"attributes":[{"value":"allow(non_upper_case_globals)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":17281,"byte_end":17314,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"allow(missing_docs)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":17315,"byte_end":17338,"line_start":26,"line_end":26,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2945},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19263,"byte_end":19267,"line_start":97,"line_end":97,"column_start":1,"column_end":5},"name":"DwUt","qualname":"::constants::DwUt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The unit type field in a unit header.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2933},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19278,"byte_end":19291,"line_start":98,"line_end":98,"column_start":5,"column_end":18},"name":"DW_UT_compile","qualname":"::constants::DW_UT_compile","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2934},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19304,"byte_end":19314,"line_start":99,"line_end":99,"column_start":5,"column_end":15},"name":"DW_UT_type","qualname":"::constants::DW_UT_type","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2935},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19327,"byte_end":19340,"line_start":100,"line_end":100,"column_start":5,"column_end":18},"name":"DW_UT_partial","qualname":"::constants::DW_UT_partial","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2936},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19353,"byte_end":19367,"line_start":101,"line_end":101,"column_start":5,"column_end":19},"name":"DW_UT_skeleton","qualname":"::constants::DW_UT_skeleton","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2937},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19380,"byte_end":19399,"line_start":102,"line_end":102,"column_start":5,"column_end":24},"name":"DW_UT_split_compile","qualname":"::constants::DW_UT_split_compile","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2938},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19412,"byte_end":19428,"line_start":103,"line_end":103,"column_start":5,"column_end":21},"name":"DW_UT_split_type","qualname":"::constants::DW_UT_split_type","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2939},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19441,"byte_end":19454,"line_start":104,"line_end":104,"column_start":5,"column_end":18},"name":"DW_UT_lo_user","qualname":"::constants::DW_UT_lo_user","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2940},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19467,"byte_end":19480,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"DW_UT_hi_user","qualname":"::constants::DW_UT_hi_user","value":"DwUt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3007},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19877,"byte_end":19882,"line_start":116,"line_end":116,"column_start":1,"column_end":6},"name":"DwCfa","qualname":"::constants::DwCfa","value":"","parent":null,"children":[],"decl_id":null,"docs":" The opcode for a call frame instruction.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2971},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19893,"byte_end":19911,"line_start":117,"line_end":117,"column_start":5,"column_end":23},"name":"DW_CFA_advance_loc","qualname":"::constants::DW_CFA_advance_loc","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2972},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19929,"byte_end":19942,"line_start":118,"line_end":118,"column_start":5,"column_end":18},"name":"DW_CFA_offset","qualname":"::constants::DW_CFA_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2973},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19960,"byte_end":19974,"line_start":119,"line_end":119,"column_start":5,"column_end":19},"name":"DW_CFA_restore","qualname":"::constants::DW_CFA_restore","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2974},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":19992,"byte_end":20002,"line_start":120,"line_end":120,"column_start":5,"column_end":15},"name":"DW_CFA_nop","qualname":"::constants::DW_CFA_nop","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2975},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20012,"byte_end":20026,"line_start":121,"line_end":121,"column_start":5,"column_end":19},"name":"DW_CFA_set_loc","qualname":"::constants::DW_CFA_set_loc","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2976},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20039,"byte_end":20058,"line_start":122,"line_end":122,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc1","qualname":"::constants::DW_CFA_advance_loc1","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2977},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20071,"byte_end":20090,"line_start":123,"line_end":123,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc2","qualname":"::constants::DW_CFA_advance_loc2","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2978},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20103,"byte_end":20122,"line_start":124,"line_end":124,"column_start":5,"column_end":24},"name":"DW_CFA_advance_loc4","qualname":"::constants::DW_CFA_advance_loc4","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2979},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20135,"byte_end":20157,"line_start":125,"line_end":125,"column_start":5,"column_end":27},"name":"DW_CFA_offset_extended","qualname":"::constants::DW_CFA_offset_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2980},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20170,"byte_end":20193,"line_start":126,"line_end":126,"column_start":5,"column_end":28},"name":"DW_CFA_restore_extended","qualname":"::constants::DW_CFA_restore_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2981},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20206,"byte_end":20222,"line_start":127,"line_end":127,"column_start":5,"column_end":21},"name":"DW_CFA_undefined","qualname":"::constants::DW_CFA_undefined","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2982},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20235,"byte_end":20252,"line_start":128,"line_end":128,"column_start":5,"column_end":22},"name":"DW_CFA_same_value","qualname":"::constants::DW_CFA_same_value","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2983},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20265,"byte_end":20280,"line_start":129,"line_end":129,"column_start":5,"column_end":20},"name":"DW_CFA_register","qualname":"::constants::DW_CFA_register","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2984},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20293,"byte_end":20314,"line_start":130,"line_end":130,"column_start":5,"column_end":26},"name":"DW_CFA_remember_state","qualname":"::constants::DW_CFA_remember_state","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2985},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20327,"byte_end":20347,"line_start":131,"line_end":131,"column_start":5,"column_end":25},"name":"DW_CFA_restore_state","qualname":"::constants::DW_CFA_restore_state","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2986},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20360,"byte_end":20374,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"DW_CFA_def_cfa","qualname":"::constants::DW_CFA_def_cfa","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2987},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20387,"byte_end":20410,"line_start":133,"line_end":133,"column_start":5,"column_end":28},"name":"DW_CFA_def_cfa_register","qualname":"::constants::DW_CFA_def_cfa_register","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2988},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20423,"byte_end":20444,"line_start":134,"line_end":134,"column_start":5,"column_end":26},"name":"DW_CFA_def_cfa_offset","qualname":"::constants::DW_CFA_def_cfa_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2989},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20457,"byte_end":20482,"line_start":135,"line_end":135,"column_start":5,"column_end":30},"name":"DW_CFA_def_cfa_expression","qualname":"::constants::DW_CFA_def_cfa_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2990},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20495,"byte_end":20512,"line_start":136,"line_end":136,"column_start":5,"column_end":22},"name":"DW_CFA_expression","qualname":"::constants::DW_CFA_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2991},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20525,"byte_end":20550,"line_start":137,"line_end":137,"column_start":5,"column_end":30},"name":"DW_CFA_offset_extended_sf","qualname":"::constants::DW_CFA_offset_extended_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2992},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20563,"byte_end":20580,"line_start":138,"line_end":138,"column_start":5,"column_end":22},"name":"DW_CFA_def_cfa_sf","qualname":"::constants::DW_CFA_def_cfa_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2993},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20593,"byte_end":20617,"line_start":139,"line_end":139,"column_start":5,"column_end":29},"name":"DW_CFA_def_cfa_offset_sf","qualname":"::constants::DW_CFA_def_cfa_offset_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2994},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20630,"byte_end":20647,"line_start":140,"line_end":140,"column_start":5,"column_end":22},"name":"DW_CFA_val_offset","qualname":"::constants::DW_CFA_val_offset","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2995},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20660,"byte_end":20680,"line_start":141,"line_end":141,"column_start":5,"column_end":25},"name":"DW_CFA_val_offset_sf","qualname":"::constants::DW_CFA_val_offset_sf","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2996},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20693,"byte_end":20714,"line_start":142,"line_end":142,"column_start":5,"column_end":26},"name":"DW_CFA_val_expression","qualname":"::constants::DW_CFA_val_expression","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2997},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20728,"byte_end":20742,"line_start":144,"line_end":144,"column_start":5,"column_end":19},"name":"DW_CFA_lo_user","qualname":"::constants::DW_CFA_lo_user","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2998},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20755,"byte_end":20769,"line_start":145,"line_end":145,"column_start":5,"column_end":19},"name":"DW_CFA_hi_user","qualname":"::constants::DW_CFA_hi_user","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2999},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20783,"byte_end":20807,"line_start":147,"line_end":147,"column_start":5,"column_end":29},"name":"DW_CFA_MIPS_advance_loc8","qualname":"::constants::DW_CFA_MIPS_advance_loc8","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3000},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20820,"byte_end":20842,"line_start":148,"line_end":148,"column_start":5,"column_end":27},"name":"DW_CFA_GNU_window_save","qualname":"::constants::DW_CFA_GNU_window_save","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3001},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20855,"byte_end":20875,"line_start":149,"line_end":149,"column_start":5,"column_end":25},"name":"DW_CFA_GNU_args_size","qualname":"::constants::DW_CFA_GNU_args_size","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3002},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":20888,"byte_end":20923,"line_start":150,"line_end":150,"column_start":5,"column_end":40},"name":"DW_CFA_GNU_negative_offset_extended","qualname":"::constants::DW_CFA_GNU_negative_offset_extended","value":"DwCfa","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3039},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21038,"byte_end":21048,"line_start":157,"line_end":157,"column_start":1,"column_end":11},"name":"DwChildren","qualname":"::constants::DwChildren","value":"","parent":null,"children":[],"decl_id":null,"docs":" The child determination encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3033},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21059,"byte_end":21073,"line_start":158,"line_end":158,"column_start":5,"column_end":19},"name":"DW_CHILDREN_no","qualname":"::constants::DW_CHILDREN_no","value":"DwChildren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3034},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21083,"byte_end":21098,"line_start":159,"line_end":159,"column_start":5,"column_end":20},"name":"DW_CHILDREN_yes","qualname":"::constants::DW_CHILDREN_yes","value":"DwChildren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3182},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21194,"byte_end":21199,"line_start":166,"line_end":166,"column_start":1,"column_end":6},"name":"DwTag","qualname":"::constants::DwTag","value":"","parent":null,"children":[],"decl_id":null,"docs":" The tag encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3065},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21211,"byte_end":21222,"line_start":167,"line_end":167,"column_start":5,"column_end":16},"name":"DW_TAG_null","qualname":"::constants::DW_TAG_null","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3066},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21236,"byte_end":21253,"line_start":169,"line_end":169,"column_start":5,"column_end":22},"name":"DW_TAG_array_type","qualname":"::constants::DW_TAG_array_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3067},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21266,"byte_end":21283,"line_start":170,"line_end":170,"column_start":5,"column_end":22},"name":"DW_TAG_class_type","qualname":"::constants::DW_TAG_class_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3068},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21296,"byte_end":21314,"line_start":171,"line_end":171,"column_start":5,"column_end":23},"name":"DW_TAG_entry_point","qualname":"::constants::DW_TAG_entry_point","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3069},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21327,"byte_end":21350,"line_start":172,"line_end":172,"column_start":5,"column_end":28},"name":"DW_TAG_enumeration_type","qualname":"::constants::DW_TAG_enumeration_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3070},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21363,"byte_end":21386,"line_start":173,"line_end":173,"column_start":5,"column_end":28},"name":"DW_TAG_formal_parameter","qualname":"::constants::DW_TAG_formal_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3071},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21399,"byte_end":21426,"line_start":174,"line_end":174,"column_start":5,"column_end":32},"name":"DW_TAG_imported_declaration","qualname":"::constants::DW_TAG_imported_declaration","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3072},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21439,"byte_end":21451,"line_start":175,"line_end":175,"column_start":5,"column_end":17},"name":"DW_TAG_label","qualname":"::constants::DW_TAG_label","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3073},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21464,"byte_end":21484,"line_start":176,"line_end":176,"column_start":5,"column_end":25},"name":"DW_TAG_lexical_block","qualname":"::constants::DW_TAG_lexical_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3074},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21497,"byte_end":21510,"line_start":177,"line_end":177,"column_start":5,"column_end":18},"name":"DW_TAG_member","qualname":"::constants::DW_TAG_member","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3075},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21523,"byte_end":21542,"line_start":178,"line_end":178,"column_start":5,"column_end":24},"name":"DW_TAG_pointer_type","qualname":"::constants::DW_TAG_pointer_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3076},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21555,"byte_end":21576,"line_start":179,"line_end":179,"column_start":5,"column_end":26},"name":"DW_TAG_reference_type","qualname":"::constants::DW_TAG_reference_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3077},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21589,"byte_end":21608,"line_start":180,"line_end":180,"column_start":5,"column_end":24},"name":"DW_TAG_compile_unit","qualname":"::constants::DW_TAG_compile_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3078},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21621,"byte_end":21639,"line_start":181,"line_end":181,"column_start":5,"column_end":23},"name":"DW_TAG_string_type","qualname":"::constants::DW_TAG_string_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3079},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21652,"byte_end":21673,"line_start":182,"line_end":182,"column_start":5,"column_end":26},"name":"DW_TAG_structure_type","qualname":"::constants::DW_TAG_structure_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3080},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21686,"byte_end":21708,"line_start":183,"line_end":183,"column_start":5,"column_end":27},"name":"DW_TAG_subroutine_type","qualname":"::constants::DW_TAG_subroutine_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3081},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21721,"byte_end":21735,"line_start":184,"line_end":184,"column_start":5,"column_end":19},"name":"DW_TAG_typedef","qualname":"::constants::DW_TAG_typedef","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3082},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21748,"byte_end":21765,"line_start":185,"line_end":185,"column_start":5,"column_end":22},"name":"DW_TAG_union_type","qualname":"::constants::DW_TAG_union_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3083},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21778,"byte_end":21807,"line_start":186,"line_end":186,"column_start":5,"column_end":34},"name":"DW_TAG_unspecified_parameters","qualname":"::constants::DW_TAG_unspecified_parameters","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3084},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21820,"byte_end":21834,"line_start":187,"line_end":187,"column_start":5,"column_end":19},"name":"DW_TAG_variant","qualname":"::constants::DW_TAG_variant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3085},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21847,"byte_end":21866,"line_start":188,"line_end":188,"column_start":5,"column_end":24},"name":"DW_TAG_common_block","qualname":"::constants::DW_TAG_common_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3086},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21879,"byte_end":21902,"line_start":189,"line_end":189,"column_start":5,"column_end":28},"name":"DW_TAG_common_inclusion","qualname":"::constants::DW_TAG_common_inclusion","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3087},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21915,"byte_end":21933,"line_start":190,"line_end":190,"column_start":5,"column_end":23},"name":"DW_TAG_inheritance","qualname":"::constants::DW_TAG_inheritance","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3088},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21946,"byte_end":21971,"line_start":191,"line_end":191,"column_start":5,"column_end":30},"name":"DW_TAG_inlined_subroutine","qualname":"::constants::DW_TAG_inlined_subroutine","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3089},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":21984,"byte_end":21997,"line_start":192,"line_end":192,"column_start":5,"column_end":18},"name":"DW_TAG_module","qualname":"::constants::DW_TAG_module","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3090},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22010,"byte_end":22035,"line_start":193,"line_end":193,"column_start":5,"column_end":30},"name":"DW_TAG_ptr_to_member_type","qualname":"::constants::DW_TAG_ptr_to_member_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3091},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22048,"byte_end":22063,"line_start":194,"line_end":194,"column_start":5,"column_end":20},"name":"DW_TAG_set_type","qualname":"::constants::DW_TAG_set_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3092},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22076,"byte_end":22096,"line_start":195,"line_end":195,"column_start":5,"column_end":25},"name":"DW_TAG_subrange_type","qualname":"::constants::DW_TAG_subrange_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3093},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22109,"byte_end":22125,"line_start":196,"line_end":196,"column_start":5,"column_end":21},"name":"DW_TAG_with_stmt","qualname":"::constants::DW_TAG_with_stmt","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3094},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22138,"byte_end":22163,"line_start":197,"line_end":197,"column_start":5,"column_end":30},"name":"DW_TAG_access_declaration","qualname":"::constants::DW_TAG_access_declaration","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3095},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22176,"byte_end":22192,"line_start":198,"line_end":198,"column_start":5,"column_end":21},"name":"DW_TAG_base_type","qualname":"::constants::DW_TAG_base_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3096},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22205,"byte_end":22223,"line_start":199,"line_end":199,"column_start":5,"column_end":23},"name":"DW_TAG_catch_block","qualname":"::constants::DW_TAG_catch_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3097},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22236,"byte_end":22253,"line_start":200,"line_end":200,"column_start":5,"column_end":22},"name":"DW_TAG_const_type","qualname":"::constants::DW_TAG_const_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3098},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22266,"byte_end":22281,"line_start":201,"line_end":201,"column_start":5,"column_end":20},"name":"DW_TAG_constant","qualname":"::constants::DW_TAG_constant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3099},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22294,"byte_end":22311,"line_start":202,"line_end":202,"column_start":5,"column_end":22},"name":"DW_TAG_enumerator","qualname":"::constants::DW_TAG_enumerator","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3100},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22324,"byte_end":22340,"line_start":203,"line_end":203,"column_start":5,"column_end":21},"name":"DW_TAG_file_type","qualname":"::constants::DW_TAG_file_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3101},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22353,"byte_end":22366,"line_start":204,"line_end":204,"column_start":5,"column_end":18},"name":"DW_TAG_friend","qualname":"::constants::DW_TAG_friend","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3102},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22379,"byte_end":22394,"line_start":205,"line_end":205,"column_start":5,"column_end":20},"name":"DW_TAG_namelist","qualname":"::constants::DW_TAG_namelist","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3103},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22407,"byte_end":22427,"line_start":206,"line_end":206,"column_start":5,"column_end":25},"name":"DW_TAG_namelist_item","qualname":"::constants::DW_TAG_namelist_item","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3104},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22440,"byte_end":22458,"line_start":207,"line_end":207,"column_start":5,"column_end":23},"name":"DW_TAG_packed_type","qualname":"::constants::DW_TAG_packed_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3105},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22471,"byte_end":22488,"line_start":208,"line_end":208,"column_start":5,"column_end":22},"name":"DW_TAG_subprogram","qualname":"::constants::DW_TAG_subprogram","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3106},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22501,"byte_end":22531,"line_start":209,"line_end":209,"column_start":5,"column_end":35},"name":"DW_TAG_template_type_parameter","qualname":"::constants::DW_TAG_template_type_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3107},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22544,"byte_end":22575,"line_start":210,"line_end":210,"column_start":5,"column_end":36},"name":"DW_TAG_template_value_parameter","qualname":"::constants::DW_TAG_template_value_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3108},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22588,"byte_end":22606,"line_start":211,"line_end":211,"column_start":5,"column_end":23},"name":"DW_TAG_thrown_type","qualname":"::constants::DW_TAG_thrown_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3109},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22619,"byte_end":22635,"line_start":212,"line_end":212,"column_start":5,"column_end":21},"name":"DW_TAG_try_block","qualname":"::constants::DW_TAG_try_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3110},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22648,"byte_end":22667,"line_start":213,"line_end":213,"column_start":5,"column_end":24},"name":"DW_TAG_variant_part","qualname":"::constants::DW_TAG_variant_part","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3111},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22680,"byte_end":22695,"line_start":214,"line_end":214,"column_start":5,"column_end":20},"name":"DW_TAG_variable","qualname":"::constants::DW_TAG_variable","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3112},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22708,"byte_end":22728,"line_start":215,"line_end":215,"column_start":5,"column_end":25},"name":"DW_TAG_volatile_type","qualname":"::constants::DW_TAG_volatile_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3113},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22754,"byte_end":22776,"line_start":218,"line_end":218,"column_start":5,"column_end":27},"name":"DW_TAG_dwarf_procedure","qualname":"::constants::DW_TAG_dwarf_procedure","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3114},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22789,"byte_end":22809,"line_start":219,"line_end":219,"column_start":5,"column_end":25},"name":"DW_TAG_restrict_type","qualname":"::constants::DW_TAG_restrict_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3115},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22822,"byte_end":22843,"line_start":220,"line_end":220,"column_start":5,"column_end":26},"name":"DW_TAG_interface_type","qualname":"::constants::DW_TAG_interface_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3116},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22856,"byte_end":22872,"line_start":221,"line_end":221,"column_start":5,"column_end":21},"name":"DW_TAG_namespace","qualname":"::constants::DW_TAG_namespace","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3117},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22885,"byte_end":22907,"line_start":222,"line_end":222,"column_start":5,"column_end":27},"name":"DW_TAG_imported_module","qualname":"::constants::DW_TAG_imported_module","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3118},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22920,"byte_end":22943,"line_start":223,"line_end":223,"column_start":5,"column_end":28},"name":"DW_TAG_unspecified_type","qualname":"::constants::DW_TAG_unspecified_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3119},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22956,"byte_end":22975,"line_start":224,"line_end":224,"column_start":5,"column_end":24},"name":"DW_TAG_partial_unit","qualname":"::constants::DW_TAG_partial_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3120},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":22988,"byte_end":23008,"line_start":225,"line_end":225,"column_start":5,"column_end":25},"name":"DW_TAG_imported_unit","qualname":"::constants::DW_TAG_imported_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3121},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23021,"byte_end":23037,"line_start":226,"line_end":226,"column_start":5,"column_end":21},"name":"DW_TAG_condition","qualname":"::constants::DW_TAG_condition","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3122},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23050,"byte_end":23068,"line_start":227,"line_end":227,"column_start":5,"column_end":23},"name":"DW_TAG_shared_type","qualname":"::constants::DW_TAG_shared_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3123},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23094,"byte_end":23110,"line_start":230,"line_end":230,"column_start":5,"column_end":21},"name":"DW_TAG_type_unit","qualname":"::constants::DW_TAG_type_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3124},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23123,"byte_end":23151,"line_start":231,"line_end":231,"column_start":5,"column_end":33},"name":"DW_TAG_rvalue_reference_type","qualname":"::constants::DW_TAG_rvalue_reference_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3125},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23164,"byte_end":23185,"line_start":232,"line_end":232,"column_start":5,"column_end":26},"name":"DW_TAG_template_alias","qualname":"::constants::DW_TAG_template_alias","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3126},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23211,"byte_end":23230,"line_start":235,"line_end":235,"column_start":5,"column_end":24},"name":"DW_TAG_coarray_type","qualname":"::constants::DW_TAG_coarray_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3127},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23243,"byte_end":23266,"line_start":236,"line_end":236,"column_start":5,"column_end":28},"name":"DW_TAG_generic_subrange","qualname":"::constants::DW_TAG_generic_subrange","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3128},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23279,"byte_end":23298,"line_start":237,"line_end":237,"column_start":5,"column_end":24},"name":"DW_TAG_dynamic_type","qualname":"::constants::DW_TAG_dynamic_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3129},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23311,"byte_end":23329,"line_start":238,"line_end":238,"column_start":5,"column_end":23},"name":"DW_TAG_atomic_type","qualname":"::constants::DW_TAG_atomic_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3130},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23342,"byte_end":23358,"line_start":239,"line_end":239,"column_start":5,"column_end":21},"name":"DW_TAG_call_site","qualname":"::constants::DW_TAG_call_site","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3131},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23371,"byte_end":23397,"line_start":240,"line_end":240,"column_start":5,"column_end":31},"name":"DW_TAG_call_site_parameter","qualname":"::constants::DW_TAG_call_site_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3132},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23410,"byte_end":23430,"line_start":241,"line_end":241,"column_start":5,"column_end":25},"name":"DW_TAG_skeleton_unit","qualname":"::constants::DW_TAG_skeleton_unit","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3133},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23443,"byte_end":23464,"line_start":242,"line_end":242,"column_start":5,"column_end":26},"name":"DW_TAG_immutable_type","qualname":"::constants::DW_TAG_immutable_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3134},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23478,"byte_end":23492,"line_start":244,"line_end":244,"column_start":5,"column_end":19},"name":"DW_TAG_lo_user","qualname":"::constants::DW_TAG_lo_user","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3135},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23507,"byte_end":23521,"line_start":245,"line_end":245,"column_start":5,"column_end":19},"name":"DW_TAG_hi_user","qualname":"::constants::DW_TAG_hi_user","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3136},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23561,"byte_end":23577,"line_start":248,"line_end":248,"column_start":5,"column_end":21},"name":"DW_TAG_MIPS_loop","qualname":"::constants::DW_TAG_MIPS_loop","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3137},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23611,"byte_end":23637,"line_start":251,"line_end":251,"column_start":5,"column_end":31},"name":"DW_TAG_HP_array_descriptor","qualname":"::constants::DW_TAG_HP_array_descriptor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3138},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23652,"byte_end":23673,"line_start":252,"line_end":252,"column_start":5,"column_end":26},"name":"DW_TAG_HP_Bliss_field","qualname":"::constants::DW_TAG_HP_Bliss_field","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3139},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23688,"byte_end":23713,"line_start":253,"line_end":253,"column_start":5,"column_end":30},"name":"DW_TAG_HP_Bliss_field_set","qualname":"::constants::DW_TAG_HP_Bliss_field_set","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3140},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23748,"byte_end":23767,"line_start":256,"line_end":256,"column_start":5,"column_end":24},"name":"DW_TAG_format_label","qualname":"::constants::DW_TAG_format_label","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3141},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23782,"byte_end":23806,"line_start":257,"line_end":257,"column_start":5,"column_end":29},"name":"DW_TAG_function_template","qualname":"::constants::DW_TAG_function_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3142},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23821,"byte_end":23842,"line_start":258,"line_end":258,"column_start":5,"column_end":26},"name":"DW_TAG_class_template","qualname":"::constants::DW_TAG_class_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3143},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23857,"byte_end":23873,"line_start":259,"line_end":259,"column_start":5,"column_end":21},"name":"DW_TAG_GNU_BINCL","qualname":"::constants::DW_TAG_GNU_BINCL","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3144},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23888,"byte_end":23904,"line_start":260,"line_end":260,"column_start":5,"column_end":21},"name":"DW_TAG_GNU_EINCL","qualname":"::constants::DW_TAG_GNU_EINCL","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3145},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23919,"byte_end":23953,"line_start":261,"line_end":261,"column_start":5,"column_end":39},"name":"DW_TAG_GNU_template_template_param","qualname":"::constants::DW_TAG_GNU_template_template_param","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3146},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":23968,"byte_end":24002,"line_start":262,"line_end":262,"column_start":5,"column_end":39},"name":"DW_TAG_GNU_template_parameter_pack","qualname":"::constants::DW_TAG_GNU_template_parameter_pack","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3147},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24017,"byte_end":24049,"line_start":263,"line_end":263,"column_start":5,"column_end":37},"name":"DW_TAG_GNU_formal_parameter_pack","qualname":"::constants::DW_TAG_GNU_formal_parameter_pack","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3148},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24064,"byte_end":24084,"line_start":264,"line_end":264,"column_start":5,"column_end":25},"name":"DW_TAG_GNU_call_site","qualname":"::constants::DW_TAG_GNU_call_site","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3149},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24099,"byte_end":24129,"line_start":265,"line_end":265,"column_start":5,"column_end":35},"name":"DW_TAG_GNU_call_site_parameter","qualname":"::constants::DW_TAG_GNU_call_site_parameter","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3150},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24145,"byte_end":24166,"line_start":267,"line_end":267,"column_start":5,"column_end":26},"name":"DW_TAG_APPLE_property","qualname":"::constants::DW_TAG_APPLE_property","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3151},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24201,"byte_end":24229,"line_start":270,"line_end":270,"column_start":5,"column_end":33},"name":"DW_TAG_SUN_function_template","qualname":"::constants::DW_TAG_SUN_function_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3152},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24244,"byte_end":24269,"line_start":271,"line_end":271,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_class_template","qualname":"::constants::DW_TAG_SUN_class_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3153},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24284,"byte_end":24310,"line_start":272,"line_end":272,"column_start":5,"column_end":31},"name":"DW_TAG_SUN_struct_template","qualname":"::constants::DW_TAG_SUN_struct_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3154},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24325,"byte_end":24350,"line_start":273,"line_end":273,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_union_template","qualname":"::constants::DW_TAG_SUN_union_template","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3155},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24365,"byte_end":24396,"line_start":274,"line_end":274,"column_start":5,"column_end":36},"name":"DW_TAG_SUN_indirect_inheritance","qualname":"::constants::DW_TAG_SUN_indirect_inheritance","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3156},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24411,"byte_end":24431,"line_start":275,"line_end":275,"column_start":5,"column_end":25},"name":"DW_TAG_SUN_codeflags","qualname":"::constants::DW_TAG_SUN_codeflags","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3157},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24446,"byte_end":24467,"line_start":276,"line_end":276,"column_start":5,"column_end":26},"name":"DW_TAG_SUN_memop_info","qualname":"::constants::DW_TAG_SUN_memop_info","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3158},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24482,"byte_end":24507,"line_start":277,"line_end":277,"column_start":5,"column_end":30},"name":"DW_TAG_SUN_omp_child_func","qualname":"::constants::DW_TAG_SUN_omp_child_func","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3159},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24522,"byte_end":24548,"line_start":278,"line_end":278,"column_start":5,"column_end":31},"name":"DW_TAG_SUN_rtti_descriptor","qualname":"::constants::DW_TAG_SUN_rtti_descriptor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3160},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24563,"byte_end":24583,"line_start":279,"line_end":279,"column_start":5,"column_end":25},"name":"DW_TAG_SUN_dtor_info","qualname":"::constants::DW_TAG_SUN_dtor_info","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3161},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24598,"byte_end":24613,"line_start":280,"line_end":280,"column_start":5,"column_end":20},"name":"DW_TAG_SUN_dtor","qualname":"::constants::DW_TAG_SUN_dtor","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3162},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24628,"byte_end":24652,"line_start":281,"line_end":281,"column_start":5,"column_end":29},"name":"DW_TAG_SUN_f90_interface","qualname":"::constants::DW_TAG_SUN_f90_interface","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3163},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24667,"byte_end":24699,"line_start":282,"line_end":282,"column_start":5,"column_end":37},"name":"DW_TAG_SUN_fortran_vax_structure","qualname":"::constants::DW_TAG_SUN_fortran_vax_structure","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3164},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24737,"byte_end":24760,"line_start":285,"line_end":285,"column_start":5,"column_end":28},"name":"DW_TAG_ALTIUM_circ_type","qualname":"::constants::DW_TAG_ALTIUM_circ_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3165},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24775,"byte_end":24802,"line_start":286,"line_end":286,"column_start":5,"column_end":32},"name":"DW_TAG_ALTIUM_mwa_circ_type","qualname":"::constants::DW_TAG_ALTIUM_mwa_circ_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3166},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24817,"byte_end":24845,"line_start":287,"line_end":287,"column_start":5,"column_end":33},"name":"DW_TAG_ALTIUM_rev_carry_type","qualname":"::constants::DW_TAG_ALTIUM_rev_carry_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3167},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24860,"byte_end":24877,"line_start":288,"line_end":288,"column_start":5,"column_end":22},"name":"DW_TAG_ALTIUM_rom","qualname":"::constants::DW_TAG_ALTIUM_rom","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3168},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24916,"byte_end":24938,"line_start":291,"line_end":291,"column_start":5,"column_end":27},"name":"DW_TAG_upc_shared_type","qualname":"::constants::DW_TAG_upc_shared_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3169},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24953,"byte_end":24975,"line_start":292,"line_end":292,"column_start":5,"column_end":27},"name":"DW_TAG_upc_strict_type","qualname":"::constants::DW_TAG_upc_strict_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3170},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":24990,"byte_end":25013,"line_start":293,"line_end":293,"column_start":5,"column_end":28},"name":"DW_TAG_upc_relaxed_type","qualname":"::constants::DW_TAG_upc_relaxed_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3171},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25069,"byte_end":25090,"line_start":296,"line_end":296,"column_start":5,"column_end":26},"name":"DW_TAG_PGI_kanji_type","qualname":"::constants::DW_TAG_PGI_kanji_type","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3172},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25105,"byte_end":25131,"line_start":297,"line_end":297,"column_start":5,"column_end":31},"name":"DW_TAG_PGI_interface_block","qualname":"::constants::DW_TAG_PGI_interface_block","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3173},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25170,"byte_end":25193,"line_start":300,"line_end":300,"column_start":5,"column_end":28},"name":"DW_TAG_BORLAND_property","qualname":"::constants::DW_TAG_BORLAND_property","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3174},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25208,"byte_end":25236,"line_start":301,"line_end":301,"column_start":5,"column_end":33},"name":"DW_TAG_BORLAND_Delphi_string","qualname":"::constants::DW_TAG_BORLAND_Delphi_string","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3175},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25251,"byte_end":25286,"line_start":302,"line_end":302,"column_start":5,"column_end":40},"name":"DW_TAG_BORLAND_Delphi_dynamic_array","qualname":"::constants::DW_TAG_BORLAND_Delphi_dynamic_array","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3176},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25301,"byte_end":25326,"line_start":303,"line_end":303,"column_start":5,"column_end":30},"name":"DW_TAG_BORLAND_Delphi_set","qualname":"::constants::DW_TAG_BORLAND_Delphi_set","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3177},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25341,"byte_end":25370,"line_start":304,"line_end":304,"column_start":5,"column_end":34},"name":"DW_TAG_BORLAND_Delphi_variant","qualname":"::constants::DW_TAG_BORLAND_Delphi_variant","value":"DwTag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3477},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25477,"byte_end":25481,"line_start":311,"line_end":311,"column_start":1,"column_end":5},"name":"DwAt","qualname":"::constants::DwAt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The attribute encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3208},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25493,"byte_end":25503,"line_start":312,"line_end":312,"column_start":5,"column_end":15},"name":"DW_AT_null","qualname":"::constants::DW_AT_null","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3209},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25517,"byte_end":25530,"line_start":314,"line_end":314,"column_start":5,"column_end":18},"name":"DW_AT_sibling","qualname":"::constants::DW_AT_sibling","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3210},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25543,"byte_end":25557,"line_start":315,"line_end":315,"column_start":5,"column_end":19},"name":"DW_AT_location","qualname":"::constants::DW_AT_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3211},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25570,"byte_end":25580,"line_start":316,"line_end":316,"column_start":5,"column_end":15},"name":"DW_AT_name","qualname":"::constants::DW_AT_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3212},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25593,"byte_end":25607,"line_start":317,"line_end":317,"column_start":5,"column_end":19},"name":"DW_AT_ordering","qualname":"::constants::DW_AT_ordering","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3213},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25620,"byte_end":25635,"line_start":318,"line_end":318,"column_start":5,"column_end":20},"name":"DW_AT_byte_size","qualname":"::constants::DW_AT_byte_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3214},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25648,"byte_end":25664,"line_start":319,"line_end":319,"column_start":5,"column_end":21},"name":"DW_AT_bit_offset","qualname":"::constants::DW_AT_bit_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3215},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25677,"byte_end":25691,"line_start":320,"line_end":320,"column_start":5,"column_end":19},"name":"DW_AT_bit_size","qualname":"::constants::DW_AT_bit_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3216},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25704,"byte_end":25719,"line_start":321,"line_end":321,"column_start":5,"column_end":20},"name":"DW_AT_stmt_list","qualname":"::constants::DW_AT_stmt_list","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3217},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25732,"byte_end":25744,"line_start":322,"line_end":322,"column_start":5,"column_end":17},"name":"DW_AT_low_pc","qualname":"::constants::DW_AT_low_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3218},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25757,"byte_end":25770,"line_start":323,"line_end":323,"column_start":5,"column_end":18},"name":"DW_AT_high_pc","qualname":"::constants::DW_AT_high_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3219},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25783,"byte_end":25797,"line_start":324,"line_end":324,"column_start":5,"column_end":19},"name":"DW_AT_language","qualname":"::constants::DW_AT_language","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3220},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25810,"byte_end":25821,"line_start":325,"line_end":325,"column_start":5,"column_end":16},"name":"DW_AT_discr","qualname":"::constants::DW_AT_discr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3221},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25834,"byte_end":25851,"line_start":326,"line_end":326,"column_start":5,"column_end":22},"name":"DW_AT_discr_value","qualname":"::constants::DW_AT_discr_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3222},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25864,"byte_end":25880,"line_start":327,"line_end":327,"column_start":5,"column_end":21},"name":"DW_AT_visibility","qualname":"::constants::DW_AT_visibility","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3223},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25893,"byte_end":25905,"line_start":328,"line_end":328,"column_start":5,"column_end":17},"name":"DW_AT_import","qualname":"::constants::DW_AT_import","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3224},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25918,"byte_end":25937,"line_start":329,"line_end":329,"column_start":5,"column_end":24},"name":"DW_AT_string_length","qualname":"::constants::DW_AT_string_length","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3225},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25950,"byte_end":25972,"line_start":330,"line_end":330,"column_start":5,"column_end":27},"name":"DW_AT_common_reference","qualname":"::constants::DW_AT_common_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3226},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":25985,"byte_end":25999,"line_start":331,"line_end":331,"column_start":5,"column_end":19},"name":"DW_AT_comp_dir","qualname":"::constants::DW_AT_comp_dir","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3227},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26012,"byte_end":26029,"line_start":332,"line_end":332,"column_start":5,"column_end":22},"name":"DW_AT_const_value","qualname":"::constants::DW_AT_const_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3228},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26042,"byte_end":26063,"line_start":333,"line_end":333,"column_start":5,"column_end":26},"name":"DW_AT_containing_type","qualname":"::constants::DW_AT_containing_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3229},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26076,"byte_end":26095,"line_start":334,"line_end":334,"column_start":5,"column_end":24},"name":"DW_AT_default_value","qualname":"::constants::DW_AT_default_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3230},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26108,"byte_end":26120,"line_start":335,"line_end":335,"column_start":5,"column_end":17},"name":"DW_AT_inline","qualname":"::constants::DW_AT_inline","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3231},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26133,"byte_end":26150,"line_start":336,"line_end":336,"column_start":5,"column_end":22},"name":"DW_AT_is_optional","qualname":"::constants::DW_AT_is_optional","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3232},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26163,"byte_end":26180,"line_start":337,"line_end":337,"column_start":5,"column_end":22},"name":"DW_AT_lower_bound","qualname":"::constants::DW_AT_lower_bound","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3233},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26193,"byte_end":26207,"line_start":338,"line_end":338,"column_start":5,"column_end":19},"name":"DW_AT_producer","qualname":"::constants::DW_AT_producer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3234},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26220,"byte_end":26236,"line_start":339,"line_end":339,"column_start":5,"column_end":21},"name":"DW_AT_prototyped","qualname":"::constants::DW_AT_prototyped","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3235},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26249,"byte_end":26266,"line_start":340,"line_end":340,"column_start":5,"column_end":22},"name":"DW_AT_return_addr","qualname":"::constants::DW_AT_return_addr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3236},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26279,"byte_end":26296,"line_start":341,"line_end":341,"column_start":5,"column_end":22},"name":"DW_AT_start_scope","qualname":"::constants::DW_AT_start_scope","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3237},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26309,"byte_end":26325,"line_start":342,"line_end":342,"column_start":5,"column_end":21},"name":"DW_AT_bit_stride","qualname":"::constants::DW_AT_bit_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3238},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26338,"byte_end":26355,"line_start":343,"line_end":343,"column_start":5,"column_end":22},"name":"DW_AT_upper_bound","qualname":"::constants::DW_AT_upper_bound","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3239},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26368,"byte_end":26389,"line_start":344,"line_end":344,"column_start":5,"column_end":26},"name":"DW_AT_abstract_origin","qualname":"::constants::DW_AT_abstract_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3240},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26402,"byte_end":26421,"line_start":345,"line_end":345,"column_start":5,"column_end":24},"name":"DW_AT_accessibility","qualname":"::constants::DW_AT_accessibility","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3241},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26434,"byte_end":26453,"line_start":346,"line_end":346,"column_start":5,"column_end":24},"name":"DW_AT_address_class","qualname":"::constants::DW_AT_address_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3242},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26466,"byte_end":26482,"line_start":347,"line_end":347,"column_start":5,"column_end":21},"name":"DW_AT_artificial","qualname":"::constants::DW_AT_artificial","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3243},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26495,"byte_end":26511,"line_start":348,"line_end":348,"column_start":5,"column_end":21},"name":"DW_AT_base_types","qualname":"::constants::DW_AT_base_types","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3244},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26524,"byte_end":26548,"line_start":349,"line_end":349,"column_start":5,"column_end":29},"name":"DW_AT_calling_convention","qualname":"::constants::DW_AT_calling_convention","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3245},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26561,"byte_end":26572,"line_start":350,"line_end":350,"column_start":5,"column_end":16},"name":"DW_AT_count","qualname":"::constants::DW_AT_count","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3246},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26585,"byte_end":26611,"line_start":351,"line_end":351,"column_start":5,"column_end":31},"name":"DW_AT_data_member_location","qualname":"::constants::DW_AT_data_member_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3247},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26624,"byte_end":26641,"line_start":352,"line_end":352,"column_start":5,"column_end":22},"name":"DW_AT_decl_column","qualname":"::constants::DW_AT_decl_column","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3248},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26654,"byte_end":26669,"line_start":353,"line_end":353,"column_start":5,"column_end":20},"name":"DW_AT_decl_file","qualname":"::constants::DW_AT_decl_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3249},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26682,"byte_end":26697,"line_start":354,"line_end":354,"column_start":5,"column_end":20},"name":"DW_AT_decl_line","qualname":"::constants::DW_AT_decl_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3250},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26710,"byte_end":26727,"line_start":355,"line_end":355,"column_start":5,"column_end":22},"name":"DW_AT_declaration","qualname":"::constants::DW_AT_declaration","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3251},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26740,"byte_end":26756,"line_start":356,"line_end":356,"column_start":5,"column_end":21},"name":"DW_AT_discr_list","qualname":"::constants::DW_AT_discr_list","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3252},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26769,"byte_end":26783,"line_start":357,"line_end":357,"column_start":5,"column_end":19},"name":"DW_AT_encoding","qualname":"::constants::DW_AT_encoding","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3253},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26796,"byte_end":26810,"line_start":358,"line_end":358,"column_start":5,"column_end":19},"name":"DW_AT_external","qualname":"::constants::DW_AT_external","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3254},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26823,"byte_end":26839,"line_start":359,"line_end":359,"column_start":5,"column_end":21},"name":"DW_AT_frame_base","qualname":"::constants::DW_AT_frame_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3255},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26852,"byte_end":26864,"line_start":360,"line_end":360,"column_start":5,"column_end":17},"name":"DW_AT_friend","qualname":"::constants::DW_AT_friend","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3256},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26877,"byte_end":26898,"line_start":361,"line_end":361,"column_start":5,"column_end":26},"name":"DW_AT_identifier_case","qualname":"::constants::DW_AT_identifier_case","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3257},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26911,"byte_end":26927,"line_start":362,"line_end":362,"column_start":5,"column_end":21},"name":"DW_AT_macro_info","qualname":"::constants::DW_AT_macro_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3258},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26940,"byte_end":26959,"line_start":363,"line_end":363,"column_start":5,"column_end":24},"name":"DW_AT_namelist_item","qualname":"::constants::DW_AT_namelist_item","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3259},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26972,"byte_end":26986,"line_start":364,"line_end":364,"column_start":5,"column_end":19},"name":"DW_AT_priority","qualname":"::constants::DW_AT_priority","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3260},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":26999,"byte_end":27012,"line_start":365,"line_end":365,"column_start":5,"column_end":18},"name":"DW_AT_segment","qualname":"::constants::DW_AT_segment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3261},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27025,"byte_end":27044,"line_start":366,"line_end":366,"column_start":5,"column_end":24},"name":"DW_AT_specification","qualname":"::constants::DW_AT_specification","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3262},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27057,"byte_end":27074,"line_start":367,"line_end":367,"column_start":5,"column_end":22},"name":"DW_AT_static_link","qualname":"::constants::DW_AT_static_link","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3263},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27087,"byte_end":27097,"line_start":368,"line_end":368,"column_start":5,"column_end":15},"name":"DW_AT_type","qualname":"::constants::DW_AT_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3264},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27110,"byte_end":27128,"line_start":369,"line_end":369,"column_start":5,"column_end":23},"name":"DW_AT_use_location","qualname":"::constants::DW_AT_use_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3265},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27141,"byte_end":27165,"line_start":370,"line_end":370,"column_start":5,"column_end":29},"name":"DW_AT_variable_parameter","qualname":"::constants::DW_AT_variable_parameter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3266},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27178,"byte_end":27194,"line_start":371,"line_end":371,"column_start":5,"column_end":21},"name":"DW_AT_virtuality","qualname":"::constants::DW_AT_virtuality","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3267},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27207,"byte_end":27233,"line_start":372,"line_end":372,"column_start":5,"column_end":31},"name":"DW_AT_vtable_elem_location","qualname":"::constants::DW_AT_vtable_elem_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3268},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27259,"byte_end":27274,"line_start":375,"line_end":375,"column_start":5,"column_end":20},"name":"DW_AT_allocated","qualname":"::constants::DW_AT_allocated","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3269},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27287,"byte_end":27303,"line_start":376,"line_end":376,"column_start":5,"column_end":21},"name":"DW_AT_associated","qualname":"::constants::DW_AT_associated","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3270},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27316,"byte_end":27335,"line_start":377,"line_end":377,"column_start":5,"column_end":24},"name":"DW_AT_data_location","qualname":"::constants::DW_AT_data_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3271},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27348,"byte_end":27365,"line_start":378,"line_end":378,"column_start":5,"column_end":22},"name":"DW_AT_byte_stride","qualname":"::constants::DW_AT_byte_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3272},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27378,"byte_end":27392,"line_start":379,"line_end":379,"column_start":5,"column_end":19},"name":"DW_AT_entry_pc","qualname":"::constants::DW_AT_entry_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3273},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27405,"byte_end":27419,"line_start":380,"line_end":380,"column_start":5,"column_end":19},"name":"DW_AT_use_UTF8","qualname":"::constants::DW_AT_use_UTF8","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3274},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27432,"byte_end":27447,"line_start":381,"line_end":381,"column_start":5,"column_end":20},"name":"DW_AT_extension","qualname":"::constants::DW_AT_extension","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3275},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27460,"byte_end":27472,"line_start":382,"line_end":382,"column_start":5,"column_end":17},"name":"DW_AT_ranges","qualname":"::constants::DW_AT_ranges","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3276},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27485,"byte_end":27501,"line_start":383,"line_end":383,"column_start":5,"column_end":21},"name":"DW_AT_trampoline","qualname":"::constants::DW_AT_trampoline","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3277},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27514,"byte_end":27531,"line_start":384,"line_end":384,"column_start":5,"column_end":22},"name":"DW_AT_call_column","qualname":"::constants::DW_AT_call_column","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3278},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27544,"byte_end":27559,"line_start":385,"line_end":385,"column_start":5,"column_end":20},"name":"DW_AT_call_file","qualname":"::constants::DW_AT_call_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3279},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27572,"byte_end":27587,"line_start":386,"line_end":386,"column_start":5,"column_end":20},"name":"DW_AT_call_line","qualname":"::constants::DW_AT_call_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3280},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27600,"byte_end":27617,"line_start":387,"line_end":387,"column_start":5,"column_end":22},"name":"DW_AT_description","qualname":"::constants::DW_AT_description","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3281},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27630,"byte_end":27648,"line_start":388,"line_end":388,"column_start":5,"column_end":23},"name":"DW_AT_binary_scale","qualname":"::constants::DW_AT_binary_scale","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3282},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27661,"byte_end":27680,"line_start":389,"line_end":389,"column_start":5,"column_end":24},"name":"DW_AT_decimal_scale","qualname":"::constants::DW_AT_decimal_scale","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3283},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27693,"byte_end":27704,"line_start":390,"line_end":390,"column_start":5,"column_end":16},"name":"DW_AT_small","qualname":"::constants::DW_AT_small","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3284},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27717,"byte_end":27735,"line_start":391,"line_end":391,"column_start":5,"column_end":23},"name":"DW_AT_decimal_sign","qualname":"::constants::DW_AT_decimal_sign","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3285},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27748,"byte_end":27765,"line_start":392,"line_end":392,"column_start":5,"column_end":22},"name":"DW_AT_digit_count","qualname":"::constants::DW_AT_digit_count","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3286},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27778,"byte_end":27798,"line_start":393,"line_end":393,"column_start":5,"column_end":25},"name":"DW_AT_picture_string","qualname":"::constants::DW_AT_picture_string","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3287},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27811,"byte_end":27824,"line_start":394,"line_end":394,"column_start":5,"column_end":18},"name":"DW_AT_mutable","qualname":"::constants::DW_AT_mutable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3288},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27837,"byte_end":27857,"line_start":395,"line_end":395,"column_start":5,"column_end":25},"name":"DW_AT_threads_scaled","qualname":"::constants::DW_AT_threads_scaled","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3289},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27870,"byte_end":27884,"line_start":396,"line_end":396,"column_start":5,"column_end":19},"name":"DW_AT_explicit","qualname":"::constants::DW_AT_explicit","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3290},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27897,"byte_end":27917,"line_start":397,"line_end":397,"column_start":5,"column_end":25},"name":"DW_AT_object_pointer","qualname":"::constants::DW_AT_object_pointer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3291},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27930,"byte_end":27945,"line_start":398,"line_end":398,"column_start":5,"column_end":20},"name":"DW_AT_endianity","qualname":"::constants::DW_AT_endianity","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3292},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27958,"byte_end":27973,"line_start":399,"line_end":399,"column_start":5,"column_end":20},"name":"DW_AT_elemental","qualname":"::constants::DW_AT_elemental","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3293},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":27986,"byte_end":27996,"line_start":400,"line_end":400,"column_start":5,"column_end":15},"name":"DW_AT_pure","qualname":"::constants::DW_AT_pure","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3294},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28009,"byte_end":28024,"line_start":401,"line_end":401,"column_start":5,"column_end":20},"name":"DW_AT_recursive","qualname":"::constants::DW_AT_recursive","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3295},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28050,"byte_end":28065,"line_start":404,"line_end":404,"column_start":5,"column_end":20},"name":"DW_AT_signature","qualname":"::constants::DW_AT_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3296},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28078,"byte_end":28099,"line_start":405,"line_end":405,"column_start":5,"column_end":26},"name":"DW_AT_main_subprogram","qualname":"::constants::DW_AT_main_subprogram","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3297},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28112,"byte_end":28133,"line_start":406,"line_end":406,"column_start":5,"column_end":26},"name":"DW_AT_data_bit_offset","qualname":"::constants::DW_AT_data_bit_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3298},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28146,"byte_end":28162,"line_start":407,"line_end":407,"column_start":5,"column_end":21},"name":"DW_AT_const_expr","qualname":"::constants::DW_AT_const_expr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3299},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28175,"byte_end":28191,"line_start":408,"line_end":408,"column_start":5,"column_end":21},"name":"DW_AT_enum_class","qualname":"::constants::DW_AT_enum_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3300},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28204,"byte_end":28222,"line_start":409,"line_end":409,"column_start":5,"column_end":23},"name":"DW_AT_linkage_name","qualname":"::constants::DW_AT_linkage_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3301},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28248,"byte_end":28276,"line_start":412,"line_end":412,"column_start":5,"column_end":33},"name":"DW_AT_string_length_bit_size","qualname":"::constants::DW_AT_string_length_bit_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3302},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28289,"byte_end":28318,"line_start":413,"line_end":413,"column_start":5,"column_end":34},"name":"DW_AT_string_length_byte_size","qualname":"::constants::DW_AT_string_length_byte_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3303},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28331,"byte_end":28341,"line_start":414,"line_end":414,"column_start":5,"column_end":15},"name":"DW_AT_rank","qualname":"::constants::DW_AT_rank","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3304},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28354,"byte_end":28376,"line_start":415,"line_end":415,"column_start":5,"column_end":27},"name":"DW_AT_str_offsets_base","qualname":"::constants::DW_AT_str_offsets_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3305},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28389,"byte_end":28404,"line_start":416,"line_end":416,"column_start":5,"column_end":20},"name":"DW_AT_addr_base","qualname":"::constants::DW_AT_addr_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3306},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28417,"byte_end":28436,"line_start":417,"line_end":417,"column_start":5,"column_end":24},"name":"DW_AT_rnglists_base","qualname":"::constants::DW_AT_rnglists_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3307},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28449,"byte_end":28463,"line_start":418,"line_end":418,"column_start":5,"column_end":19},"name":"DW_AT_dwo_name","qualname":"::constants::DW_AT_dwo_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3308},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28476,"byte_end":28491,"line_start":419,"line_end":419,"column_start":5,"column_end":20},"name":"DW_AT_reference","qualname":"::constants::DW_AT_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3309},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28504,"byte_end":28526,"line_start":420,"line_end":420,"column_start":5,"column_end":27},"name":"DW_AT_rvalue_reference","qualname":"::constants::DW_AT_rvalue_reference","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3310},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28539,"byte_end":28551,"line_start":421,"line_end":421,"column_start":5,"column_end":17},"name":"DW_AT_macros","qualname":"::constants::DW_AT_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3311},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28564,"byte_end":28584,"line_start":422,"line_end":422,"column_start":5,"column_end":25},"name":"DW_AT_call_all_calls","qualname":"::constants::DW_AT_call_all_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3312},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28597,"byte_end":28624,"line_start":423,"line_end":423,"column_start":5,"column_end":32},"name":"DW_AT_call_all_source_calls","qualname":"::constants::DW_AT_call_all_source_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3313},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28637,"byte_end":28662,"line_start":424,"line_end":424,"column_start":5,"column_end":30},"name":"DW_AT_call_all_tail_calls","qualname":"::constants::DW_AT_call_all_tail_calls","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3314},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28675,"byte_end":28695,"line_start":425,"line_end":425,"column_start":5,"column_end":25},"name":"DW_AT_call_return_pc","qualname":"::constants::DW_AT_call_return_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3315},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28708,"byte_end":28724,"line_start":426,"line_end":426,"column_start":5,"column_end":21},"name":"DW_AT_call_value","qualname":"::constants::DW_AT_call_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3316},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28737,"byte_end":28754,"line_start":427,"line_end":427,"column_start":5,"column_end":22},"name":"DW_AT_call_origin","qualname":"::constants::DW_AT_call_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3317},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28767,"byte_end":28787,"line_start":428,"line_end":428,"column_start":5,"column_end":25},"name":"DW_AT_call_parameter","qualname":"::constants::DW_AT_call_parameter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3318},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28800,"byte_end":28813,"line_start":429,"line_end":429,"column_start":5,"column_end":18},"name":"DW_AT_call_pc","qualname":"::constants::DW_AT_call_pc","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3319},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28826,"byte_end":28846,"line_start":430,"line_end":430,"column_start":5,"column_end":25},"name":"DW_AT_call_tail_call","qualname":"::constants::DW_AT_call_tail_call","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3320},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28859,"byte_end":28876,"line_start":431,"line_end":431,"column_start":5,"column_end":22},"name":"DW_AT_call_target","qualname":"::constants::DW_AT_call_target","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3321},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28889,"byte_end":28916,"line_start":432,"line_end":432,"column_start":5,"column_end":32},"name":"DW_AT_call_target_clobbered","qualname":"::constants::DW_AT_call_target_clobbered","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3322},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28929,"byte_end":28953,"line_start":433,"line_end":433,"column_start":5,"column_end":29},"name":"DW_AT_call_data_location","qualname":"::constants::DW_AT_call_data_location","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3323},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":28966,"byte_end":28987,"line_start":434,"line_end":434,"column_start":5,"column_end":26},"name":"DW_AT_call_data_value","qualname":"::constants::DW_AT_call_data_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3324},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29000,"byte_end":29014,"line_start":435,"line_end":435,"column_start":5,"column_end":19},"name":"DW_AT_noreturn","qualname":"::constants::DW_AT_noreturn","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3325},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29027,"byte_end":29042,"line_start":436,"line_end":436,"column_start":5,"column_end":20},"name":"DW_AT_alignment","qualname":"::constants::DW_AT_alignment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3326},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29055,"byte_end":29075,"line_start":437,"line_end":437,"column_start":5,"column_end":25},"name":"DW_AT_export_symbols","qualname":"::constants::DW_AT_export_symbols","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3327},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29088,"byte_end":29101,"line_start":438,"line_end":438,"column_start":5,"column_end":18},"name":"DW_AT_deleted","qualname":"::constants::DW_AT_deleted","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3328},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29114,"byte_end":29129,"line_start":439,"line_end":439,"column_start":5,"column_end":20},"name":"DW_AT_defaulted","qualname":"::constants::DW_AT_defaulted","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3329},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29142,"byte_end":29161,"line_start":440,"line_end":440,"column_start":5,"column_end":24},"name":"DW_AT_loclists_base","qualname":"::constants::DW_AT_loclists_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3330},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29175,"byte_end":29188,"line_start":442,"line_end":442,"column_start":5,"column_end":18},"name":"DW_AT_lo_user","qualname":"::constants::DW_AT_lo_user","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3331},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29203,"byte_end":29216,"line_start":443,"line_end":443,"column_start":5,"column_end":18},"name":"DW_AT_hi_user","qualname":"::constants::DW_AT_hi_user","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3332},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29256,"byte_end":29270,"line_start":446,"line_end":446,"column_start":5,"column_end":19},"name":"DW_AT_MIPS_fde","qualname":"::constants::DW_AT_MIPS_fde","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3333},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29285,"byte_end":29306,"line_start":447,"line_end":447,"column_start":5,"column_end":26},"name":"DW_AT_MIPS_loop_begin","qualname":"::constants::DW_AT_MIPS_loop_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3334},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29321,"byte_end":29347,"line_start":448,"line_end":448,"column_start":5,"column_end":31},"name":"DW_AT_MIPS_tail_loop_begin","qualname":"::constants::DW_AT_MIPS_tail_loop_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3335},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29362,"byte_end":29385,"line_start":449,"line_end":449,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_epilog_begin","qualname":"::constants::DW_AT_MIPS_epilog_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3336},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29400,"byte_end":29429,"line_start":450,"line_end":450,"column_start":5,"column_end":34},"name":"DW_AT_MIPS_loop_unroll_factor","qualname":"::constants::DW_AT_MIPS_loop_unroll_factor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3337},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29444,"byte_end":29478,"line_start":451,"line_end":451,"column_start":5,"column_end":39},"name":"DW_AT_MIPS_software_pipeline_depth","qualname":"::constants::DW_AT_MIPS_software_pipeline_depth","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3338},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29493,"byte_end":29516,"line_start":452,"line_end":452,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_linkage_name","qualname":"::constants::DW_AT_MIPS_linkage_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3339},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29531,"byte_end":29548,"line_start":453,"line_end":453,"column_start":5,"column_end":22},"name":"DW_AT_MIPS_stride","qualname":"::constants::DW_AT_MIPS_stride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3340},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29563,"byte_end":29587,"line_start":454,"line_end":454,"column_start":5,"column_end":29},"name":"DW_AT_MIPS_abstract_name","qualname":"::constants::DW_AT_MIPS_abstract_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3341},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29602,"byte_end":29625,"line_start":455,"line_end":455,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_clone_origin","qualname":"::constants::DW_AT_MIPS_clone_origin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3342},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29640,"byte_end":29662,"line_start":456,"line_end":456,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_has_inlines","qualname":"::constants::DW_AT_MIPS_has_inlines","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3343},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29677,"byte_end":29699,"line_start":457,"line_end":457,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_stride_byte","qualname":"::constants::DW_AT_MIPS_stride_byte","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3344},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29714,"byte_end":29736,"line_start":458,"line_end":458,"column_start":5,"column_end":27},"name":"DW_AT_MIPS_stride_elem","qualname":"::constants::DW_AT_MIPS_stride_elem","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3345},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29751,"byte_end":29774,"line_start":459,"line_end":459,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_ptr_dopetype","qualname":"::constants::DW_AT_MIPS_ptr_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3346},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29789,"byte_end":29820,"line_start":460,"line_end":460,"column_start":5,"column_end":36},"name":"DW_AT_MIPS_allocatable_dopetype","qualname":"::constants::DW_AT_MIPS_allocatable_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3347},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29835,"byte_end":29868,"line_start":461,"line_end":461,"column_start":5,"column_end":38},"name":"DW_AT_MIPS_assumed_shape_dopetype","qualname":"::constants::DW_AT_MIPS_assumed_shape_dopetype","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3348},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":29999,"byte_end":30022,"line_start":465,"line_end":465,"column_start":5,"column_end":28},"name":"DW_AT_MIPS_assumed_size","qualname":"::constants::DW_AT_MIPS_assumed_size","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3349},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30111,"byte_end":30135,"line_start":470,"line_end":470,"column_start":5,"column_end":29},"name":"DW_AT_INTEL_other_endian","qualname":"::constants::DW_AT_INTEL_other_endian","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3350},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30169,"byte_end":30183,"line_start":473,"line_end":473,"column_start":5,"column_end":19},"name":"DW_AT_sf_names","qualname":"::constants::DW_AT_sf_names","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3351},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30198,"byte_end":30212,"line_start":474,"line_end":474,"column_start":5,"column_end":19},"name":"DW_AT_src_info","qualname":"::constants::DW_AT_src_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3352},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30227,"byte_end":30241,"line_start":475,"line_end":475,"column_start":5,"column_end":19},"name":"DW_AT_mac_info","qualname":"::constants::DW_AT_mac_info","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3353},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30256,"byte_end":30272,"line_start":476,"line_end":476,"column_start":5,"column_end":21},"name":"DW_AT_src_coords","qualname":"::constants::DW_AT_src_coords","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3354},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30287,"byte_end":30303,"line_start":477,"line_end":477,"column_start":5,"column_end":21},"name":"DW_AT_body_begin","qualname":"::constants::DW_AT_body_begin","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3355},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30318,"byte_end":30332,"line_start":478,"line_end":478,"column_start":5,"column_end":19},"name":"DW_AT_body_end","qualname":"::constants::DW_AT_body_end","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3356},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30347,"byte_end":30363,"line_start":479,"line_end":479,"column_start":5,"column_end":21},"name":"DW_AT_GNU_vector","qualname":"::constants::DW_AT_GNU_vector","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3357},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30378,"byte_end":30398,"line_start":480,"line_end":480,"column_start":5,"column_end":25},"name":"DW_AT_GNU_guarded_by","qualname":"::constants::DW_AT_GNU_guarded_by","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3358},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30413,"byte_end":30436,"line_start":481,"line_end":481,"column_start":5,"column_end":28},"name":"DW_AT_GNU_pt_guarded_by","qualname":"::constants::DW_AT_GNU_pt_guarded_by","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3359},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30451,"byte_end":30468,"line_start":482,"line_end":482,"column_start":5,"column_end":22},"name":"DW_AT_GNU_guarded","qualname":"::constants::DW_AT_GNU_guarded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3360},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30483,"byte_end":30503,"line_start":483,"line_end":483,"column_start":5,"column_end":25},"name":"DW_AT_GNU_pt_guarded","qualname":"::constants::DW_AT_GNU_pt_guarded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3361},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30518,"byte_end":30542,"line_start":484,"line_end":484,"column_start":5,"column_end":29},"name":"DW_AT_GNU_locks_excluded","qualname":"::constants::DW_AT_GNU_locks_excluded","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3362},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30557,"byte_end":30591,"line_start":485,"line_end":485,"column_start":5,"column_end":39},"name":"DW_AT_GNU_exclusive_locks_required","qualname":"::constants::DW_AT_GNU_exclusive_locks_required","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3363},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30606,"byte_end":30637,"line_start":486,"line_end":486,"column_start":5,"column_end":36},"name":"DW_AT_GNU_shared_locks_required","qualname":"::constants::DW_AT_GNU_shared_locks_required","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3364},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30652,"byte_end":30675,"line_start":487,"line_end":487,"column_start":5,"column_end":28},"name":"DW_AT_GNU_odr_signature","qualname":"::constants::DW_AT_GNU_odr_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3365},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30690,"byte_end":30713,"line_start":488,"line_end":488,"column_start":5,"column_end":28},"name":"DW_AT_GNU_template_name","qualname":"::constants::DW_AT_GNU_template_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3366},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30728,"byte_end":30753,"line_start":489,"line_end":489,"column_start":5,"column_end":30},"name":"DW_AT_GNU_call_site_value","qualname":"::constants::DW_AT_GNU_call_site_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3367},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30768,"byte_end":30798,"line_start":490,"line_end":490,"column_start":5,"column_end":35},"name":"DW_AT_GNU_call_site_data_value","qualname":"::constants::DW_AT_GNU_call_site_data_value","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3368},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30813,"byte_end":30839,"line_start":491,"line_end":491,"column_start":5,"column_end":31},"name":"DW_AT_GNU_call_site_target","qualname":"::constants::DW_AT_GNU_call_site_target","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3369},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30854,"byte_end":30890,"line_start":492,"line_end":492,"column_start":5,"column_end":41},"name":"DW_AT_GNU_call_site_target_clobbered","qualname":"::constants::DW_AT_GNU_call_site_target_clobbered","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3370},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30905,"byte_end":30924,"line_start":493,"line_end":493,"column_start":5,"column_end":24},"name":"DW_AT_GNU_tail_call","qualname":"::constants::DW_AT_GNU_tail_call","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3371},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30939,"byte_end":30968,"line_start":494,"line_end":494,"column_start":5,"column_end":34},"name":"DW_AT_GNU_all_tail_call_sites","qualname":"::constants::DW_AT_GNU_all_tail_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3372},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":30983,"byte_end":31007,"line_start":495,"line_end":495,"column_start":5,"column_end":29},"name":"DW_AT_GNU_all_call_sites","qualname":"::constants::DW_AT_GNU_all_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3373},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31022,"byte_end":31053,"line_start":496,"line_end":496,"column_start":5,"column_end":36},"name":"DW_AT_GNU_all_source_call_sites","qualname":"::constants::DW_AT_GNU_all_source_call_sites","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3374},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31068,"byte_end":31084,"line_start":497,"line_end":497,"column_start":5,"column_end":21},"name":"DW_AT_GNU_macros","qualname":"::constants::DW_AT_GNU_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3375},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31136,"byte_end":31154,"line_start":500,"line_end":500,"column_start":5,"column_end":23},"name":"DW_AT_GNU_dwo_name","qualname":"::constants::DW_AT_GNU_dwo_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3376},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31169,"byte_end":31185,"line_start":501,"line_end":501,"column_start":5,"column_end":21},"name":"DW_AT_GNU_dwo_id","qualname":"::constants::DW_AT_GNU_dwo_id","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3377},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31200,"byte_end":31221,"line_start":502,"line_end":502,"column_start":5,"column_end":26},"name":"DW_AT_GNU_ranges_base","qualname":"::constants::DW_AT_GNU_ranges_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3378},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31236,"byte_end":31255,"line_start":503,"line_end":503,"column_start":5,"column_end":24},"name":"DW_AT_GNU_addr_base","qualname":"::constants::DW_AT_GNU_addr_base","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3379},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31270,"byte_end":31288,"line_start":504,"line_end":504,"column_start":5,"column_end":23},"name":"DW_AT_GNU_pubnames","qualname":"::constants::DW_AT_GNU_pubnames","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3380},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31303,"byte_end":31321,"line_start":505,"line_end":505,"column_start":5,"column_end":23},"name":"DW_AT_GNU_pubtypes","qualname":"::constants::DW_AT_GNU_pubtypes","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3381},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31336,"byte_end":31359,"line_start":506,"line_end":506,"column_start":5,"column_end":28},"name":"DW_AT_GNU_discriminator","qualname":"::constants::DW_AT_GNU_discriminator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3382},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31374,"byte_end":31392,"line_start":507,"line_end":507,"column_start":5,"column_end":23},"name":"DW_AT_GNU_locviews","qualname":"::constants::DW_AT_GNU_locviews","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3383},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31407,"byte_end":31427,"line_start":508,"line_end":508,"column_start":5,"column_end":25},"name":"DW_AT_GNU_entry_view","qualname":"::constants::DW_AT_GNU_entry_view","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3384},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31526,"byte_end":31544,"line_start":514,"line_end":514,"column_start":5,"column_end":23},"name":"DW_AT_SUN_template","qualname":"::constants::DW_AT_SUN_template","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3385},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31559,"byte_end":31578,"line_start":515,"line_end":515,"column_start":5,"column_end":24},"name":"DW_AT_SUN_alignment","qualname":"::constants::DW_AT_SUN_alignment","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3386},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31593,"byte_end":31609,"line_start":516,"line_end":516,"column_start":5,"column_end":21},"name":"DW_AT_SUN_vtable","qualname":"::constants::DW_AT_SUN_vtable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3387},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31624,"byte_end":31649,"line_start":517,"line_end":517,"column_start":5,"column_end":30},"name":"DW_AT_SUN_count_guarantee","qualname":"::constants::DW_AT_SUN_count_guarantee","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3388},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31664,"byte_end":31686,"line_start":518,"line_end":518,"column_start":5,"column_end":27},"name":"DW_AT_SUN_command_line","qualname":"::constants::DW_AT_SUN_command_line","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3389},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31701,"byte_end":31716,"line_start":519,"line_end":519,"column_start":5,"column_end":20},"name":"DW_AT_SUN_vbase","qualname":"::constants::DW_AT_SUN_vbase","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3390},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31731,"byte_end":31756,"line_start":520,"line_end":520,"column_start":5,"column_end":30},"name":"DW_AT_SUN_compile_options","qualname":"::constants::DW_AT_SUN_compile_options","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3391},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31771,"byte_end":31789,"line_start":521,"line_end":521,"column_start":5,"column_end":23},"name":"DW_AT_SUN_language","qualname":"::constants::DW_AT_SUN_language","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3392},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31804,"byte_end":31826,"line_start":522,"line_end":522,"column_start":5,"column_end":27},"name":"DW_AT_SUN_browser_file","qualname":"::constants::DW_AT_SUN_browser_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3393},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31841,"byte_end":31861,"line_start":523,"line_end":523,"column_start":5,"column_end":25},"name":"DW_AT_SUN_vtable_abi","qualname":"::constants::DW_AT_SUN_vtable_abi","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3394},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31876,"byte_end":31898,"line_start":524,"line_end":524,"column_start":5,"column_end":27},"name":"DW_AT_SUN_func_offsets","qualname":"::constants::DW_AT_SUN_func_offsets","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3395},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31913,"byte_end":31930,"line_start":525,"line_end":525,"column_start":5,"column_end":22},"name":"DW_AT_SUN_cf_kind","qualname":"::constants::DW_AT_SUN_cf_kind","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3396},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31945,"byte_end":31967,"line_start":526,"line_end":526,"column_start":5,"column_end":27},"name":"DW_AT_SUN_vtable_index","qualname":"::constants::DW_AT_SUN_vtable_index","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3397},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":31982,"byte_end":32006,"line_start":527,"line_end":527,"column_start":5,"column_end":29},"name":"DW_AT_SUN_omp_tpriv_addr","qualname":"::constants::DW_AT_SUN_omp_tpriv_addr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3398},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32021,"byte_end":32045,"line_start":528,"line_end":528,"column_start":5,"column_end":29},"name":"DW_AT_SUN_omp_child_func","qualname":"::constants::DW_AT_SUN_omp_child_func","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3399},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32060,"byte_end":32081,"line_start":529,"line_end":529,"column_start":5,"column_end":26},"name":"DW_AT_SUN_func_offset","qualname":"::constants::DW_AT_SUN_func_offset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3400},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32096,"byte_end":32120,"line_start":530,"line_end":530,"column_start":5,"column_end":29},"name":"DW_AT_SUN_memop_type_ref","qualname":"::constants::DW_AT_SUN_memop_type_ref","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3401},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32135,"byte_end":32155,"line_start":531,"line_end":531,"column_start":5,"column_end":25},"name":"DW_AT_SUN_profile_id","qualname":"::constants::DW_AT_SUN_profile_id","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3402},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32170,"byte_end":32195,"line_start":532,"line_end":532,"column_start":5,"column_end":30},"name":"DW_AT_SUN_memop_signature","qualname":"::constants::DW_AT_SUN_memop_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3403},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32210,"byte_end":32227,"line_start":533,"line_end":533,"column_start":5,"column_end":22},"name":"DW_AT_SUN_obj_dir","qualname":"::constants::DW_AT_SUN_obj_dir","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3404},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32242,"byte_end":32260,"line_start":534,"line_end":534,"column_start":5,"column_end":23},"name":"DW_AT_SUN_obj_file","qualname":"::constants::DW_AT_SUN_obj_file","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3405},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32275,"byte_end":32298,"line_start":535,"line_end":535,"column_start":5,"column_end":28},"name":"DW_AT_SUN_original_name","qualname":"::constants::DW_AT_SUN_original_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3406},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32313,"byte_end":32340,"line_start":536,"line_end":536,"column_start":5,"column_end":32},"name":"DW_AT_SUN_hwcprof_signature","qualname":"::constants::DW_AT_SUN_hwcprof_signature","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3407},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32355,"byte_end":32379,"line_start":537,"line_end":537,"column_start":5,"column_end":29},"name":"DW_AT_SUN_amd64_parmdump","qualname":"::constants::DW_AT_SUN_amd64_parmdump","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3408},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32394,"byte_end":32418,"line_start":538,"line_end":538,"column_start":5,"column_end":29},"name":"DW_AT_SUN_part_link_name","qualname":"::constants::DW_AT_SUN_part_link_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3409},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32433,"byte_end":32452,"line_start":539,"line_end":539,"column_start":5,"column_end":24},"name":"DW_AT_SUN_link_name","qualname":"::constants::DW_AT_SUN_link_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3410},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32467,"byte_end":32492,"line_start":540,"line_end":540,"column_start":5,"column_end":30},"name":"DW_AT_SUN_pass_with_const","qualname":"::constants::DW_AT_SUN_pass_with_const","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3411},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32507,"byte_end":32534,"line_start":541,"line_end":541,"column_start":5,"column_end":32},"name":"DW_AT_SUN_return_with_const","qualname":"::constants::DW_AT_SUN_return_with_const","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3412},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32549,"byte_end":32573,"line_start":542,"line_end":542,"column_start":5,"column_end":29},"name":"DW_AT_SUN_import_by_name","qualname":"::constants::DW_AT_SUN_import_by_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3413},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32588,"byte_end":32609,"line_start":543,"line_end":543,"column_start":5,"column_end":26},"name":"DW_AT_SUN_f90_pointer","qualname":"::constants::DW_AT_SUN_f90_pointer","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3414},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32624,"byte_end":32645,"line_start":544,"line_end":544,"column_start":5,"column_end":26},"name":"DW_AT_SUN_pass_by_ref","qualname":"::constants::DW_AT_SUN_pass_by_ref","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3415},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32660,"byte_end":32685,"line_start":545,"line_end":545,"column_start":5,"column_end":30},"name":"DW_AT_SUN_f90_allocatable","qualname":"::constants::DW_AT_SUN_f90_allocatable","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3416},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32700,"byte_end":32733,"line_start":546,"line_end":546,"column_start":5,"column_end":38},"name":"DW_AT_SUN_f90_assumed_shape_array","qualname":"::constants::DW_AT_SUN_f90_assumed_shape_array","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3417},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32748,"byte_end":32763,"line_start":547,"line_end":547,"column_start":5,"column_end":20},"name":"DW_AT_SUN_c_vla","qualname":"::constants::DW_AT_SUN_c_vla","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3418},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32778,"byte_end":32804,"line_start":548,"line_end":548,"column_start":5,"column_end":31},"name":"DW_AT_SUN_return_value_ptr","qualname":"::constants::DW_AT_SUN_return_value_ptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3419},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32819,"byte_end":32839,"line_start":549,"line_end":549,"column_start":5,"column_end":25},"name":"DW_AT_SUN_dtor_start","qualname":"::constants::DW_AT_SUN_dtor_start","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3420},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32854,"byte_end":32875,"line_start":550,"line_end":550,"column_start":5,"column_end":26},"name":"DW_AT_SUN_dtor_length","qualname":"::constants::DW_AT_SUN_dtor_length","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3421},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32890,"byte_end":32918,"line_start":551,"line_end":551,"column_start":5,"column_end":33},"name":"DW_AT_SUN_dtor_state_initial","qualname":"::constants::DW_AT_SUN_dtor_state_initial","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3422},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32933,"byte_end":32959,"line_start":552,"line_end":552,"column_start":5,"column_end":31},"name":"DW_AT_SUN_dtor_state_final","qualname":"::constants::DW_AT_SUN_dtor_state_final","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3423},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":32974,"byte_end":33001,"line_start":553,"line_end":553,"column_start":5,"column_end":32},"name":"DW_AT_SUN_dtor_state_deltas","qualname":"::constants::DW_AT_SUN_dtor_state_deltas","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3424},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33016,"byte_end":33041,"line_start":554,"line_end":554,"column_start":5,"column_end":30},"name":"DW_AT_SUN_import_by_lname","qualname":"::constants::DW_AT_SUN_import_by_lname","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3425},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33056,"byte_end":33078,"line_start":555,"line_end":555,"column_start":5,"column_end":27},"name":"DW_AT_SUN_f90_use_only","qualname":"::constants::DW_AT_SUN_f90_use_only","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3426},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33093,"byte_end":33116,"line_start":556,"line_end":556,"column_start":5,"column_end":28},"name":"DW_AT_SUN_namelist_spec","qualname":"::constants::DW_AT_SUN_namelist_spec","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3427},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33131,"byte_end":33158,"line_start":557,"line_end":557,"column_start":5,"column_end":32},"name":"DW_AT_SUN_is_omp_child_func","qualname":"::constants::DW_AT_SUN_is_omp_child_func","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3428},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33173,"byte_end":33201,"line_start":558,"line_end":558,"column_start":5,"column_end":33},"name":"DW_AT_SUN_fortran_main_alias","qualname":"::constants::DW_AT_SUN_fortran_main_alias","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3429},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33216,"byte_end":33239,"line_start":559,"line_end":559,"column_start":5,"column_end":28},"name":"DW_AT_SUN_fortran_based","qualname":"::constants::DW_AT_SUN_fortran_based","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3430},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33255,"byte_end":33275,"line_start":561,"line_end":561,"column_start":5,"column_end":25},"name":"DW_AT_ALTIUM_loclist","qualname":"::constants::DW_AT_ALTIUM_loclist","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3431},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33291,"byte_end":33322,"line_start":563,"line_end":563,"column_start":5,"column_end":36},"name":"DW_AT_use_GNAT_descriptive_type","qualname":"::constants::DW_AT_use_GNAT_descriptive_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3432},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33337,"byte_end":33364,"line_start":564,"line_end":564,"column_start":5,"column_end":32},"name":"DW_AT_GNAT_descriptive_type","qualname":"::constants::DW_AT_GNAT_descriptive_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3433},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33379,"byte_end":33398,"line_start":565,"line_end":565,"column_start":5,"column_end":24},"name":"DW_AT_GNU_numerator","qualname":"::constants::DW_AT_GNU_numerator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3434},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33413,"byte_end":33434,"line_start":566,"line_end":566,"column_start":5,"column_end":26},"name":"DW_AT_GNU_denominator","qualname":"::constants::DW_AT_GNU_denominator","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3435},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33449,"byte_end":33463,"line_start":567,"line_end":567,"column_start":5,"column_end":19},"name":"DW_AT_GNU_bias","qualname":"::constants::DW_AT_GNU_bias","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3436},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33479,"byte_end":33503,"line_start":569,"line_end":569,"column_start":5,"column_end":29},"name":"DW_AT_upc_threads_scaled","qualname":"::constants::DW_AT_upc_threads_scaled","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3437},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33559,"byte_end":33574,"line_start":572,"line_end":572,"column_start":5,"column_end":20},"name":"DW_AT_PGI_lbase","qualname":"::constants::DW_AT_PGI_lbase","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3438},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33589,"byte_end":33606,"line_start":573,"line_end":573,"column_start":5,"column_end":22},"name":"DW_AT_PGI_soffset","qualname":"::constants::DW_AT_PGI_soffset","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3439},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33621,"byte_end":33638,"line_start":574,"line_end":574,"column_start":5,"column_end":22},"name":"DW_AT_PGI_lstride","qualname":"::constants::DW_AT_PGI_lstride","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3440},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33677,"byte_end":33704,"line_start":577,"line_end":577,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_property_read","qualname":"::constants::DW_AT_BORLAND_property_read","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3441},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33719,"byte_end":33747,"line_start":578,"line_end":578,"column_start":5,"column_end":33},"name":"DW_AT_BORLAND_property_write","qualname":"::constants::DW_AT_BORLAND_property_write","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3442},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33762,"byte_end":33795,"line_start":579,"line_end":579,"column_start":5,"column_end":38},"name":"DW_AT_BORLAND_property_implements","qualname":"::constants::DW_AT_BORLAND_property_implements","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3443},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33810,"byte_end":33838,"line_start":580,"line_end":580,"column_start":5,"column_end":33},"name":"DW_AT_BORLAND_property_index","qualname":"::constants::DW_AT_BORLAND_property_index","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3444},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33853,"byte_end":33883,"line_start":581,"line_end":581,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_property_default","qualname":"::constants::DW_AT_BORLAND_property_default","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3445},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33898,"byte_end":33923,"line_start":582,"line_end":582,"column_start":5,"column_end":30},"name":"DW_AT_BORLAND_Delphi_unit","qualname":"::constants::DW_AT_BORLAND_Delphi_unit","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3446},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33938,"byte_end":33964,"line_start":583,"line_end":583,"column_start":5,"column_end":31},"name":"DW_AT_BORLAND_Delphi_class","qualname":"::constants::DW_AT_BORLAND_Delphi_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3447},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":33979,"byte_end":34006,"line_start":584,"line_end":584,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_Delphi_record","qualname":"::constants::DW_AT_BORLAND_Delphi_record","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3448},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34021,"byte_end":34051,"line_start":585,"line_end":585,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_Delphi_metaclass","qualname":"::constants::DW_AT_BORLAND_Delphi_metaclass","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3449},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34066,"byte_end":34098,"line_start":586,"line_end":586,"column_start":5,"column_end":37},"name":"DW_AT_BORLAND_Delphi_constructor","qualname":"::constants::DW_AT_BORLAND_Delphi_constructor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3450},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34113,"byte_end":34144,"line_start":587,"line_end":587,"column_start":5,"column_end":36},"name":"DW_AT_BORLAND_Delphi_destructor","qualname":"::constants::DW_AT_BORLAND_Delphi_destructor","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3451},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34159,"byte_end":34196,"line_start":588,"line_end":588,"column_start":5,"column_end":42},"name":"DW_AT_BORLAND_Delphi_anonymous_method","qualname":"::constants::DW_AT_BORLAND_Delphi_anonymous_method","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3452},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34211,"byte_end":34241,"line_start":589,"line_end":589,"column_start":5,"column_end":35},"name":"DW_AT_BORLAND_Delphi_interface","qualname":"::constants::DW_AT_BORLAND_Delphi_interface","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3453},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34256,"byte_end":34280,"line_start":590,"line_end":590,"column_start":5,"column_end":29},"name":"DW_AT_BORLAND_Delphi_ABI","qualname":"::constants::DW_AT_BORLAND_Delphi_ABI","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3454},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34295,"byte_end":34322,"line_start":591,"line_end":591,"column_start":5,"column_end":32},"name":"DW_AT_BORLAND_Delphi_return","qualname":"::constants::DW_AT_BORLAND_Delphi_return","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3455},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34337,"byte_end":34366,"line_start":592,"line_end":592,"column_start":5,"column_end":34},"name":"DW_AT_BORLAND_Delphi_frameptr","qualname":"::constants::DW_AT_BORLAND_Delphi_frameptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3456},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34381,"byte_end":34402,"line_start":593,"line_end":593,"column_start":5,"column_end":26},"name":"DW_AT_BORLAND_closure","qualname":"::constants::DW_AT_BORLAND_closure","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3457},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34446,"byte_end":34469,"line_start":596,"line_end":596,"column_start":5,"column_end":28},"name":"DW_AT_LLVM_include_path","qualname":"::constants::DW_AT_LLVM_include_path","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3458},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34484,"byte_end":34508,"line_start":597,"line_end":597,"column_start":5,"column_end":29},"name":"DW_AT_LLVM_config_macros","qualname":"::constants::DW_AT_LLVM_config_macros","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3459},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34523,"byte_end":34542,"line_start":598,"line_end":598,"column_start":5,"column_end":24},"name":"DW_AT_LLVM_isysroot","qualname":"::constants::DW_AT_LLVM_isysroot","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3460},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34579,"byte_end":34600,"line_start":601,"line_end":601,"column_start":5,"column_end":26},"name":"DW_AT_APPLE_optimized","qualname":"::constants::DW_AT_APPLE_optimized","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3461},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34615,"byte_end":34632,"line_start":602,"line_end":602,"column_start":5,"column_end":22},"name":"DW_AT_APPLE_flags","qualname":"::constants::DW_AT_APPLE_flags","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3462},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34647,"byte_end":34662,"line_start":603,"line_end":603,"column_start":5,"column_end":20},"name":"DW_AT_APPLE_isa","qualname":"::constants::DW_AT_APPLE_isa","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3463},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34677,"byte_end":34694,"line_start":604,"line_end":604,"column_start":5,"column_end":22},"name":"DW_AT_APPLE_block","qualname":"::constants::DW_AT_APPLE_block","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3464},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34709,"byte_end":34739,"line_start":605,"line_end":605,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_major_runtime_vers","qualname":"::constants::DW_AT_APPLE_major_runtime_vers","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3465},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34754,"byte_end":34779,"line_start":606,"line_end":606,"column_start":5,"column_end":30},"name":"DW_AT_APPLE_runtime_class","qualname":"::constants::DW_AT_APPLE_runtime_class","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3466},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34794,"byte_end":34820,"line_start":607,"line_end":607,"column_start":5,"column_end":31},"name":"DW_AT_APPLE_omit_frame_ptr","qualname":"::constants::DW_AT_APPLE_omit_frame_ptr","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3467},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34835,"byte_end":34860,"line_start":608,"line_end":608,"column_start":5,"column_end":30},"name":"DW_AT_APPLE_property_name","qualname":"::constants::DW_AT_APPLE_property_name","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3468},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34875,"byte_end":34902,"line_start":609,"line_end":609,"column_start":5,"column_end":32},"name":"DW_AT_APPLE_property_getter","qualname":"::constants::DW_AT_APPLE_property_getter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3469},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34917,"byte_end":34944,"line_start":610,"line_end":610,"column_start":5,"column_end":32},"name":"DW_AT_APPLE_property_setter","qualname":"::constants::DW_AT_APPLE_property_setter","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3470},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":34959,"byte_end":34989,"line_start":611,"line_end":611,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_property_attribute","qualname":"::constants::DW_AT_APPLE_property_attribute","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3471},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35004,"byte_end":35034,"line_start":612,"line_end":612,"column_start":5,"column_end":35},"name":"DW_AT_APPLE_objc_complete_type","qualname":"::constants::DW_AT_APPLE_objc_complete_type","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3472},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35049,"byte_end":35069,"line_start":613,"line_end":613,"column_start":5,"column_end":25},"name":"DW_AT_APPLE_property","qualname":"::constants::DW_AT_APPLE_property","value":"DwAt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3555},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35180,"byte_end":35186,"line_start":620,"line_end":620,"column_start":1,"column_end":7},"name":"DwForm","qualname":"::constants::DwForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" The attribute form encodings for DIE attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3503},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35198,"byte_end":35210,"line_start":621,"line_end":621,"column_start":5,"column_end":17},"name":"DW_FORM_null","qualname":"::constants::DW_FORM_null","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3504},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35224,"byte_end":35236,"line_start":623,"line_end":623,"column_start":5,"column_end":17},"name":"DW_FORM_addr","qualname":"::constants::DW_FORM_addr","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3505},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35249,"byte_end":35263,"line_start":624,"line_end":624,"column_start":5,"column_end":19},"name":"DW_FORM_block2","qualname":"::constants::DW_FORM_block2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3506},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35276,"byte_end":35290,"line_start":625,"line_end":625,"column_start":5,"column_end":19},"name":"DW_FORM_block4","qualname":"::constants::DW_FORM_block4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3507},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35303,"byte_end":35316,"line_start":626,"line_end":626,"column_start":5,"column_end":18},"name":"DW_FORM_data2","qualname":"::constants::DW_FORM_data2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3508},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35329,"byte_end":35342,"line_start":627,"line_end":627,"column_start":5,"column_end":18},"name":"DW_FORM_data4","qualname":"::constants::DW_FORM_data4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3509},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35355,"byte_end":35368,"line_start":628,"line_end":628,"column_start":5,"column_end":18},"name":"DW_FORM_data8","qualname":"::constants::DW_FORM_data8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3510},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35381,"byte_end":35395,"line_start":629,"line_end":629,"column_start":5,"column_end":19},"name":"DW_FORM_string","qualname":"::constants::DW_FORM_string","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3511},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35408,"byte_end":35421,"line_start":630,"line_end":630,"column_start":5,"column_end":18},"name":"DW_FORM_block","qualname":"::constants::DW_FORM_block","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3512},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35434,"byte_end":35448,"line_start":631,"line_end":631,"column_start":5,"column_end":19},"name":"DW_FORM_block1","qualname":"::constants::DW_FORM_block1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3513},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35461,"byte_end":35474,"line_start":632,"line_end":632,"column_start":5,"column_end":18},"name":"DW_FORM_data1","qualname":"::constants::DW_FORM_data1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3514},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35487,"byte_end":35499,"line_start":633,"line_end":633,"column_start":5,"column_end":17},"name":"DW_FORM_flag","qualname":"::constants::DW_FORM_flag","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3515},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35512,"byte_end":35525,"line_start":634,"line_end":634,"column_start":5,"column_end":18},"name":"DW_FORM_sdata","qualname":"::constants::DW_FORM_sdata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3516},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35538,"byte_end":35550,"line_start":635,"line_end":635,"column_start":5,"column_end":17},"name":"DW_FORM_strp","qualname":"::constants::DW_FORM_strp","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3517},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35563,"byte_end":35576,"line_start":636,"line_end":636,"column_start":5,"column_end":18},"name":"DW_FORM_udata","qualname":"::constants::DW_FORM_udata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3518},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35589,"byte_end":35605,"line_start":637,"line_end":637,"column_start":5,"column_end":21},"name":"DW_FORM_ref_addr","qualname":"::constants::DW_FORM_ref_addr","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3519},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35618,"byte_end":35630,"line_start":638,"line_end":638,"column_start":5,"column_end":17},"name":"DW_FORM_ref1","qualname":"::constants::DW_FORM_ref1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3520},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35643,"byte_end":35655,"line_start":639,"line_end":639,"column_start":5,"column_end":17},"name":"DW_FORM_ref2","qualname":"::constants::DW_FORM_ref2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3521},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35668,"byte_end":35680,"line_start":640,"line_end":640,"column_start":5,"column_end":17},"name":"DW_FORM_ref4","qualname":"::constants::DW_FORM_ref4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3522},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35693,"byte_end":35705,"line_start":641,"line_end":641,"column_start":5,"column_end":17},"name":"DW_FORM_ref8","qualname":"::constants::DW_FORM_ref8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3523},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35718,"byte_end":35735,"line_start":642,"line_end":642,"column_start":5,"column_end":22},"name":"DW_FORM_ref_udata","qualname":"::constants::DW_FORM_ref_udata","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3524},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35748,"byte_end":35764,"line_start":643,"line_end":643,"column_start":5,"column_end":21},"name":"DW_FORM_indirect","qualname":"::constants::DW_FORM_indirect","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3525},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35790,"byte_end":35808,"line_start":646,"line_end":646,"column_start":5,"column_end":23},"name":"DW_FORM_sec_offset","qualname":"::constants::DW_FORM_sec_offset","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3526},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35821,"byte_end":35836,"line_start":647,"line_end":647,"column_start":5,"column_end":20},"name":"DW_FORM_exprloc","qualname":"::constants::DW_FORM_exprloc","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3527},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35849,"byte_end":35869,"line_start":648,"line_end":648,"column_start":5,"column_end":25},"name":"DW_FORM_flag_present","qualname":"::constants::DW_FORM_flag_present","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3528},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35882,"byte_end":35898,"line_start":649,"line_end":649,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sig8","qualname":"::constants::DW_FORM_ref_sig8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3529},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35924,"byte_end":35936,"line_start":652,"line_end":652,"column_start":5,"column_end":17},"name":"DW_FORM_strx","qualname":"::constants::DW_FORM_strx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3530},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35949,"byte_end":35962,"line_start":653,"line_end":653,"column_start":5,"column_end":18},"name":"DW_FORM_addrx","qualname":"::constants::DW_FORM_addrx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3531},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":35975,"byte_end":35991,"line_start":654,"line_end":654,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sup4","qualname":"::constants::DW_FORM_ref_sup4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3532},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36004,"byte_end":36020,"line_start":655,"line_end":655,"column_start":5,"column_end":21},"name":"DW_FORM_strp_sup","qualname":"::constants::DW_FORM_strp_sup","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3533},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36033,"byte_end":36047,"line_start":656,"line_end":656,"column_start":5,"column_end":19},"name":"DW_FORM_data16","qualname":"::constants::DW_FORM_data16","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3534},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36060,"byte_end":36077,"line_start":657,"line_end":657,"column_start":5,"column_end":22},"name":"DW_FORM_line_strp","qualname":"::constants::DW_FORM_line_strp","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3535},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36090,"byte_end":36112,"line_start":658,"line_end":658,"column_start":5,"column_end":27},"name":"DW_FORM_implicit_const","qualname":"::constants::DW_FORM_implicit_const","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3536},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36125,"byte_end":36141,"line_start":659,"line_end":659,"column_start":5,"column_end":21},"name":"DW_FORM_loclistx","qualname":"::constants::DW_FORM_loclistx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3537},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36154,"byte_end":36170,"line_start":660,"line_end":660,"column_start":5,"column_end":21},"name":"DW_FORM_rnglistx","qualname":"::constants::DW_FORM_rnglistx","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3538},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36183,"byte_end":36199,"line_start":661,"line_end":661,"column_start":5,"column_end":21},"name":"DW_FORM_ref_sup8","qualname":"::constants::DW_FORM_ref_sup8","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3539},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36212,"byte_end":36225,"line_start":662,"line_end":662,"column_start":5,"column_end":18},"name":"DW_FORM_strx1","qualname":"::constants::DW_FORM_strx1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3540},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36238,"byte_end":36251,"line_start":663,"line_end":663,"column_start":5,"column_end":18},"name":"DW_FORM_strx2","qualname":"::constants::DW_FORM_strx2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3541},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36264,"byte_end":36277,"line_start":664,"line_end":664,"column_start":5,"column_end":18},"name":"DW_FORM_strx3","qualname":"::constants::DW_FORM_strx3","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3542},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36290,"byte_end":36303,"line_start":665,"line_end":665,"column_start":5,"column_end":18},"name":"DW_FORM_strx4","qualname":"::constants::DW_FORM_strx4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3543},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36316,"byte_end":36330,"line_start":666,"line_end":666,"column_start":5,"column_end":19},"name":"DW_FORM_addrx1","qualname":"::constants::DW_FORM_addrx1","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3544},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36343,"byte_end":36357,"line_start":667,"line_end":667,"column_start":5,"column_end":19},"name":"DW_FORM_addrx2","qualname":"::constants::DW_FORM_addrx2","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3545},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36370,"byte_end":36384,"line_start":668,"line_end":668,"column_start":5,"column_end":19},"name":"DW_FORM_addrx3","qualname":"::constants::DW_FORM_addrx3","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3546},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36397,"byte_end":36411,"line_start":669,"line_end":669,"column_start":5,"column_end":19},"name":"DW_FORM_addrx4","qualname":"::constants::DW_FORM_addrx4","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3547},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36460,"byte_end":36482,"line_start":672,"line_end":672,"column_start":5,"column_end":27},"name":"DW_FORM_GNU_addr_index","qualname":"::constants::DW_FORM_GNU_addr_index","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3548},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36497,"byte_end":36518,"line_start":673,"line_end":673,"column_start":5,"column_end":26},"name":"DW_FORM_GNU_str_index","qualname":"::constants::DW_FORM_GNU_str_index","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3549},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36595,"byte_end":36614,"line_start":676,"line_end":676,"column_start":5,"column_end":24},"name":"DW_FORM_GNU_ref_alt","qualname":"::constants::DW_FORM_GNU_ref_alt","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3550},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36629,"byte_end":36649,"line_start":677,"line_end":677,"column_start":5,"column_end":25},"name":"DW_FORM_GNU_strp_alt","qualname":"::constants::DW_FORM_GNU_strp_alt","value":"DwForm","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3605},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36781,"byte_end":36786,"line_start":684,"line_end":684,"column_start":1,"column_end":6},"name":"DwAte","qualname":"::constants::DwAte","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_encoding` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3581},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36797,"byte_end":36811,"line_start":685,"line_end":685,"column_start":5,"column_end":19},"name":"DW_ATE_address","qualname":"::constants::DW_ATE_address","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3582},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36824,"byte_end":36838,"line_start":686,"line_end":686,"column_start":5,"column_end":19},"name":"DW_ATE_boolean","qualname":"::constants::DW_ATE_boolean","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3583},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36851,"byte_end":36871,"line_start":687,"line_end":687,"column_start":5,"column_end":25},"name":"DW_ATE_complex_float","qualname":"::constants::DW_ATE_complex_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3584},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36884,"byte_end":36896,"line_start":688,"line_end":688,"column_start":5,"column_end":17},"name":"DW_ATE_float","qualname":"::constants::DW_ATE_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3585},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36909,"byte_end":36922,"line_start":689,"line_end":689,"column_start":5,"column_end":18},"name":"DW_ATE_signed","qualname":"::constants::DW_ATE_signed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3586},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36935,"byte_end":36953,"line_start":690,"line_end":690,"column_start":5,"column_end":23},"name":"DW_ATE_signed_char","qualname":"::constants::DW_ATE_signed_char","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3587},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36966,"byte_end":36981,"line_start":691,"line_end":691,"column_start":5,"column_end":20},"name":"DW_ATE_unsigned","qualname":"::constants::DW_ATE_unsigned","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3588},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":36994,"byte_end":37014,"line_start":692,"line_end":692,"column_start":5,"column_end":25},"name":"DW_ATE_unsigned_char","qualname":"::constants::DW_ATE_unsigned_char","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3589},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37040,"byte_end":37062,"line_start":695,"line_end":695,"column_start":5,"column_end":27},"name":"DW_ATE_imaginary_float","qualname":"::constants::DW_ATE_imaginary_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3590},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37075,"byte_end":37096,"line_start":696,"line_end":696,"column_start":5,"column_end":26},"name":"DW_ATE_packed_decimal","qualname":"::constants::DW_ATE_packed_decimal","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3591},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37109,"byte_end":37130,"line_start":697,"line_end":697,"column_start":5,"column_end":26},"name":"DW_ATE_numeric_string","qualname":"::constants::DW_ATE_numeric_string","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3592},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37143,"byte_end":37156,"line_start":698,"line_end":698,"column_start":5,"column_end":18},"name":"DW_ATE_edited","qualname":"::constants::DW_ATE_edited","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3593},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37169,"byte_end":37188,"line_start":699,"line_end":699,"column_start":5,"column_end":24},"name":"DW_ATE_signed_fixed","qualname":"::constants::DW_ATE_signed_fixed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3594},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37201,"byte_end":37222,"line_start":700,"line_end":700,"column_start":5,"column_end":26},"name":"DW_ATE_unsigned_fixed","qualname":"::constants::DW_ATE_unsigned_fixed","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3595},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37235,"byte_end":37255,"line_start":701,"line_end":701,"column_start":5,"column_end":25},"name":"DW_ATE_decimal_float","qualname":"::constants::DW_ATE_decimal_float","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3596},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37282,"byte_end":37292,"line_start":704,"line_end":704,"column_start":5,"column_end":15},"name":"DW_ATE_UTF","qualname":"::constants::DW_ATE_UTF","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3597},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37305,"byte_end":37315,"line_start":705,"line_end":705,"column_start":5,"column_end":15},"name":"DW_ATE_UCS","qualname":"::constants::DW_ATE_UCS","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3598},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37328,"byte_end":37340,"line_start":706,"line_end":706,"column_start":5,"column_end":17},"name":"DW_ATE_ASCII","qualname":"::constants::DW_ATE_ASCII","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3599},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37354,"byte_end":37368,"line_start":708,"line_end":708,"column_start":5,"column_end":19},"name":"DW_ATE_lo_user","qualname":"::constants::DW_ATE_lo_user","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3600},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37381,"byte_end":37395,"line_start":709,"line_end":709,"column_start":5,"column_end":19},"name":"DW_ATE_hi_user","qualname":"::constants::DW_ATE_hi_user","value":"DwAte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3645},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37519,"byte_end":37524,"line_start":716,"line_end":716,"column_start":1,"column_end":6},"name":"DwLle","qualname":"::constants::DwLle","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in location list entries.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3631},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37535,"byte_end":37553,"line_start":717,"line_end":717,"column_start":5,"column_end":23},"name":"DW_LLE_end_of_list","qualname":"::constants::DW_LLE_end_of_list","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3632},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37566,"byte_end":37586,"line_start":718,"line_end":718,"column_start":5,"column_end":25},"name":"DW_LLE_base_addressx","qualname":"::constants::DW_LLE_base_addressx","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3633},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37599,"byte_end":37617,"line_start":719,"line_end":719,"column_start":5,"column_end":23},"name":"DW_LLE_startx_endx","qualname":"::constants::DW_LLE_startx_endx","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3634},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37630,"byte_end":37650,"line_start":720,"line_end":720,"column_start":5,"column_end":25},"name":"DW_LLE_startx_length","qualname":"::constants::DW_LLE_startx_length","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3635},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37663,"byte_end":37681,"line_start":721,"line_end":721,"column_start":5,"column_end":23},"name":"DW_LLE_offset_pair","qualname":"::constants::DW_LLE_offset_pair","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3636},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37694,"byte_end":37717,"line_start":722,"line_end":722,"column_start":5,"column_end":28},"name":"DW_LLE_default_location","qualname":"::constants::DW_LLE_default_location","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3637},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37730,"byte_end":37749,"line_start":723,"line_end":723,"column_start":5,"column_end":24},"name":"DW_LLE_base_address","qualname":"::constants::DW_LLE_base_address","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3638},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37762,"byte_end":37778,"line_start":724,"line_end":724,"column_start":5,"column_end":21},"name":"DW_LLE_start_end","qualname":"::constants::DW_LLE_start_end","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3639},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37791,"byte_end":37810,"line_start":725,"line_end":725,"column_start":5,"column_end":24},"name":"DW_LLE_start_length","qualname":"::constants::DW_LLE_start_length","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3640},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37823,"byte_end":37843,"line_start":726,"line_end":726,"column_start":5,"column_end":25},"name":"DW_LLE_GNU_view_pair","qualname":"::constants::DW_LLE_GNU_view_pair","value":"DwLle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3680},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37978,"byte_end":37982,"line_start":733,"line_end":733,"column_start":1,"column_end":5},"name":"DwDs","qualname":"::constants::DwDs","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_decimal_sign` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3671},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":37993,"byte_end":38007,"line_start":734,"line_end":734,"column_start":5,"column_end":19},"name":"DW_DS_unsigned","qualname":"::constants::DW_DS_unsigned","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3672},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38020,"byte_end":38043,"line_start":735,"line_end":735,"column_start":5,"column_end":28},"name":"DW_DS_leading_overpunch","qualname":"::constants::DW_DS_leading_overpunch","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3673},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38056,"byte_end":38080,"line_start":736,"line_end":736,"column_start":5,"column_end":29},"name":"DW_DS_trailing_overpunch","qualname":"::constants::DW_DS_trailing_overpunch","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3674},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38093,"byte_end":38115,"line_start":737,"line_end":737,"column_start":5,"column_end":27},"name":"DW_DS_leading_separate","qualname":"::constants::DW_DS_leading_separate","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3675},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38128,"byte_end":38151,"line_start":738,"line_end":738,"column_start":5,"column_end":28},"name":"DW_DS_trailing_separate","qualname":"::constants::DW_DS_trailing_separate","value":"DwDs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3715},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38283,"byte_end":38288,"line_start":745,"line_end":745,"column_start":1,"column_end":6},"name":"DwEnd","qualname":"::constants::DwEnd","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_endianity` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3706},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38299,"byte_end":38313,"line_start":746,"line_end":746,"column_start":5,"column_end":19},"name":"DW_END_default","qualname":"::constants::DW_END_default","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3707},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38326,"byte_end":38336,"line_start":747,"line_end":747,"column_start":5,"column_end":15},"name":"DW_END_big","qualname":"::constants::DW_END_big","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3708},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38349,"byte_end":38362,"line_start":748,"line_end":748,"column_start":5,"column_end":18},"name":"DW_END_little","qualname":"::constants::DW_END_little","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3709},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38375,"byte_end":38389,"line_start":749,"line_end":749,"column_start":5,"column_end":19},"name":"DW_END_lo_user","qualname":"::constants::DW_END_lo_user","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3710},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38402,"byte_end":38416,"line_start":750,"line_end":750,"column_start":5,"column_end":19},"name":"DW_END_hi_user","qualname":"::constants::DW_END_hi_user","value":"DwEnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3748},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38552,"byte_end":38560,"line_start":757,"line_end":757,"column_start":1,"column_end":9},"name":"DwAccess","qualname":"::constants::DwAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_accessibility` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3741},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38571,"byte_end":38587,"line_start":758,"line_end":758,"column_start":5,"column_end":21},"name":"DW_ACCESS_public","qualname":"::constants::DW_ACCESS_public","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3742},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38600,"byte_end":38619,"line_start":759,"line_end":759,"column_start":5,"column_end":24},"name":"DW_ACCESS_protected","qualname":"::constants::DW_ACCESS_protected","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3743},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38632,"byte_end":38649,"line_start":760,"line_end":760,"column_start":5,"column_end":22},"name":"DW_ACCESS_private","qualname":"::constants::DW_ACCESS_private","value":"DwAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3781},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38783,"byte_end":38788,"line_start":767,"line_end":767,"column_start":1,"column_end":6},"name":"DwVis","qualname":"::constants::DwVis","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_visibility` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3774},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38799,"byte_end":38811,"line_start":768,"line_end":768,"column_start":5,"column_end":17},"name":"DW_VIS_local","qualname":"::constants::DW_VIS_local","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3775},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38824,"byte_end":38839,"line_start":769,"line_end":769,"column_start":5,"column_end":20},"name":"DW_VIS_exported","qualname":"::constants::DW_VIS_exported","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3776},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":38852,"byte_end":38868,"line_start":770,"line_end":770,"column_start":5,"column_end":21},"name":"DW_VIS_qualified","qualname":"::constants::DW_VIS_qualified","value":"DwVis","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3814},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39002,"byte_end":39014,"line_start":777,"line_end":777,"column_start":1,"column_end":13},"name":"DwVirtuality","qualname":"::constants::DwVirtuality","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_virtuality` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3807},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39025,"byte_end":39043,"line_start":778,"line_end":778,"column_start":5,"column_end":23},"name":"DW_VIRTUALITY_none","qualname":"::constants::DW_VIRTUALITY_none","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3808},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39056,"byte_end":39077,"line_start":779,"line_end":779,"column_start":5,"column_end":26},"name":"DW_VIRTUALITY_virtual","qualname":"::constants::DW_VIRTUALITY_virtual","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3809},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39090,"byte_end":39116,"line_start":780,"line_end":780,"column_start":5,"column_end":31},"name":"DW_VIRTUALITY_pure_virtual","qualname":"::constants::DW_VIRTUALITY_pure_virtual","value":"DwVirtuality","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3888},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39248,"byte_end":39254,"line_start":787,"line_end":787,"column_start":1,"column_end":7},"name":"DwLang","qualname":"::constants::DwLang","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_language` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3840},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39266,"byte_end":39277,"line_start":788,"line_end":788,"column_start":5,"column_end":16},"name":"DW_LANG_C89","qualname":"::constants::DW_LANG_C89","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3841},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39292,"byte_end":39301,"line_start":789,"line_end":789,"column_start":5,"column_end":14},"name":"DW_LANG_C","qualname":"::constants::DW_LANG_C","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3842},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39316,"byte_end":39329,"line_start":790,"line_end":790,"column_start":5,"column_end":18},"name":"DW_LANG_Ada83","qualname":"::constants::DW_LANG_Ada83","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3843},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39344,"byte_end":39363,"line_start":791,"line_end":791,"column_start":5,"column_end":24},"name":"DW_LANG_C_plus_plus","qualname":"::constants::DW_LANG_C_plus_plus","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3844},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39378,"byte_end":39393,"line_start":792,"line_end":792,"column_start":5,"column_end":20},"name":"DW_LANG_Cobol74","qualname":"::constants::DW_LANG_Cobol74","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3845},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39408,"byte_end":39423,"line_start":793,"line_end":793,"column_start":5,"column_end":20},"name":"DW_LANG_Cobol85","qualname":"::constants::DW_LANG_Cobol85","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3846},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39438,"byte_end":39455,"line_start":794,"line_end":794,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran77","qualname":"::constants::DW_LANG_Fortran77","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3847},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39470,"byte_end":39487,"line_start":795,"line_end":795,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran90","qualname":"::constants::DW_LANG_Fortran90","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3848},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39502,"byte_end":39518,"line_start":796,"line_end":796,"column_start":5,"column_end":21},"name":"DW_LANG_Pascal83","qualname":"::constants::DW_LANG_Pascal83","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3849},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39533,"byte_end":39548,"line_start":797,"line_end":797,"column_start":5,"column_end":20},"name":"DW_LANG_Modula2","qualname":"::constants::DW_LANG_Modula2","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3850},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39563,"byte_end":39575,"line_start":798,"line_end":798,"column_start":5,"column_end":17},"name":"DW_LANG_Java","qualname":"::constants::DW_LANG_Java","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3851},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39590,"byte_end":39601,"line_start":799,"line_end":799,"column_start":5,"column_end":16},"name":"DW_LANG_C99","qualname":"::constants::DW_LANG_C99","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3852},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39616,"byte_end":39629,"line_start":800,"line_end":800,"column_start":5,"column_end":18},"name":"DW_LANG_Ada95","qualname":"::constants::DW_LANG_Ada95","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3853},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39644,"byte_end":39661,"line_start":801,"line_end":801,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran95","qualname":"::constants::DW_LANG_Fortran95","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3854},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39676,"byte_end":39687,"line_start":802,"line_end":802,"column_start":5,"column_end":16},"name":"DW_LANG_PLI","qualname":"::constants::DW_LANG_PLI","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3855},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39702,"byte_end":39714,"line_start":803,"line_end":803,"column_start":5,"column_end":17},"name":"DW_LANG_ObjC","qualname":"::constants::DW_LANG_ObjC","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3856},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39729,"byte_end":39751,"line_start":804,"line_end":804,"column_start":5,"column_end":27},"name":"DW_LANG_ObjC_plus_plus","qualname":"::constants::DW_LANG_ObjC_plus_plus","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3857},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39766,"byte_end":39777,"line_start":805,"line_end":805,"column_start":5,"column_end":16},"name":"DW_LANG_UPC","qualname":"::constants::DW_LANG_UPC","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3858},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39792,"byte_end":39801,"line_start":806,"line_end":806,"column_start":5,"column_end":14},"name":"DW_LANG_D","qualname":"::constants::DW_LANG_D","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3859},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39816,"byte_end":39830,"line_start":807,"line_end":807,"column_start":5,"column_end":19},"name":"DW_LANG_Python","qualname":"::constants::DW_LANG_Python","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3860},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39845,"byte_end":39859,"line_start":808,"line_end":808,"column_start":5,"column_end":19},"name":"DW_LANG_OpenCL","qualname":"::constants::DW_LANG_OpenCL","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3861},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39874,"byte_end":39884,"line_start":809,"line_end":809,"column_start":5,"column_end":15},"name":"DW_LANG_Go","qualname":"::constants::DW_LANG_Go","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3862},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39899,"byte_end":39914,"line_start":810,"line_end":810,"column_start":5,"column_end":20},"name":"DW_LANG_Modula3","qualname":"::constants::DW_LANG_Modula3","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3863},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39929,"byte_end":39944,"line_start":811,"line_end":811,"column_start":5,"column_end":20},"name":"DW_LANG_Haskell","qualname":"::constants::DW_LANG_Haskell","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3864},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39959,"byte_end":39981,"line_start":812,"line_end":812,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_03","qualname":"::constants::DW_LANG_C_plus_plus_03","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3865},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":39996,"byte_end":40018,"line_start":813,"line_end":813,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_11","qualname":"::constants::DW_LANG_C_plus_plus_11","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3866},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40033,"byte_end":40046,"line_start":814,"line_end":814,"column_start":5,"column_end":18},"name":"DW_LANG_OCaml","qualname":"::constants::DW_LANG_OCaml","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3867},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40061,"byte_end":40073,"line_start":815,"line_end":815,"column_start":5,"column_end":17},"name":"DW_LANG_Rust","qualname":"::constants::DW_LANG_Rust","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3868},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40088,"byte_end":40099,"line_start":816,"line_end":816,"column_start":5,"column_end":16},"name":"DW_LANG_C11","qualname":"::constants::DW_LANG_C11","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3869},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40114,"byte_end":40127,"line_start":817,"line_end":817,"column_start":5,"column_end":18},"name":"DW_LANG_Swift","qualname":"::constants::DW_LANG_Swift","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3870},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40142,"byte_end":40155,"line_start":818,"line_end":818,"column_start":5,"column_end":18},"name":"DW_LANG_Julia","qualname":"::constants::DW_LANG_Julia","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3871},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40170,"byte_end":40183,"line_start":819,"line_end":819,"column_start":5,"column_end":18},"name":"DW_LANG_Dylan","qualname":"::constants::DW_LANG_Dylan","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3872},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40198,"byte_end":40220,"line_start":820,"line_end":820,"column_start":5,"column_end":27},"name":"DW_LANG_C_plus_plus_14","qualname":"::constants::DW_LANG_C_plus_plus_14","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3873},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40235,"byte_end":40252,"line_start":821,"line_end":821,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran03","qualname":"::constants::DW_LANG_Fortran03","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3874},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40267,"byte_end":40284,"line_start":822,"line_end":822,"column_start":5,"column_end":22},"name":"DW_LANG_Fortran08","qualname":"::constants::DW_LANG_Fortran08","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3875},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40299,"byte_end":40319,"line_start":823,"line_end":823,"column_start":5,"column_end":25},"name":"DW_LANG_RenderScript","qualname":"::constants::DW_LANG_RenderScript","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3876},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40334,"byte_end":40347,"line_start":824,"line_end":824,"column_start":5,"column_end":18},"name":"DW_LANG_BLISS","qualname":"::constants::DW_LANG_BLISS","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3877},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40363,"byte_end":40378,"line_start":826,"line_end":826,"column_start":5,"column_end":20},"name":"DW_LANG_lo_user","qualname":"::constants::DW_LANG_lo_user","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3878},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40393,"byte_end":40408,"line_start":827,"line_end":827,"column_start":5,"column_end":20},"name":"DW_LANG_hi_user","qualname":"::constants::DW_LANG_hi_user","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3879},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40424,"byte_end":40446,"line_start":829,"line_end":829,"column_start":5,"column_end":27},"name":"DW_LANG_Mips_Assembler","qualname":"::constants::DW_LANG_Mips_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3880},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40461,"byte_end":40488,"line_start":830,"line_end":830,"column_start":5,"column_end":32},"name":"DW_LANG_GOOGLE_RenderScript","qualname":"::constants::DW_LANG_GOOGLE_RenderScript","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3881},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40503,"byte_end":40524,"line_start":831,"line_end":831,"column_start":5,"column_end":26},"name":"DW_LANG_SUN_Assembler","qualname":"::constants::DW_LANG_SUN_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3882},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40539,"byte_end":40563,"line_start":832,"line_end":832,"column_start":5,"column_end":29},"name":"DW_LANG_ALTIUM_Assembler","qualname":"::constants::DW_LANG_ALTIUM_Assembler","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3883},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40578,"byte_end":40600,"line_start":833,"line_end":833,"column_start":5,"column_end":27},"name":"DW_LANG_BORLAND_Delphi","qualname":"::constants::DW_LANG_BORLAND_Delphi","value":"DwLang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40702,"byte_end":40721,"line_start":838,"line_end":838,"column_start":12,"column_end":31},"name":"default_lower_bound","qualname":"<DwLang>::default_lower_bound","value":"fn (self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the default DW_AT_lower_bound for this language.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3919},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":41989,"byte_end":41995,"line_start":877,"line_end":877,"column_start":1,"column_end":7},"name":"DwAddr","qualname":"::constants::DwAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_address_class` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3914},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42007,"byte_end":42019,"line_start":878,"line_end":878,"column_start":5,"column_end":17},"name":"DW_ADDR_none","qualname":"::constants::DW_ADDR_none","value":"DwAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3953},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42158,"byte_end":42162,"line_start":885,"line_end":885,"column_start":1,"column_end":5},"name":"DwId","qualname":"::constants::DwId","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_identifier_case` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3945},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42173,"byte_end":42193,"line_start":886,"line_end":886,"column_start":5,"column_end":25},"name":"DW_ID_case_sensitive","qualname":"::constants::DW_ID_case_sensitive","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3946},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42206,"byte_end":42219,"line_start":887,"line_end":887,"column_start":5,"column_end":18},"name":"DW_ID_up_case","qualname":"::constants::DW_ID_up_case","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3947},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42232,"byte_end":42247,"line_start":888,"line_end":888,"column_start":5,"column_end":20},"name":"DW_ID_down_case","qualname":"::constants::DW_ID_down_case","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3948},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42260,"byte_end":42282,"line_start":889,"line_end":889,"column_start":5,"column_end":27},"name":"DW_ID_case_insensitive","qualname":"::constants::DW_ID_case_insensitive","value":"DwId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3990},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42424,"byte_end":42428,"line_start":896,"line_end":896,"column_start":1,"column_end":5},"name":"DwCc","qualname":"::constants::DwCc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_calling_convention` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3979},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42439,"byte_end":42451,"line_start":897,"line_end":897,"column_start":5,"column_end":17},"name":"DW_CC_normal","qualname":"::constants::DW_CC_normal","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3980},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42464,"byte_end":42477,"line_start":898,"line_end":898,"column_start":5,"column_end":18},"name":"DW_CC_program","qualname":"::constants::DW_CC_program","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3981},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42490,"byte_end":42502,"line_start":899,"line_end":899,"column_start":5,"column_end":17},"name":"DW_CC_nocall","qualname":"::constants::DW_CC_nocall","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3982},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42515,"byte_end":42538,"line_start":900,"line_end":900,"column_start":5,"column_end":28},"name":"DW_CC_pass_by_reference","qualname":"::constants::DW_CC_pass_by_reference","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3983},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42551,"byte_end":42570,"line_start":901,"line_end":901,"column_start":5,"column_end":24},"name":"DW_CC_pass_by_value","qualname":"::constants::DW_CC_pass_by_value","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3984},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42583,"byte_end":42596,"line_start":902,"line_end":902,"column_start":5,"column_end":18},"name":"DW_CC_lo_user","qualname":"::constants::DW_CC_lo_user","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3985},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42609,"byte_end":42622,"line_start":903,"line_end":903,"column_start":5,"column_end":18},"name":"DW_CC_hi_user","qualname":"::constants::DW_CC_hi_user","value":"DwCc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4024},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42752,"byte_end":42757,"line_start":910,"line_end":910,"column_start":1,"column_end":6},"name":"DwInl","qualname":"::constants::DwInl","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_inline` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4016},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42768,"byte_end":42786,"line_start":911,"line_end":911,"column_start":5,"column_end":23},"name":"DW_INL_not_inlined","qualname":"::constants::DW_INL_not_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4017},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42799,"byte_end":42813,"line_start":912,"line_end":912,"column_start":5,"column_end":19},"name":"DW_INL_inlined","qualname":"::constants::DW_INL_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4018},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42826,"byte_end":42853,"line_start":913,"line_end":913,"column_start":5,"column_end":32},"name":"DW_INL_declared_not_inlined","qualname":"::constants::DW_INL_declared_not_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4019},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":42866,"byte_end":42889,"line_start":914,"line_end":914,"column_start":5,"column_end":28},"name":"DW_INL_declared_inlined","qualname":"::constants::DW_INL_declared_inlined","value":"DwInl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4056},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43021,"byte_end":43026,"line_start":921,"line_end":921,"column_start":1,"column_end":6},"name":"DwOrd","qualname":"::constants::DwOrd","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_ordering` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4050},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43037,"byte_end":43053,"line_start":922,"line_end":922,"column_start":5,"column_end":21},"name":"DW_ORD_row_major","qualname":"::constants::DW_ORD_row_major","value":"DwOrd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4051},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43066,"byte_end":43082,"line_start":923,"line_end":923,"column_start":5,"column_end":21},"name":"DW_ORD_col_major","qualname":"::constants::DW_ORD_col_major","value":"DwOrd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4088},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43216,"byte_end":43221,"line_start":930,"line_end":930,"column_start":1,"column_end":6},"name":"DwDsc","qualname":"::constants::DwDsc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_discr_list` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4082},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43232,"byte_end":43244,"line_start":931,"line_end":931,"column_start":5,"column_end":17},"name":"DW_DSC_label","qualname":"::constants::DW_DSC_label","value":"DwDsc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4083},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43257,"byte_end":43269,"line_start":932,"line_end":932,"column_start":5,"column_end":17},"name":"DW_DSC_range","qualname":"::constants::DW_DSC_range","value":"DwDsc","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4125},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43362,"byte_end":43367,"line_start":939,"line_end":939,"column_start":1,"column_end":6},"name":"DwIdx","qualname":"::constants::DwIdx","value":"","parent":null,"children":[],"decl_id":null,"docs":" Name index attribute encodings.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4114},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43379,"byte_end":43398,"line_start":940,"line_end":940,"column_start":5,"column_end":24},"name":"DW_IDX_compile_unit","qualname":"::constants::DW_IDX_compile_unit","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4115},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43408,"byte_end":43424,"line_start":941,"line_end":941,"column_start":5,"column_end":21},"name":"DW_IDX_type_unit","qualname":"::constants::DW_IDX_type_unit","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4116},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43434,"byte_end":43451,"line_start":942,"line_end":942,"column_start":5,"column_end":22},"name":"DW_IDX_die_offset","qualname":"::constants::DW_IDX_die_offset","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4117},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43461,"byte_end":43474,"line_start":943,"line_end":943,"column_start":5,"column_end":18},"name":"DW_IDX_parent","qualname":"::constants::DW_IDX_parent","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4118},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43484,"byte_end":43500,"line_start":944,"line_end":944,"column_start":5,"column_end":21},"name":"DW_IDX_type_hash","qualname":"::constants::DW_IDX_type_hash","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4119},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43510,"byte_end":43524,"line_start":945,"line_end":945,"column_start":5,"column_end":19},"name":"DW_IDX_lo_user","qualname":"::constants::DW_IDX_lo_user","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4120},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43539,"byte_end":43553,"line_start":946,"line_end":946,"column_start":5,"column_end":19},"name":"DW_IDX_hi_user","qualname":"::constants::DW_IDX_hi_user","value":"DwIdx","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4158},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43688,"byte_end":43699,"line_start":953,"line_end":953,"column_start":1,"column_end":12},"name":"DwDefaulted","qualname":"::constants::DwDefaulted","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings of the constants used in the `DW_AT_defaulted` attribute.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4151},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43710,"byte_end":43725,"line_start":954,"line_end":954,"column_start":5,"column_end":20},"name":"DW_DEFAULTED_no","qualname":"::constants::DW_DEFAULTED_no","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4152},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43738,"byte_end":43759,"line_start":955,"line_end":955,"column_start":5,"column_end":26},"name":"DW_DEFAULTED_in_class","qualname":"::constants::DW_DEFAULTED_in_class","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4153},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43772,"byte_end":43797,"line_start":956,"line_end":956,"column_start":5,"column_end":30},"name":"DW_DEFAULTED_out_of_class","qualname":"::constants::DW_DEFAULTED_out_of_class","value":"DwDefaulted","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4200},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43926,"byte_end":43931,"line_start":963,"line_end":963,"column_start":1,"column_end":6},"name":"DwLns","qualname":"::constants::DwLns","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the standard opcodes for line number information.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4184},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43942,"byte_end":43953,"line_start":964,"line_end":964,"column_start":5,"column_end":16},"name":"DW_LNS_copy","qualname":"::constants::DW_LNS_copy","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4185},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43966,"byte_end":43983,"line_start":965,"line_end":965,"column_start":5,"column_end":22},"name":"DW_LNS_advance_pc","qualname":"::constants::DW_LNS_advance_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4186},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":43996,"byte_end":44015,"line_start":966,"line_end":966,"column_start":5,"column_end":24},"name":"DW_LNS_advance_line","qualname":"::constants::DW_LNS_advance_line","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4187},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44028,"byte_end":44043,"line_start":967,"line_end":967,"column_start":5,"column_end":20},"name":"DW_LNS_set_file","qualname":"::constants::DW_LNS_set_file","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4188},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44056,"byte_end":44073,"line_start":968,"line_end":968,"column_start":5,"column_end":22},"name":"DW_LNS_set_column","qualname":"::constants::DW_LNS_set_column","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4189},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44086,"byte_end":44104,"line_start":969,"line_end":969,"column_start":5,"column_end":23},"name":"DW_LNS_negate_stmt","qualname":"::constants::DW_LNS_negate_stmt","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4190},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44117,"byte_end":44139,"line_start":970,"line_end":970,"column_start":5,"column_end":27},"name":"DW_LNS_set_basic_block","qualname":"::constants::DW_LNS_set_basic_block","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4191},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44152,"byte_end":44171,"line_start":971,"line_end":971,"column_start":5,"column_end":24},"name":"DW_LNS_const_add_pc","qualname":"::constants::DW_LNS_const_add_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4192},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44184,"byte_end":44207,"line_start":972,"line_end":972,"column_start":5,"column_end":28},"name":"DW_LNS_fixed_advance_pc","qualname":"::constants::DW_LNS_fixed_advance_pc","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4193},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44220,"byte_end":44243,"line_start":973,"line_end":973,"column_start":5,"column_end":28},"name":"DW_LNS_set_prologue_end","qualname":"::constants::DW_LNS_set_prologue_end","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4194},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44256,"byte_end":44281,"line_start":974,"line_end":974,"column_start":5,"column_end":30},"name":"DW_LNS_set_epilogue_begin","qualname":"::constants::DW_LNS_set_epilogue_begin","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4195},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44294,"byte_end":44308,"line_start":975,"line_end":975,"column_start":5,"column_end":19},"name":"DW_LNS_set_isa","qualname":"::constants::DW_LNS_set_isa","value":"DwLns","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4236},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44437,"byte_end":44442,"line_start":982,"line_end":982,"column_start":1,"column_end":6},"name":"DwLne","qualname":"::constants::DwLne","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the extended opcodes for line number information.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4226},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44453,"byte_end":44472,"line_start":983,"line_end":983,"column_start":5,"column_end":24},"name":"DW_LNE_end_sequence","qualname":"::constants::DW_LNE_end_sequence","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4227},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44485,"byte_end":44503,"line_start":984,"line_end":984,"column_start":5,"column_end":23},"name":"DW_LNE_set_address","qualname":"::constants::DW_LNE_set_address","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4228},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44516,"byte_end":44534,"line_start":985,"line_end":985,"column_start":5,"column_end":23},"name":"DW_LNE_define_file","qualname":"::constants::DW_LNE_define_file","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4229},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44547,"byte_end":44571,"line_start":986,"line_end":986,"column_start":5,"column_end":29},"name":"DW_LNE_set_discriminator","qualname":"::constants::DW_LNE_set_discriminator","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4230},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44585,"byte_end":44599,"line_start":988,"line_end":988,"column_start":5,"column_end":19},"name":"DW_LNE_lo_user","qualname":"::constants::DW_LNE_lo_user","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4231},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44612,"byte_end":44626,"line_start":989,"line_end":989,"column_start":5,"column_end":19},"name":"DW_LNE_hi_user","qualname":"::constants::DW_LNE_hi_user","value":"DwLne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4273},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44743,"byte_end":44749,"line_start":996,"line_end":996,"column_start":1,"column_end":7},"name":"DwLnct","qualname":"::constants::DwLnct","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for the line number header entry formats.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4262},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44761,"byte_end":44773,"line_start":997,"line_end":997,"column_start":5,"column_end":17},"name":"DW_LNCT_path","qualname":"::constants::DW_LNCT_path","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4263},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44785,"byte_end":44808,"line_start":998,"line_end":998,"column_start":5,"column_end":28},"name":"DW_LNCT_directory_index","qualname":"::constants::DW_LNCT_directory_index","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4264},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44820,"byte_end":44837,"line_start":999,"line_end":999,"column_start":5,"column_end":22},"name":"DW_LNCT_timestamp","qualname":"::constants::DW_LNCT_timestamp","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4265},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44849,"byte_end":44861,"line_start":1000,"line_end":1000,"column_start":5,"column_end":17},"name":"DW_LNCT_size","qualname":"::constants::DW_LNCT_size","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4266},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44873,"byte_end":44884,"line_start":1001,"line_end":1001,"column_start":5,"column_end":16},"name":"DW_LNCT_MD5","qualname":"::constants::DW_LNCT_MD5","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4267},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44896,"byte_end":44911,"line_start":1002,"line_end":1002,"column_start":5,"column_end":20},"name":"DW_LNCT_lo_user","qualname":"::constants::DW_LNCT_lo_user","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4268},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":44926,"byte_end":44941,"line_start":1003,"line_end":1003,"column_start":5,"column_end":20},"name":"DW_LNCT_hi_user","qualname":"::constants::DW_LNCT_hi_user","value":"DwLnct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4317},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45053,"byte_end":45060,"line_start":1010,"line_end":1010,"column_start":1,"column_end":8},"name":"DwMacro","qualname":"::constants::DwMacro","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for macro information entry types.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4299},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45071,"byte_end":45086,"line_start":1011,"line_end":1011,"column_start":5,"column_end":20},"name":"DW_MACRO_define","qualname":"::constants::DW_MACRO_define","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4300},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45099,"byte_end":45113,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19},"name":"DW_MACRO_undef","qualname":"::constants::DW_MACRO_undef","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4301},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45126,"byte_end":45145,"line_start":1013,"line_end":1013,"column_start":5,"column_end":24},"name":"DW_MACRO_start_file","qualname":"::constants::DW_MACRO_start_file","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4302},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45158,"byte_end":45175,"line_start":1014,"line_end":1014,"column_start":5,"column_end":22},"name":"DW_MACRO_end_file","qualname":"::constants::DW_MACRO_end_file","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4303},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45188,"byte_end":45208,"line_start":1015,"line_end":1015,"column_start":5,"column_end":25},"name":"DW_MACRO_define_strp","qualname":"::constants::DW_MACRO_define_strp","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4304},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45221,"byte_end":45240,"line_start":1016,"line_end":1016,"column_start":5,"column_end":24},"name":"DW_MACRO_undef_strp","qualname":"::constants::DW_MACRO_undef_strp","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4305},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45253,"byte_end":45268,"line_start":1017,"line_end":1017,"column_start":5,"column_end":20},"name":"DW_MACRO_import","qualname":"::constants::DW_MACRO_import","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4306},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45281,"byte_end":45300,"line_start":1018,"line_end":1018,"column_start":5,"column_end":24},"name":"DW_MACRO_define_sup","qualname":"::constants::DW_MACRO_define_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4307},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45313,"byte_end":45331,"line_start":1019,"line_end":1019,"column_start":5,"column_end":23},"name":"DW_MACRO_undef_sup","qualname":"::constants::DW_MACRO_undef_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4308},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45344,"byte_end":45363,"line_start":1020,"line_end":1020,"column_start":5,"column_end":24},"name":"DW_MACRO_import_sup","qualname":"::constants::DW_MACRO_import_sup","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4309},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45376,"byte_end":45396,"line_start":1021,"line_end":1021,"column_start":5,"column_end":25},"name":"DW_MACRO_define_strx","qualname":"::constants::DW_MACRO_define_strx","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4310},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45409,"byte_end":45428,"line_start":1022,"line_end":1022,"column_start":5,"column_end":24},"name":"DW_MACRO_undef_strx","qualname":"::constants::DW_MACRO_undef_strx","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4311},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45441,"byte_end":45457,"line_start":1023,"line_end":1023,"column_start":5,"column_end":21},"name":"DW_MACRO_lo_user","qualname":"::constants::DW_MACRO_lo_user","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4312},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45470,"byte_end":45486,"line_start":1024,"line_end":1024,"column_start":5,"column_end":21},"name":"DW_MACRO_hi_user","qualname":"::constants::DW_MACRO_hi_user","value":"DwMacro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4355},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45581,"byte_end":45586,"line_start":1031,"line_end":1031,"column_start":1,"column_end":6},"name":"DwRle","qualname":"::constants::DwRle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Range list entry encoding values.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4343},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45597,"byte_end":45615,"line_start":1032,"line_end":1032,"column_start":5,"column_end":23},"name":"DW_RLE_end_of_list","qualname":"::constants::DW_RLE_end_of_list","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4344},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45628,"byte_end":45648,"line_start":1033,"line_end":1033,"column_start":5,"column_end":25},"name":"DW_RLE_base_addressx","qualname":"::constants::DW_RLE_base_addressx","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4345},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45661,"byte_end":45679,"line_start":1034,"line_end":1034,"column_start":5,"column_end":23},"name":"DW_RLE_startx_endx","qualname":"::constants::DW_RLE_startx_endx","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4346},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45692,"byte_end":45712,"line_start":1035,"line_end":1035,"column_start":5,"column_end":25},"name":"DW_RLE_startx_length","qualname":"::constants::DW_RLE_startx_length","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4347},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45725,"byte_end":45743,"line_start":1036,"line_end":1036,"column_start":5,"column_end":23},"name":"DW_RLE_offset_pair","qualname":"::constants::DW_RLE_offset_pair","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4348},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45756,"byte_end":45775,"line_start":1037,"line_end":1037,"column_start":5,"column_end":24},"name":"DW_RLE_base_address","qualname":"::constants::DW_RLE_base_address","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4349},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45788,"byte_end":45804,"line_start":1038,"line_end":1038,"column_start":5,"column_end":21},"name":"DW_RLE_start_end","qualname":"::constants::DW_RLE_start_end","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4350},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45817,"byte_end":45836,"line_start":1039,"line_end":1039,"column_start":5,"column_end":24},"name":"DW_RLE_start_length","qualname":"::constants::DW_RLE_start_length","value":"DwRle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4558},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45944,"byte_end":45948,"line_start":1046,"line_end":1046,"column_start":1,"column_end":5},"name":"DwOp","qualname":"::constants::DwOp","value":"","parent":null,"children":[],"decl_id":null,"docs":" The encodings for DWARF expression operations.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4381},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45959,"byte_end":45969,"line_start":1047,"line_end":1047,"column_start":5,"column_end":15},"name":"DW_OP_addr","qualname":"::constants::DW_OP_addr","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4382},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":45982,"byte_end":45993,"line_start":1048,"line_end":1048,"column_start":5,"column_end":16},"name":"DW_OP_deref","qualname":"::constants::DW_OP_deref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4383},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46006,"byte_end":46019,"line_start":1049,"line_end":1049,"column_start":5,"column_end":18},"name":"DW_OP_const1u","qualname":"::constants::DW_OP_const1u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4384},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46032,"byte_end":46045,"line_start":1050,"line_end":1050,"column_start":5,"column_end":18},"name":"DW_OP_const1s","qualname":"::constants::DW_OP_const1s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4385},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46058,"byte_end":46071,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18},"name":"DW_OP_const2u","qualname":"::constants::DW_OP_const2u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4386},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46084,"byte_end":46097,"line_start":1052,"line_end":1052,"column_start":5,"column_end":18},"name":"DW_OP_const2s","qualname":"::constants::DW_OP_const2s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4387},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46110,"byte_end":46123,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18},"name":"DW_OP_const4u","qualname":"::constants::DW_OP_const4u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4388},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46136,"byte_end":46149,"line_start":1054,"line_end":1054,"column_start":5,"column_end":18},"name":"DW_OP_const4s","qualname":"::constants::DW_OP_const4s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4389},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46162,"byte_end":46175,"line_start":1055,"line_end":1055,"column_start":5,"column_end":18},"name":"DW_OP_const8u","qualname":"::constants::DW_OP_const8u","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4390},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46188,"byte_end":46201,"line_start":1056,"line_end":1056,"column_start":5,"column_end":18},"name":"DW_OP_const8s","qualname":"::constants::DW_OP_const8s","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4391},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46214,"byte_end":46226,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17},"name":"DW_OP_constu","qualname":"::constants::DW_OP_constu","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4392},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46239,"byte_end":46251,"line_start":1058,"line_end":1058,"column_start":5,"column_end":17},"name":"DW_OP_consts","qualname":"::constants::DW_OP_consts","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4393},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46264,"byte_end":46273,"line_start":1059,"line_end":1059,"column_start":5,"column_end":14},"name":"DW_OP_dup","qualname":"::constants::DW_OP_dup","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4394},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46286,"byte_end":46296,"line_start":1060,"line_end":1060,"column_start":5,"column_end":15},"name":"DW_OP_drop","qualname":"::constants::DW_OP_drop","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4395},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46309,"byte_end":46319,"line_start":1061,"line_end":1061,"column_start":5,"column_end":15},"name":"DW_OP_over","qualname":"::constants::DW_OP_over","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4396},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46332,"byte_end":46342,"line_start":1062,"line_end":1062,"column_start":5,"column_end":15},"name":"DW_OP_pick","qualname":"::constants::DW_OP_pick","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4397},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46355,"byte_end":46365,"line_start":1063,"line_end":1063,"column_start":5,"column_end":15},"name":"DW_OP_swap","qualname":"::constants::DW_OP_swap","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4398},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46378,"byte_end":46387,"line_start":1064,"line_end":1064,"column_start":5,"column_end":14},"name":"DW_OP_rot","qualname":"::constants::DW_OP_rot","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4399},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46400,"byte_end":46412,"line_start":1065,"line_end":1065,"column_start":5,"column_end":17},"name":"DW_OP_xderef","qualname":"::constants::DW_OP_xderef","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4400},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46425,"byte_end":46434,"line_start":1066,"line_end":1066,"column_start":5,"column_end":14},"name":"DW_OP_abs","qualname":"::constants::DW_OP_abs","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4401},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46447,"byte_end":46456,"line_start":1067,"line_end":1067,"column_start":5,"column_end":14},"name":"DW_OP_and","qualname":"::constants::DW_OP_and","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4402},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46469,"byte_end":46478,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14},"name":"DW_OP_div","qualname":"::constants::DW_OP_div","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4403},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46491,"byte_end":46502,"line_start":1069,"line_end":1069,"column_start":5,"column_end":16},"name":"DW_OP_minus","qualname":"::constants::DW_OP_minus","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4404},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46515,"byte_end":46524,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14},"name":"DW_OP_mod","qualname":"::constants::DW_OP_mod","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4405},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46537,"byte_end":46546,"line_start":1071,"line_end":1071,"column_start":5,"column_end":14},"name":"DW_OP_mul","qualname":"::constants::DW_OP_mul","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4406},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46559,"byte_end":46568,"line_start":1072,"line_end":1072,"column_start":5,"column_end":14},"name":"DW_OP_neg","qualname":"::constants::DW_OP_neg","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4407},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46581,"byte_end":46590,"line_start":1073,"line_end":1073,"column_start":5,"column_end":14},"name":"DW_OP_not","qualname":"::constants::DW_OP_not","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4408},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46603,"byte_end":46611,"line_start":1074,"line_end":1074,"column_start":5,"column_end":13},"name":"DW_OP_or","qualname":"::constants::DW_OP_or","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4409},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46624,"byte_end":46634,"line_start":1075,"line_end":1075,"column_start":5,"column_end":15},"name":"DW_OP_plus","qualname":"::constants::DW_OP_plus","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4410},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46647,"byte_end":46664,"line_start":1076,"line_end":1076,"column_start":5,"column_end":22},"name":"DW_OP_plus_uconst","qualname":"::constants::DW_OP_plus_uconst","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4411},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46677,"byte_end":46686,"line_start":1077,"line_end":1077,"column_start":5,"column_end":14},"name":"DW_OP_shl","qualname":"::constants::DW_OP_shl","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4412},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46699,"byte_end":46708,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14},"name":"DW_OP_shr","qualname":"::constants::DW_OP_shr","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4413},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46721,"byte_end":46731,"line_start":1079,"line_end":1079,"column_start":5,"column_end":15},"name":"DW_OP_shra","qualname":"::constants::DW_OP_shra","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4414},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46744,"byte_end":46753,"line_start":1080,"line_end":1080,"column_start":5,"column_end":14},"name":"DW_OP_xor","qualname":"::constants::DW_OP_xor","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4415},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46766,"byte_end":46775,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14},"name":"DW_OP_bra","qualname":"::constants::DW_OP_bra","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4416},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46788,"byte_end":46796,"line_start":1082,"line_end":1082,"column_start":5,"column_end":13},"name":"DW_OP_eq","qualname":"::constants::DW_OP_eq","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4417},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46809,"byte_end":46817,"line_start":1083,"line_end":1083,"column_start":5,"column_end":13},"name":"DW_OP_ge","qualname":"::constants::DW_OP_ge","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4418},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46830,"byte_end":46838,"line_start":1084,"line_end":1084,"column_start":5,"column_end":13},"name":"DW_OP_gt","qualname":"::constants::DW_OP_gt","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4419},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46851,"byte_end":46859,"line_start":1085,"line_end":1085,"column_start":5,"column_end":13},"name":"DW_OP_le","qualname":"::constants::DW_OP_le","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4420},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46872,"byte_end":46880,"line_start":1086,"line_end":1086,"column_start":5,"column_end":13},"name":"DW_OP_lt","qualname":"::constants::DW_OP_lt","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4421},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46893,"byte_end":46901,"line_start":1087,"line_end":1087,"column_start":5,"column_end":13},"name":"DW_OP_ne","qualname":"::constants::DW_OP_ne","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4422},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46914,"byte_end":46924,"line_start":1088,"line_end":1088,"column_start":5,"column_end":15},"name":"DW_OP_skip","qualname":"::constants::DW_OP_skip","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4423},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46937,"byte_end":46947,"line_start":1089,"line_end":1089,"column_start":5,"column_end":15},"name":"DW_OP_lit0","qualname":"::constants::DW_OP_lit0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4424},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46960,"byte_end":46970,"line_start":1090,"line_end":1090,"column_start":5,"column_end":15},"name":"DW_OP_lit1","qualname":"::constants::DW_OP_lit1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4425},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":46983,"byte_end":46993,"line_start":1091,"line_end":1091,"column_start":5,"column_end":15},"name":"DW_OP_lit2","qualname":"::constants::DW_OP_lit2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4426},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47006,"byte_end":47016,"line_start":1092,"line_end":1092,"column_start":5,"column_end":15},"name":"DW_OP_lit3","qualname":"::constants::DW_OP_lit3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4427},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47029,"byte_end":47039,"line_start":1093,"line_end":1093,"column_start":5,"column_end":15},"name":"DW_OP_lit4","qualname":"::constants::DW_OP_lit4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4428},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47052,"byte_end":47062,"line_start":1094,"line_end":1094,"column_start":5,"column_end":15},"name":"DW_OP_lit5","qualname":"::constants::DW_OP_lit5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4429},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47075,"byte_end":47085,"line_start":1095,"line_end":1095,"column_start":5,"column_end":15},"name":"DW_OP_lit6","qualname":"::constants::DW_OP_lit6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4430},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47098,"byte_end":47108,"line_start":1096,"line_end":1096,"column_start":5,"column_end":15},"name":"DW_OP_lit7","qualname":"::constants::DW_OP_lit7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4431},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47121,"byte_end":47131,"line_start":1097,"line_end":1097,"column_start":5,"column_end":15},"name":"DW_OP_lit8","qualname":"::constants::DW_OP_lit8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4432},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47144,"byte_end":47154,"line_start":1098,"line_end":1098,"column_start":5,"column_end":15},"name":"DW_OP_lit9","qualname":"::constants::DW_OP_lit9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4433},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47167,"byte_end":47178,"line_start":1099,"line_end":1099,"column_start":5,"column_end":16},"name":"DW_OP_lit10","qualname":"::constants::DW_OP_lit10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4434},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47191,"byte_end":47202,"line_start":1100,"line_end":1100,"column_start":5,"column_end":16},"name":"DW_OP_lit11","qualname":"::constants::DW_OP_lit11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4435},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47215,"byte_end":47226,"line_start":1101,"line_end":1101,"column_start":5,"column_end":16},"name":"DW_OP_lit12","qualname":"::constants::DW_OP_lit12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4436},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47239,"byte_end":47250,"line_start":1102,"line_end":1102,"column_start":5,"column_end":16},"name":"DW_OP_lit13","qualname":"::constants::DW_OP_lit13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4437},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47263,"byte_end":47274,"line_start":1103,"line_end":1103,"column_start":5,"column_end":16},"name":"DW_OP_lit14","qualname":"::constants::DW_OP_lit14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4438},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47287,"byte_end":47298,"line_start":1104,"line_end":1104,"column_start":5,"column_end":16},"name":"DW_OP_lit15","qualname":"::constants::DW_OP_lit15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4439},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47311,"byte_end":47322,"line_start":1105,"line_end":1105,"column_start":5,"column_end":16},"name":"DW_OP_lit16","qualname":"::constants::DW_OP_lit16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4440},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47335,"byte_end":47346,"line_start":1106,"line_end":1106,"column_start":5,"column_end":16},"name":"DW_OP_lit17","qualname":"::constants::DW_OP_lit17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4441},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47359,"byte_end":47370,"line_start":1107,"line_end":1107,"column_start":5,"column_end":16},"name":"DW_OP_lit18","qualname":"::constants::DW_OP_lit18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4442},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47383,"byte_end":47394,"line_start":1108,"line_end":1108,"column_start":5,"column_end":16},"name":"DW_OP_lit19","qualname":"::constants::DW_OP_lit19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4443},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47407,"byte_end":47418,"line_start":1109,"line_end":1109,"column_start":5,"column_end":16},"name":"DW_OP_lit20","qualname":"::constants::DW_OP_lit20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4444},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47431,"byte_end":47442,"line_start":1110,"line_end":1110,"column_start":5,"column_end":16},"name":"DW_OP_lit21","qualname":"::constants::DW_OP_lit21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4445},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47455,"byte_end":47466,"line_start":1111,"line_end":1111,"column_start":5,"column_end":16},"name":"DW_OP_lit22","qualname":"::constants::DW_OP_lit22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4446},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47479,"byte_end":47490,"line_start":1112,"line_end":1112,"column_start":5,"column_end":16},"name":"DW_OP_lit23","qualname":"::constants::DW_OP_lit23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4447},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47503,"byte_end":47514,"line_start":1113,"line_end":1113,"column_start":5,"column_end":16},"name":"DW_OP_lit24","qualname":"::constants::DW_OP_lit24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4448},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47527,"byte_end":47538,"line_start":1114,"line_end":1114,"column_start":5,"column_end":16},"name":"DW_OP_lit25","qualname":"::constants::DW_OP_lit25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4449},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47551,"byte_end":47562,"line_start":1115,"line_end":1115,"column_start":5,"column_end":16},"name":"DW_OP_lit26","qualname":"::constants::DW_OP_lit26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4450},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47575,"byte_end":47586,"line_start":1116,"line_end":1116,"column_start":5,"column_end":16},"name":"DW_OP_lit27","qualname":"::constants::DW_OP_lit27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4451},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47599,"byte_end":47610,"line_start":1117,"line_end":1117,"column_start":5,"column_end":16},"name":"DW_OP_lit28","qualname":"::constants::DW_OP_lit28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4452},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47623,"byte_end":47634,"line_start":1118,"line_end":1118,"column_start":5,"column_end":16},"name":"DW_OP_lit29","qualname":"::constants::DW_OP_lit29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4453},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47647,"byte_end":47658,"line_start":1119,"line_end":1119,"column_start":5,"column_end":16},"name":"DW_OP_lit30","qualname":"::constants::DW_OP_lit30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4454},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47671,"byte_end":47682,"line_start":1120,"line_end":1120,"column_start":5,"column_end":16},"name":"DW_OP_lit31","qualname":"::constants::DW_OP_lit31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4455},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47695,"byte_end":47705,"line_start":1121,"line_end":1121,"column_start":5,"column_end":15},"name":"DW_OP_reg0","qualname":"::constants::DW_OP_reg0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4456},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47718,"byte_end":47728,"line_start":1122,"line_end":1122,"column_start":5,"column_end":15},"name":"DW_OP_reg1","qualname":"::constants::DW_OP_reg1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4457},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47741,"byte_end":47751,"line_start":1123,"line_end":1123,"column_start":5,"column_end":15},"name":"DW_OP_reg2","qualname":"::constants::DW_OP_reg2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4458},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47764,"byte_end":47774,"line_start":1124,"line_end":1124,"column_start":5,"column_end":15},"name":"DW_OP_reg3","qualname":"::constants::DW_OP_reg3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4459},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47787,"byte_end":47797,"line_start":1125,"line_end":1125,"column_start":5,"column_end":15},"name":"DW_OP_reg4","qualname":"::constants::DW_OP_reg4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4460},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47810,"byte_end":47820,"line_start":1126,"line_end":1126,"column_start":5,"column_end":15},"name":"DW_OP_reg5","qualname":"::constants::DW_OP_reg5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4461},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47833,"byte_end":47843,"line_start":1127,"line_end":1127,"column_start":5,"column_end":15},"name":"DW_OP_reg6","qualname":"::constants::DW_OP_reg6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4462},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47856,"byte_end":47866,"line_start":1128,"line_end":1128,"column_start":5,"column_end":15},"name":"DW_OP_reg7","qualname":"::constants::DW_OP_reg7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4463},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47879,"byte_end":47889,"line_start":1129,"line_end":1129,"column_start":5,"column_end":15},"name":"DW_OP_reg8","qualname":"::constants::DW_OP_reg8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4464},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47902,"byte_end":47912,"line_start":1130,"line_end":1130,"column_start":5,"column_end":15},"name":"DW_OP_reg9","qualname":"::constants::DW_OP_reg9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4465},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47925,"byte_end":47936,"line_start":1131,"line_end":1131,"column_start":5,"column_end":16},"name":"DW_OP_reg10","qualname":"::constants::DW_OP_reg10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4466},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47949,"byte_end":47960,"line_start":1132,"line_end":1132,"column_start":5,"column_end":16},"name":"DW_OP_reg11","qualname":"::constants::DW_OP_reg11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4467},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47973,"byte_end":47984,"line_start":1133,"line_end":1133,"column_start":5,"column_end":16},"name":"DW_OP_reg12","qualname":"::constants::DW_OP_reg12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4468},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":47997,"byte_end":48008,"line_start":1134,"line_end":1134,"column_start":5,"column_end":16},"name":"DW_OP_reg13","qualname":"::constants::DW_OP_reg13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4469},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48021,"byte_end":48032,"line_start":1135,"line_end":1135,"column_start":5,"column_end":16},"name":"DW_OP_reg14","qualname":"::constants::DW_OP_reg14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4470},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48045,"byte_end":48056,"line_start":1136,"line_end":1136,"column_start":5,"column_end":16},"name":"DW_OP_reg15","qualname":"::constants::DW_OP_reg15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4471},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48069,"byte_end":48080,"line_start":1137,"line_end":1137,"column_start":5,"column_end":16},"name":"DW_OP_reg16","qualname":"::constants::DW_OP_reg16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4472},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48093,"byte_end":48104,"line_start":1138,"line_end":1138,"column_start":5,"column_end":16},"name":"DW_OP_reg17","qualname":"::constants::DW_OP_reg17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4473},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48117,"byte_end":48128,"line_start":1139,"line_end":1139,"column_start":5,"column_end":16},"name":"DW_OP_reg18","qualname":"::constants::DW_OP_reg18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4474},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48141,"byte_end":48152,"line_start":1140,"line_end":1140,"column_start":5,"column_end":16},"name":"DW_OP_reg19","qualname":"::constants::DW_OP_reg19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4475},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48165,"byte_end":48176,"line_start":1141,"line_end":1141,"column_start":5,"column_end":16},"name":"DW_OP_reg20","qualname":"::constants::DW_OP_reg20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4476},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48189,"byte_end":48200,"line_start":1142,"line_end":1142,"column_start":5,"column_end":16},"name":"DW_OP_reg21","qualname":"::constants::DW_OP_reg21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4477},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48213,"byte_end":48224,"line_start":1143,"line_end":1143,"column_start":5,"column_end":16},"name":"DW_OP_reg22","qualname":"::constants::DW_OP_reg22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4478},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48237,"byte_end":48248,"line_start":1144,"line_end":1144,"column_start":5,"column_end":16},"name":"DW_OP_reg23","qualname":"::constants::DW_OP_reg23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4479},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48261,"byte_end":48272,"line_start":1145,"line_end":1145,"column_start":5,"column_end":16},"name":"DW_OP_reg24","qualname":"::constants::DW_OP_reg24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4480},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48285,"byte_end":48296,"line_start":1146,"line_end":1146,"column_start":5,"column_end":16},"name":"DW_OP_reg25","qualname":"::constants::DW_OP_reg25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4481},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48309,"byte_end":48320,"line_start":1147,"line_end":1147,"column_start":5,"column_end":16},"name":"DW_OP_reg26","qualname":"::constants::DW_OP_reg26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4482},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48333,"byte_end":48344,"line_start":1148,"line_end":1148,"column_start":5,"column_end":16},"name":"DW_OP_reg27","qualname":"::constants::DW_OP_reg27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4483},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48357,"byte_end":48368,"line_start":1149,"line_end":1149,"column_start":5,"column_end":16},"name":"DW_OP_reg28","qualname":"::constants::DW_OP_reg28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4484},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48381,"byte_end":48392,"line_start":1150,"line_end":1150,"column_start":5,"column_end":16},"name":"DW_OP_reg29","qualname":"::constants::DW_OP_reg29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4485},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48405,"byte_end":48416,"line_start":1151,"line_end":1151,"column_start":5,"column_end":16},"name":"DW_OP_reg30","qualname":"::constants::DW_OP_reg30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4486},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48429,"byte_end":48440,"line_start":1152,"line_end":1152,"column_start":5,"column_end":16},"name":"DW_OP_reg31","qualname":"::constants::DW_OP_reg31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4487},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48453,"byte_end":48464,"line_start":1153,"line_end":1153,"column_start":5,"column_end":16},"name":"DW_OP_breg0","qualname":"::constants::DW_OP_breg0","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4488},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48477,"byte_end":48488,"line_start":1154,"line_end":1154,"column_start":5,"column_end":16},"name":"DW_OP_breg1","qualname":"::constants::DW_OP_breg1","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4489},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48501,"byte_end":48512,"line_start":1155,"line_end":1155,"column_start":5,"column_end":16},"name":"DW_OP_breg2","qualname":"::constants::DW_OP_breg2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4490},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48525,"byte_end":48536,"line_start":1156,"line_end":1156,"column_start":5,"column_end":16},"name":"DW_OP_breg3","qualname":"::constants::DW_OP_breg3","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4491},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48549,"byte_end":48560,"line_start":1157,"line_end":1157,"column_start":5,"column_end":16},"name":"DW_OP_breg4","qualname":"::constants::DW_OP_breg4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4492},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48573,"byte_end":48584,"line_start":1158,"line_end":1158,"column_start":5,"column_end":16},"name":"DW_OP_breg5","qualname":"::constants::DW_OP_breg5","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4493},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48597,"byte_end":48608,"line_start":1159,"line_end":1159,"column_start":5,"column_end":16},"name":"DW_OP_breg6","qualname":"::constants::DW_OP_breg6","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4494},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48621,"byte_end":48632,"line_start":1160,"line_end":1160,"column_start":5,"column_end":16},"name":"DW_OP_breg7","qualname":"::constants::DW_OP_breg7","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4495},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48645,"byte_end":48656,"line_start":1161,"line_end":1161,"column_start":5,"column_end":16},"name":"DW_OP_breg8","qualname":"::constants::DW_OP_breg8","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4496},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48669,"byte_end":48680,"line_start":1162,"line_end":1162,"column_start":5,"column_end":16},"name":"DW_OP_breg9","qualname":"::constants::DW_OP_breg9","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4497},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48693,"byte_end":48705,"line_start":1163,"line_end":1163,"column_start":5,"column_end":17},"name":"DW_OP_breg10","qualname":"::constants::DW_OP_breg10","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4498},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48718,"byte_end":48730,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17},"name":"DW_OP_breg11","qualname":"::constants::DW_OP_breg11","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4499},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48743,"byte_end":48755,"line_start":1165,"line_end":1165,"column_start":5,"column_end":17},"name":"DW_OP_breg12","qualname":"::constants::DW_OP_breg12","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4500},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48768,"byte_end":48780,"line_start":1166,"line_end":1166,"column_start":5,"column_end":17},"name":"DW_OP_breg13","qualname":"::constants::DW_OP_breg13","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4501},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48793,"byte_end":48805,"line_start":1167,"line_end":1167,"column_start":5,"column_end":17},"name":"DW_OP_breg14","qualname":"::constants::DW_OP_breg14","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4502},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48818,"byte_end":48830,"line_start":1168,"line_end":1168,"column_start":5,"column_end":17},"name":"DW_OP_breg15","qualname":"::constants::DW_OP_breg15","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4503},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48843,"byte_end":48855,"line_start":1169,"line_end":1169,"column_start":5,"column_end":17},"name":"DW_OP_breg16","qualname":"::constants::DW_OP_breg16","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4504},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48868,"byte_end":48880,"line_start":1170,"line_end":1170,"column_start":5,"column_end":17},"name":"DW_OP_breg17","qualname":"::constants::DW_OP_breg17","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4505},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48893,"byte_end":48905,"line_start":1171,"line_end":1171,"column_start":5,"column_end":17},"name":"DW_OP_breg18","qualname":"::constants::DW_OP_breg18","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4506},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48918,"byte_end":48930,"line_start":1172,"line_end":1172,"column_start":5,"column_end":17},"name":"DW_OP_breg19","qualname":"::constants::DW_OP_breg19","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4507},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48943,"byte_end":48955,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17},"name":"DW_OP_breg20","qualname":"::constants::DW_OP_breg20","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4508},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48968,"byte_end":48980,"line_start":1174,"line_end":1174,"column_start":5,"column_end":17},"name":"DW_OP_breg21","qualname":"::constants::DW_OP_breg21","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4509},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":48993,"byte_end":49005,"line_start":1175,"line_end":1175,"column_start":5,"column_end":17},"name":"DW_OP_breg22","qualname":"::constants::DW_OP_breg22","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4510},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49018,"byte_end":49030,"line_start":1176,"line_end":1176,"column_start":5,"column_end":17},"name":"DW_OP_breg23","qualname":"::constants::DW_OP_breg23","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4511},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49043,"byte_end":49055,"line_start":1177,"line_end":1177,"column_start":5,"column_end":17},"name":"DW_OP_breg24","qualname":"::constants::DW_OP_breg24","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4512},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49068,"byte_end":49080,"line_start":1178,"line_end":1178,"column_start":5,"column_end":17},"name":"DW_OP_breg25","qualname":"::constants::DW_OP_breg25","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4513},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49093,"byte_end":49105,"line_start":1179,"line_end":1179,"column_start":5,"column_end":17},"name":"DW_OP_breg26","qualname":"::constants::DW_OP_breg26","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4514},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49118,"byte_end":49130,"line_start":1180,"line_end":1180,"column_start":5,"column_end":17},"name":"DW_OP_breg27","qualname":"::constants::DW_OP_breg27","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4515},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49143,"byte_end":49155,"line_start":1181,"line_end":1181,"column_start":5,"column_end":17},"name":"DW_OP_breg28","qualname":"::constants::DW_OP_breg28","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4516},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49168,"byte_end":49180,"line_start":1182,"line_end":1182,"column_start":5,"column_end":17},"name":"DW_OP_breg29","qualname":"::constants::DW_OP_breg29","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4517},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49193,"byte_end":49205,"line_start":1183,"line_end":1183,"column_start":5,"column_end":17},"name":"DW_OP_breg30","qualname":"::constants::DW_OP_breg30","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4518},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49218,"byte_end":49230,"line_start":1184,"line_end":1184,"column_start":5,"column_end":17},"name":"DW_OP_breg31","qualname":"::constants::DW_OP_breg31","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4519},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49243,"byte_end":49253,"line_start":1185,"line_end":1185,"column_start":5,"column_end":15},"name":"DW_OP_regx","qualname":"::constants::DW_OP_regx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4520},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49266,"byte_end":49277,"line_start":1186,"line_end":1186,"column_start":5,"column_end":16},"name":"DW_OP_fbreg","qualname":"::constants::DW_OP_fbreg","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4521},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49290,"byte_end":49301,"line_start":1187,"line_end":1187,"column_start":5,"column_end":16},"name":"DW_OP_bregx","qualname":"::constants::DW_OP_bregx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4522},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49314,"byte_end":49325,"line_start":1188,"line_end":1188,"column_start":5,"column_end":16},"name":"DW_OP_piece","qualname":"::constants::DW_OP_piece","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4523},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49338,"byte_end":49354,"line_start":1189,"line_end":1189,"column_start":5,"column_end":21},"name":"DW_OP_deref_size","qualname":"::constants::DW_OP_deref_size","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4524},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49367,"byte_end":49384,"line_start":1190,"line_end":1190,"column_start":5,"column_end":22},"name":"DW_OP_xderef_size","qualname":"::constants::DW_OP_xderef_size","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4525},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49397,"byte_end":49406,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14},"name":"DW_OP_nop","qualname":"::constants::DW_OP_nop","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4526},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49419,"byte_end":49444,"line_start":1192,"line_end":1192,"column_start":5,"column_end":30},"name":"DW_OP_push_object_address","qualname":"::constants::DW_OP_push_object_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4527},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49457,"byte_end":49468,"line_start":1193,"line_end":1193,"column_start":5,"column_end":16},"name":"DW_OP_call2","qualname":"::constants::DW_OP_call2","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4528},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49481,"byte_end":49492,"line_start":1194,"line_end":1194,"column_start":5,"column_end":16},"name":"DW_OP_call4","qualname":"::constants::DW_OP_call4","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4529},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49505,"byte_end":49519,"line_start":1195,"line_end":1195,"column_start":5,"column_end":19},"name":"DW_OP_call_ref","qualname":"::constants::DW_OP_call_ref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4530},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49532,"byte_end":49554,"line_start":1196,"line_end":1196,"column_start":5,"column_end":27},"name":"DW_OP_form_tls_address","qualname":"::constants::DW_OP_form_tls_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4531},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49567,"byte_end":49587,"line_start":1197,"line_end":1197,"column_start":5,"column_end":25},"name":"DW_OP_call_frame_cfa","qualname":"::constants::DW_OP_call_frame_cfa","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4532},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49600,"byte_end":49615,"line_start":1198,"line_end":1198,"column_start":5,"column_end":20},"name":"DW_OP_bit_piece","qualname":"::constants::DW_OP_bit_piece","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4533},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49628,"byte_end":49648,"line_start":1199,"line_end":1199,"column_start":5,"column_end":25},"name":"DW_OP_implicit_value","qualname":"::constants::DW_OP_implicit_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4534},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49661,"byte_end":49678,"line_start":1200,"line_end":1200,"column_start":5,"column_end":22},"name":"DW_OP_stack_value","qualname":"::constants::DW_OP_stack_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4535},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49691,"byte_end":49713,"line_start":1201,"line_end":1201,"column_start":5,"column_end":27},"name":"DW_OP_implicit_pointer","qualname":"::constants::DW_OP_implicit_pointer","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4536},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49726,"byte_end":49737,"line_start":1202,"line_end":1202,"column_start":5,"column_end":16},"name":"DW_OP_addrx","qualname":"::constants::DW_OP_addrx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4537},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49750,"byte_end":49762,"line_start":1203,"line_end":1203,"column_start":5,"column_end":17},"name":"DW_OP_constx","qualname":"::constants::DW_OP_constx","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4538},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49775,"byte_end":49792,"line_start":1204,"line_end":1204,"column_start":5,"column_end":22},"name":"DW_OP_entry_value","qualname":"::constants::DW_OP_entry_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4539},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49805,"byte_end":49821,"line_start":1205,"line_end":1205,"column_start":5,"column_end":21},"name":"DW_OP_const_type","qualname":"::constants::DW_OP_const_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4540},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49834,"byte_end":49851,"line_start":1206,"line_end":1206,"column_start":5,"column_end":22},"name":"DW_OP_regval_type","qualname":"::constants::DW_OP_regval_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4541},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49864,"byte_end":49880,"line_start":1207,"line_end":1207,"column_start":5,"column_end":21},"name":"DW_OP_deref_type","qualname":"::constants::DW_OP_deref_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4542},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49893,"byte_end":49910,"line_start":1208,"line_end":1208,"column_start":5,"column_end":22},"name":"DW_OP_xderef_type","qualname":"::constants::DW_OP_xderef_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4543},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49923,"byte_end":49936,"line_start":1209,"line_end":1209,"column_start":5,"column_end":18},"name":"DW_OP_convert","qualname":"::constants::DW_OP_convert","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4544},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49949,"byte_end":49966,"line_start":1210,"line_end":1210,"column_start":5,"column_end":22},"name":"DW_OP_reinterpret","qualname":"::constants::DW_OP_reinterpret","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4545},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":49998,"byte_end":50024,"line_start":1213,"line_end":1213,"column_start":5,"column_end":31},"name":"DW_OP_GNU_push_tls_address","qualname":"::constants::DW_OP_GNU_push_tls_address","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4546},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50037,"byte_end":50063,"line_start":1214,"line_end":1214,"column_start":5,"column_end":31},"name":"DW_OP_GNU_implicit_pointer","qualname":"::constants::DW_OP_GNU_implicit_pointer","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4547},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50076,"byte_end":50097,"line_start":1215,"line_end":1215,"column_start":5,"column_end":26},"name":"DW_OP_GNU_entry_value","qualname":"::constants::DW_OP_GNU_entry_value","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4548},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50110,"byte_end":50130,"line_start":1216,"line_end":1216,"column_start":5,"column_end":25},"name":"DW_OP_GNU_const_type","qualname":"::constants::DW_OP_GNU_const_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4549},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50143,"byte_end":50164,"line_start":1217,"line_end":1217,"column_start":5,"column_end":26},"name":"DW_OP_GNU_regval_type","qualname":"::constants::DW_OP_GNU_regval_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4550},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50177,"byte_end":50197,"line_start":1218,"line_end":1218,"column_start":5,"column_end":25},"name":"DW_OP_GNU_deref_type","qualname":"::constants::DW_OP_GNU_deref_type","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4551},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50210,"byte_end":50227,"line_start":1219,"line_end":1219,"column_start":5,"column_end":22},"name":"DW_OP_GNU_convert","qualname":"::constants::DW_OP_GNU_convert","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4552},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50240,"byte_end":50261,"line_start":1220,"line_end":1220,"column_start":5,"column_end":26},"name":"DW_OP_GNU_reinterpret","qualname":"::constants::DW_OP_GNU_reinterpret","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4553},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50274,"byte_end":50297,"line_start":1221,"line_end":1221,"column_start":5,"column_end":28},"name":"DW_OP_GNU_parameter_ref","qualname":"::constants::DW_OP_GNU_parameter_ref","value":"DwOp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4604},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50609,"byte_end":50615,"line_start":1232,"line_end":1232,"column_start":1,"column_end":7},"name":"DwEhPe","qualname":"::constants::DwEhPe","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pointer encoding used by `.eh_frame`.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4584},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50722,"byte_end":50738,"line_start":1236,"line_end":1236,"column_start":5,"column_end":21},"name":"DW_EH_PE_uleb128","qualname":"::constants::DW_EH_PE_uleb128","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4585},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50781,"byte_end":50796,"line_start":1238,"line_end":1238,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata2","qualname":"::constants::DW_EH_PE_udata2","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4586},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50839,"byte_end":50854,"line_start":1240,"line_end":1240,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata4","qualname":"::constants::DW_EH_PE_udata4","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4587},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50898,"byte_end":50913,"line_start":1242,"line_end":1242,"column_start":5,"column_end":20},"name":"DW_EH_PE_udata8","qualname":"::constants::DW_EH_PE_udata8","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4588},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":50987,"byte_end":51003,"line_start":1244,"line_end":1244,"column_start":5,"column_end":21},"name":"DW_EH_PE_sleb128","qualname":"::constants::DW_EH_PE_sleb128","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4589},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":51044,"byte_end":51059,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata2","qualname":"::constants::DW_EH_PE_sdata2","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4590},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":51101,"byte_end":51116,"line_start":1248,"line_end":1248,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata4","qualname":"::constants::DW_EH_PE_sdata4","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4591},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":51159,"byte_end":51174,"line_start":1250,"line_end":1250,"column_start":5,"column_end":20},"name":"DW_EH_PE_sdata8","qualname":"::constants::DW_EH_PE_sdata8","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4592},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":51301,"byte_end":51315,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19},"name":"DW_EH_PE_pcrel","qualname":"::constants::DW_EH_PE_pcrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4593},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":51390,"byte_end":51406,"line_start":1257,"line_end":1257,"column_start":5,"column_end":21},"name":"DW_EH_PE_textrel","qualname":"::constants::DW_EH_PE_textrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4594},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":51497,"byte_end":51513,"line_start":1259,"line_end":1259,"column_start":5,"column_end":21},"name":"DW_EH_PE_datarel","qualname":"::constants::DW_EH_PE_datarel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4595},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":51583,"byte_end":51599,"line_start":1261,"line_end":1261,"column_start":5,"column_end":21},"name":"DW_EH_PE_funcrel","qualname":"::constants::DW_EH_PE_funcrel","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4596},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":51669,"byte_end":51685,"line_start":1263,"line_end":1263,"column_start":5,"column_end":21},"name":"DW_EH_PE_aligned","qualname":"::constants::DW_EH_PE_aligned","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4597},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":51997,"byte_end":52014,"line_start":1271,"line_end":1271,"column_start":5,"column_end":22},"name":"DW_EH_PE_indirect","qualname":"::constants::DW_EH_PE_indirect","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4598},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52173,"byte_end":52188,"line_start":1277,"line_end":1277,"column_start":5,"column_end":20},"name":"DW_EH_PE_absptr","qualname":"::constants::DW_EH_PE_absptr","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4599},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52242,"byte_end":52255,"line_start":1279,"line_end":1279,"column_start":5,"column_end":18},"name":"DW_EH_PE_omit","qualname":"::constants::DW_EH_PE_omit","value":"DwEhPe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52478,"byte_end":52484,"line_start":1290,"line_end":1290,"column_start":12,"column_end":18},"name":"format","qualname":"<DwEhPe>::format","value":"fn (self) -> DwEhPe","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer encoding's format.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52457,"byte_end":52466,"line_start":1289,"line_end":1289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52629,"byte_end":52640,"line_start":1296,"line_end":1296,"column_start":12,"column_end":23},"name":"application","qualname":"<DwEhPe>::application","value":"fn (self) -> DwEhPe","parent":null,"children":[],"decl_id":null,"docs":" Get the pointer encoding's application.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52608,"byte_end":52617,"line_start":1295,"line_end":1295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52796,"byte_end":52805,"line_start":1302,"line_end":1302,"column_start":12,"column_end":21},"name":"is_absent","qualname":"<DwEhPe>::is_absent","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this encoding the absent pointer encoding?\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52775,"byte_end":52784,"line_start":1301,"line_end":1301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":53024,"byte_end":53035,"line_start":1309,"line_end":1309,"column_start":12,"column_end":23},"name":"is_indirect","qualname":"<DwEhPe>::is_indirect","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this coding indirect? If so, its encoded value is the address of the\n real pointer result, not the pointer result itself.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":53003,"byte_end":53012,"line_start":1308,"line_end":1308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":53161,"byte_end":53178,"line_start":1314,"line_end":1314,"column_start":12,"column_end":29},"name":"is_valid_encoding","qualname":"<DwEhPe>::is_valid_encoding","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this a known, valid pointer encoding?\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55219,"byte_end":55228,"line_start":7,"line_end":7,"column_start":11,"column_end":20},"name":"Endianity","qualname":"::endianity::Endianity","value":"Endianity: Debug + Default + Clone + Copy + PartialEq + Eq","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"decl_id":null,"docs":" A trait describing the endianity of some buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55334,"byte_end":55347,"line_start":9,"line_end":9,"column_start":8,"column_end":21},"name":"is_big_endian","qualname":"::endianity::Endianity::is_big_endian","value":"fn (self) -> bool","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Return true for big endian byte order.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55435,"byte_end":55451,"line_start":13,"line_end":13,"column_start":8,"column_end":24},"name":"is_little_endian","qualname":"::endianity::Endianity::is_little_endian","value":"fn (self) -> bool","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Return true for little endian byte order.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55418,"byte_end":55427,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55649,"byte_end":55657,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::endianity::Endianity::read_u16","value":"fn (self, buf: &[u8]) -> u16","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Reads an unsigned 16 bit integer from `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55632,"byte_end":55641,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":56035,"byte_end":56043,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::endianity::Endianity::read_u32","value":"fn (self, buf: &[u8]) -> u32","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Reads an unsigned 32 bit integer from `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":56018,"byte_end":56027,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":56421,"byte_end":56429,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::endianity::Endianity::read_u64","value":"fn (self, buf: &[u8]) -> u64","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Reads an unsigned 64 bit integer from `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":56404,"byte_end":56413,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":56819,"byte_end":56828,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"read_uint","qualname":"::endianity::Endianity::read_uint","value":"fn (&mut self, buf: &[u8]) -> u64","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Read an unsigned n-bytes integer u64.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":56802,"byte_end":56811,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":57234,"byte_end":57242,"line_start":84,"line_end":84,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::endianity::Endianity::read_i16","value":"fn (self, buf: &[u8]) -> i16","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Reads a signed 16 bit integer from `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":57217,"byte_end":57226,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":57452,"byte_end":57460,"line_start":94,"line_end":94,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::endianity::Endianity::read_i32","value":"fn (self, buf: &[u8]) -> i32","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Reads a signed 32 bit integer from `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":57435,"byte_end":57444,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":57670,"byte_end":57678,"line_start":104,"line_end":104,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::endianity::Endianity::read_i64","value":"fn (self, buf: &[u8]) -> i64","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Reads a signed 64 bit integer from `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":57653,"byte_end":57662,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":57895,"byte_end":57903,"line_start":114,"line_end":114,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::endianity::Endianity::read_f32","value":"fn (self, buf: &[u8]) -> f32","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Reads a 32 bit floating point number from `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":57878,"byte_end":57887,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":58129,"byte_end":58137,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::endianity::Endianity::read_f64","value":"fn (self, buf: &[u8]) -> f64","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Reads a 32 bit floating point number from `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":58112,"byte_end":58121,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":58362,"byte_end":58371,"line_start":134,"line_end":134,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::endianity::Endianity::write_u16","value":"fn (self, buf: &mut [u8], n: u16) -> ()","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":58345,"byte_end":58354,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":58730,"byte_end":58739,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::endianity::Endianity::write_u32","value":"fn (self, buf: &mut [u8], n: u32) -> ()","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":58713,"byte_end":58722,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":59098,"byte_end":59107,"line_start":164,"line_end":164,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::endianity::Endianity::write_u64","value":"fn (self, buf: &mut [u8], n: u64) -> ()","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer `n` to `buf`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":59081,"byte_end":59090,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4631},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":59481,"byte_end":59487,"line_start":178,"line_end":178,"column_start":5,"column_end":11},"name":"Little","qualname":"::endianity::RunTimeEndian::Little","value":"RunTimeEndian::Little","parent":{"krate":0,"index":4630},"children":[],"decl_id":null,"docs":" Little endian byte order.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4633},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":59524,"byte_end":59527,"line_start":180,"line_end":180,"column_start":5,"column_end":8},"name":"Big","qualname":"::endianity::RunTimeEndian::Big","value":"RunTimeEndian::Big","parent":{"krate":0,"index":4630},"children":[],"decl_id":null,"docs":" Big endian byte order.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4630},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":59427,"byte_end":59440,"line_start":176,"line_end":176,"column_start":10,"column_end":23},"name":"RunTimeEndian","qualname":"::endianity::RunTimeEndian","value":"RunTimeEndian::{Little, Big}","parent":null,"children":[{"krate":0,"index":4631},{"krate":0,"index":4633}],"decl_id":null,"docs":" Byte order that is selectable at runtime.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4649},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60034,"byte_end":60046,"line_start":206,"line_end":206,"column_start":12,"column_end":24},"name":"LittleEndian","qualname":"::endianity::LittleEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little endian byte order.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4665},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60357,"byte_end":60366,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"BigEndian","qualname":"::endianity::BigEndian","value":"","parent":null,"children":[],"decl_id":null,"docs":" Big endian byte order.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60667,"byte_end":60679,"line_start":242,"line_end":242,"column_start":10,"column_end":22},"name":"NativeEndian","qualname":"::endianity::NativeEndian","value":"LittleEndian","parent":null,"children":[],"decl_id":null,"docs":" The native endianity for the target platform.\n","sig":null,"attributes":[{"value":"cfg(target_endian = \"little\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60625,"byte_end":60657,"line_start":241,"line_end":241,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":82},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60788,"byte_end":60800,"line_start":247,"line_end":247,"column_start":11,"column_end":23},"name":"NativeEndian","qualname":"::endianity::NativeEndian","value":"LittleEndian","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_endian = \"little\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60697,"byte_end":60729,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60730,"byte_end":60762,"line_start":245,"line_end":245,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":89},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/leb128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"leb128","qualname":"::leb128","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/leb128.rs","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" Read and write DWARF's \"Little Endian Base 128\" (LEB128) variable length\n integer encoding.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":94},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/leb128.rs","byte_start":62912,"byte_end":62916,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"name":"read","qualname":"::leb128::read","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/leb128.rs","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107}],"decl_id":null,"docs":" A module for reading signed and unsigned integers that have been LEB128\n encoded.\n","sig":null,"attributes":[{"value":"cfg(feature = \"read\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/leb128.rs","byte_start":62879,"byte_end":62903,"line_start":65,"line_end":65,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":103},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/leb128.rs","byte_start":63156,"byte_end":63164,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"unsigned","qualname":"::leb128::read::unsigned","value":"fn <R> (r: &mut R) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 number from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/leb128.rs","byte_start":63798,"byte_end":63801,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"u16","qualname":"::leb128::read::u16","value":"fn <R> (r: &mut R) -> Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Read an LEB128 u16 from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/leb128.rs","byte_start":64502,"byte_end":64508,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"signed","qualname":"::leb128::read::signed","value":"fn <R> (r: &mut R) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Read a signed LEB128 number from the given `Reader` and\n return it or an error if reading failed.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1321},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":7330},{"krate":0,"index":7491},{"krate":0,"index":7489},{"krate":0,"index":7488},{"krate":0,"index":7484},{"krate":0,"index":7485},{"krate":0,"index":7481},{"krate":0,"index":7482},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2032}],"decl_id":null,"docs":" Read DWARF debugging information.","sig":null,"attributes":[{"value":"cfg(feature = \"read\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1951,"byte_end":1975,"line_start":65,"line_end":65,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":4681},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":109192,"byte_end":109201,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DebugAddr","qualname":"::read::addr::DebugAddr","value":"DebugAddr {  }","parent":null,"children":[{"krate":0,"index":4683}],"decl_id":null,"docs":" The raw contents of the `.debug_addr` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":110144,"byte_end":110155,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"get_address","qualname":"<DebugAddr<R>>::get_address","value":"fn (&self, address_size: u8, base: DebugAddrBase<R::Offset>, index: DebugAddrIndex<R::Offset>) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address at the given `base` and `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":111198,"byte_end":111204,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugAddr<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> DebugAddr<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugAddr` section that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4695},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":114520,"byte_end":114530,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"DebugFrame","qualname":"::read::cfi::DebugFrame","value":"DebugFrame {  }","parent":null,"children":[{"krate":0,"index":4697},{"krate":0,"index":4698},{"krate":0,"index":4699}],"decl_id":null,"docs":" `DebugFrame` contains the `.debug_frame` section's frame unwinding\n information required to unwind to and recover registers from older frames on\n the stack. For example, this is useful for a debugger that wants to print\n locals in a backtrace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":114817,"byte_end":114833,"line_start":39,"line_end":39,"column_start":12,"column_end":28},"name":"set_address_size","qualname":"<DebugFrame<R>>::set_address_size","value":"fn (&mut self, address_size: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a target address in bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":115074,"byte_end":115090,"line_start":47,"line_end":47,"column_start":12,"column_end":28},"name":"set_segment_size","qualname":"<DebugFrame<R>>::set_segment_size","value":"fn (&mut self, segment_size: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a segment selector in bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":115886,"byte_end":115889,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugFrame<EndianSlice>>::new","value":"fn (section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugFrame` instance from the data in the\n `.debug_frame` section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4719},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":116756,"byte_end":116766,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"EhFrameHdr","qualname":"::read::cfi::EhFrameHdr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `EhFrameHdr` contains the information about the `.eh_frame_hdr` section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4742},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":116907,"byte_end":116923,"line_start":106,"line_end":106,"column_start":12,"column_end":28},"name":"ParsedEhFrameHdr","qualname":"::read::cfi::ParsedEhFrameHdr","value":"ParsedEhFrameHdr {  }","parent":null,"children":[{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746},{"krate":0,"index":4747},{"krate":0,"index":4748},{"krate":0,"index":4749}],"decl_id":null,"docs":" `ParsedEhFrameHdr` contains the parsed information from the `.eh_frame_hdr` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":117259,"byte_end":117262,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<EhFrameHdr<EndianSlice>>::new","value":"fn (section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `EhFrameHdr` instance from the data in the `.eh_frame_hdr` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":117476,"byte_end":117481,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"parse","qualname":"<EhFrameHdr<R>>::parse","value":"fn (&self, bases: &BaseAddresses, address_size: u8) -> Result<ParsedEhFrameHdr<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parses this `EhFrameHdr` to a `ParsedEhFrameHdr`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":119503,"byte_end":119515,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"eh_frame_ptr","qualname":"<ParsedEhFrameHdr<R>>::eh_frame_ptr","value":"fn (&self) -> Pointer","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the binary's `.eh_frame` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":119644,"byte_end":119649,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"table","qualname":"<ParsedEhFrameHdr<R>>::table","value":"fn (&self) -> Option<EhHdrTable<R>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the CFI binary search table, if there is one.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4756},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":120644,"byte_end":120654,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"EhHdrTable","qualname":"::read::cfi::EhHdrTable","value":"EhHdrTable {  }","parent":null,"children":[{"krate":0,"index":4759}],"decl_id":null,"docs":" The CFI binary search table that is an optional part of the `.eh_frame_hdr` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":121079,"byte_end":121085,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"lookup","qualname":"<EhHdrTable>::lookup","value":"fn (&self, address: u64, bases: &BaseAddresses) -> Result<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" *Probably* returns a pointer to the FDE for the given address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":123110,"byte_end":123127,"line_start":287,"line_end":287,"column_start":12,"column_end":29},"name":"pointer_to_offset","qualname":"<EhHdrTable>::pointer_to_offset","value":"fn (&self, ptr: Pointer) -> Result<EhFrameOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Pointer` to a section offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":124512,"byte_end":124527,"line_start":322,"line_end":322,"column_start":12,"column_end":27},"name":"fde_for_address","qualname":"<EhHdrTable>::fde_for_address","value":"fn <F> (&self, frame: &EhFrame<R>, bases: &BaseAddresses, address: u64, get_cie: F) -> Result<FrameDescriptionEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed FDE for the given address, or `NoUnwindInfoForAddress`\n if there are none.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":125301,"byte_end":125317,"line_start":349,"line_end":349,"column_start":12,"column_end":28},"name":"lookup_and_parse","qualname":"<EhHdrTable>::lookup_and_parse","value":"fn <F> (&self, address: u64, bases: &BaseAddresses, frame: EhFrame<R>, get_cie: F) -> Result<FrameDescriptionEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":125180,"byte_end":125189,"line_start":346,"line_end":346,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Method renamed to fde_for_address; use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":125213,"byte_end":125289,"line_start":348,"line_end":348,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":125998,"byte_end":126021,"line_start":371,"line_end":371,"column_start":12,"column_end":35},"name":"unwind_info_for_address","qualname":"<EhHdrTable>::unwind_info_for_address","value":"fn <F> (&self, frame: &EhFrame<R>, bases: &BaseAddresses, ctx: &mut UninitializedUnwindContext<R>, address: u64, get_cie: F) -> Result<UnwindTableRow<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the frame unwind information for the given address,\n or `NoUnwindInfoForAddress` if there are none.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4768},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":127023,"byte_end":127030,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"EhFrame","qualname":"::read::cfi::EhFrame","value":"EhFrame {  }","parent":null,"children":[{"krate":0,"index":4770},{"krate":0,"index":4771}],"decl_id":null,"docs":" `EhFrame` contains the frame unwinding information needed during exception\n handling found in the `.eh_frame` section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":127231,"byte_end":127247,"line_start":411,"line_end":411,"column_start":12,"column_end":28},"name":"set_address_size","qualname":"<EhFrame<R>>::set_address_size","value":"fn (&mut self, address_size: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the size of a target address in bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128044,"byte_end":128047,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"new","qualname":"<EhFrame<EndianSlice>>::new","value":"fn (section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `EhFrame` instance from the data in the\n `.debug_frame` section.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4792},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128821,"byte_end":128824,"line_start":466,"line_end":466,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::cfi::CieOffsetEncoding::U32","value":"CieOffsetEncoding::U32","parent":{"krate":0,"index":4791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4794},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128830,"byte_end":128833,"line_start":467,"line_end":467,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::cfi::CieOffsetEncoding::U64","value":"CieOffsetEncoding::U64","parent":{"krate":0,"index":4791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4791},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128797,"byte_end":128814,"line_start":465,"line_end":465,"column_start":10,"column_end":27},"name":"CieOffsetEncoding","qualname":"::read::cfi::CieOffsetEncoding","value":"CieOffsetEncoding::{U32, U64}","parent":null,"children":[{"krate":0,"index":4792},{"krate":0,"index":4794}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128720,"byte_end":128742,"line_start":463,"line_end":463,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":235},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128951,"byte_end":128963,"line_start":473,"line_end":473,"column_start":11,"column_end":23},"name":"UnwindOffset","qualname":"::read::cfi::UnwindOffset","value":"UnwindOffset<T = usize>: Copy + Debug + Eq + From<T>","parent":null,"children":[{"krate":0,"index":237}],"decl_id":null,"docs":" An offset into an `UnwindSection`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":129089,"byte_end":129093,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"into","qualname":"::read::cfi::UnwindOffset::into","value":"fn (self) -> T","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Convert an `UnwindOffset<T>` into a `T`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":129591,"byte_end":129612,"line_start":505,"line_end":505,"column_start":11,"column_end":32},"name":"_UnwindSectionPrivate","qualname":"::read::cfi::_UnwindSectionPrivate","value":"_UnwindSectionPrivate<R: Reader>","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":" This trait completely encapsulates everything that is different between\n `.eh_frame` and `.debug_frame`, as well as all the bits that can change\n between DWARF versions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":129674,"byte_end":129681,"line_start":507,"line_end":507,"column_start":8,"column_end":15},"name":"section","qualname":"::read::cfi::_UnwindSectionPrivate::section","value":"fn (&self) -> &R","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Get the underlying section data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":129808,"byte_end":129838,"line_start":511,"line_end":511,"column_start":8,"column_end":38},"name":"length_value_is_end_of_entries","qualname":"::read::cfi::_UnwindSectionPrivate::length_value_is_end_of_entries","value":"fn (length: R::Offset) -> bool","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Returns true if the given length value should be considered an\n end-of-entries sentinel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":129953,"byte_end":129959,"line_start":514,"line_end":514,"column_start":8,"column_end":14},"name":"is_cie","qualname":"::read::cfi::_UnwindSectionPrivate::is_cie","value":"fn (format: Format, id: u64) -> bool","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Return true if the given offset if the CIE sentinel, false otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":130109,"byte_end":130128,"line_start":518,"line_end":518,"column_start":8,"column_end":27},"name":"cie_offset_encoding","qualname":"::read::cfi::_UnwindSectionPrivate::cie_offset_encoding","value":"fn (format: Format) -> CieOffsetEncoding","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Return the CIE offset/ID encoding used by this unwind section with the\n given DWARF format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":130531,"byte_end":130549,"line_start":525,"line_end":525,"column_start":8,"column_end":26},"name":"resolve_cie_offset","qualname":"::read::cfi::_UnwindSectionPrivate::resolve_cie_offset","value":"fn (&self, base: R::Offset, offset: R::Offset) -> Option<R::Offset>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" For `.eh_frame`, CIE offsets are relative to the current position. For\n `.debug_frame`, they are relative to the start of the section. We always\n internally store them relative to the section, so we handle translating\n `.eh_frame`'s relative offsets in this method. If the offset calculation\n underflows, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":130726,"byte_end":130755,"line_start":529,"line_end":529,"column_start":8,"column_end":37},"name":"has_address_and_segment_sizes","qualname":"::read::cfi::_UnwindSectionPrivate::has_address_and_segment_sizes","value":"fn (version: u8) -> bool","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Does this version of this unwind section encode address and segment\n sizes in its CIEs?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":130868,"byte_end":130880,"line_start":532,"line_end":532,"column_start":8,"column_end":20},"name":"address_size","qualname":"::read::cfi::_UnwindSectionPrivate::address_size","value":"fn (&self) -> u8","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" The address size to use if `has_address_and_segment_sizes` returns false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":130985,"byte_end":130997,"line_start":535,"line_end":535,"column_start":8,"column_end":20},"name":"segment_size","qualname":"::read::cfi::_UnwindSectionPrivate::segment_size","value":"fn (&self) -> u8","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" The segment size to use if `has_address_and_segment_sizes` returns false.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":254},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":131211,"byte_end":131224,"line_start":541,"line_end":541,"column_start":11,"column_end":24},"name":"UnwindSection","qualname":"::read::cfi::UnwindSection","value":"UnwindSection<R: Reader>: Clone + Debug + _UnwindSectionPrivate<R>","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266}],"decl_id":null,"docs":" A section holding unwind information: either `.debug_frame` or\n `.eh_frame`. See [`DebugFrame`](./struct.DebugFrame.html) and\n [`EhFrame`](./struct.EhFrame.html) respectively.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":256},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":131401,"byte_end":131407,"line_start":544,"line_end":544,"column_start":10,"column_end":16},"name":"Offset","qualname":"::read::cfi::UnwindSection::Offset","value":"type Offset: UnwindOffset<R::Offset>;","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" The offset type associated with this CFI section. Either\n `DebugFrameOffset` or `EhFrameOffset`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":131667,"byte_end":131674,"line_start":551,"line_end":551,"column_start":8,"column_end":15},"name":"entries","qualname":"::read::cfi::UnwindSection::entries","value":"fn <'bases> (&self, bases: &'bases BaseAddresses) -> CfiEntriesIter<'bases, Self, R>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Iterate over the `CommonInformationEntry`s and `FrameDescriptionEntry`s\n in this `.debug_frame` section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":131967,"byte_end":131982,"line_start":560,"line_end":560,"column_start":8,"column_end":23},"name":"cie_from_offset","qualname":"::read::cfi::UnwindSection::cie_from_offset","value":"fn (&self, bases: &BaseAddresses, offset: Self::Offset) -> Result<CommonInformationEntry<R>>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Parse the `CommonInformationEntry` at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":132374,"byte_end":132397,"line_start":572,"line_end":572,"column_start":8,"column_end":31},"name":"partial_fde_from_offset","qualname":"::read::cfi::UnwindSection::partial_fde_from_offset","value":"fn <'bases> (&self, bases: &'bases BaseAddresses, offset: Self::Offset) -> Result<PartialFrameDescriptionEntry<'bases, Self, R>>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Parse the `PartialFrameDescriptionEntry` at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":132831,"byte_end":132846,"line_start":584,"line_end":584,"column_start":8,"column_end":23},"name":"fde_from_offset","qualname":"::read::cfi::UnwindSection::fde_from_offset","value":"fn <F> (&self, bases: &BaseAddresses, offset: Self::Offset, get_cie: F) -> Result<FrameDescriptionEntry<R>>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Parse the `FrameDescriptionEntry` at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":133747,"byte_end":133762,"line_start":608,"line_end":608,"column_start":8,"column_end":23},"name":"fde_for_address","qualname":"::read::cfi::UnwindSection::fde_for_address","value":"fn <F> (&self, bases: &BaseAddresses, address: u64, mut get_cie: F) -> Result<FrameDescriptionEntry<R>>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Find the `FrameDescriptionEntry` for the given address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":136412,"byte_end":136435,"line_start":678,"line_end":678,"column_start":8,"column_end":31},"name":"unwind_info_for_address","qualname":"::read::cfi::UnwindSection::unwind_info_for_address","value":"fn <F> (&self, bases: &BaseAddresses, ctx: &mut UninitializedUnwindContext<R>, address: u64, get_cie: F) -> Result<UnwindTableRow<R>>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" Find the frame unwind information for the given address.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":136395,"byte_end":136404,"line_start":677,"line_end":677,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4807},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":139822,"byte_end":139835,"line_start":800,"line_end":800,"column_start":12,"column_end":25},"name":"BaseAddresses","qualname":"::read::cfi::BaseAddresses","value":"BaseAddresses { eh_frame_hdr, eh_frame }","parent":null,"children":[{"krate":0,"index":4808},{"krate":0,"index":4809}],"decl_id":null,"docs":" Optional base addresses for the relative `DW_EH_PE_*` encoded pointers.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4808},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":139925,"byte_end":139937,"line_start":802,"line_end":802,"column_start":9,"column_end":21},"name":"eh_frame_hdr","qualname":"::read::cfi::BaseAddresses::eh_frame_hdr","value":"read::cfi::SectionBaseAddresses","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" The base addresses to use for pointers in the `.eh_frame_hdr` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4809},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":140045,"byte_end":140053,"line_start":805,"line_end":805,"column_start":9,"column_end":17},"name":"eh_frame","qualname":"::read::cfi::BaseAddresses::eh_frame","value":"read::cfi::SectionBaseAddresses","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" The base addresses to use for pointers in the `.eh_frame` section.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4823},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":140328,"byte_end":140348,"line_start":813,"line_end":813,"column_start":12,"column_end":32},"name":"SectionBaseAddresses","qualname":"::read::cfi::SectionBaseAddresses","value":"SectionBaseAddresses { section, text, data }","parent":null,"children":[{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4826}],"decl_id":null,"docs":" Optional base addresses for the relative `DW_EH_PE_*` encoded pointers\n in a particular section.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4824},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":140418,"byte_end":140425,"line_start":815,"line_end":815,"column_start":9,"column_end":16},"name":"section","qualname":"::read::cfi::SectionBaseAddresses::section","value":"core::option::Option<u64>","parent":{"krate":0,"index":4823},"children":[],"decl_id":null,"docs":" The address of the section containing the pointer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4825},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":140564,"byte_end":140568,"line_start":819,"line_end":819,"column_start":9,"column_end":13},"name":"text","qualname":"::read::cfi::SectionBaseAddresses::text","value":"core::option::Option<u64>","parent":{"krate":0,"index":4823},"children":[],"decl_id":null,"docs":" The base address for text relative pointers.\n This is generally the address of the `.text` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4826},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":140911,"byte_end":140915,"line_start":828,"line_end":828,"column_start":9,"column_end":13},"name":"data","qualname":"::read::cfi::SectionBaseAddresses::data","value":"core::option::Option<u64>","parent":{"krate":0,"index":4823},"children":[],"decl_id":null,"docs":" The base address for data relative pointers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":141033,"byte_end":141049,"line_start":834,"line_end":834,"column_start":12,"column_end":28},"name":"set_eh_frame_hdr","qualname":"<BaseAddresses>::set_eh_frame_hdr","value":"fn (mut self, addr: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.eh_frame_hdr` section base address.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":141012,"byte_end":141021,"line_start":833,"line_end":833,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":141269,"byte_end":141281,"line_start":842,"line_end":842,"column_start":12,"column_end":24},"name":"set_eh_frame","qualname":"<BaseAddresses>::set_eh_frame","value":"fn (mut self, addr: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.eh_frame` section base address.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":141248,"byte_end":141257,"line_start":841,"line_end":841,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":141448,"byte_end":141456,"line_start":849,"line_end":849,"column_start":12,"column_end":20},"name":"set_text","qualname":"<BaseAddresses>::set_text","value":"fn (mut self, addr: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.text` section base address.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":141427,"byte_end":141436,"line_start":848,"line_end":848,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":141664,"byte_end":141671,"line_start":857,"line_end":857,"column_start":12,"column_end":19},"name":"set_got","qualname":"<BaseAddresses>::set_got","value":"fn (mut self, addr: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the `.got` section base address.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":141643,"byte_end":141652,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4840},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":143459,"byte_end":143473,"line_start":903,"line_end":903,"column_start":12,"column_end":26},"name":"CfiEntriesIter","qualname":"::read::cfi::CfiEntriesIter","value":"CfiEntriesIter {  }","parent":null,"children":[{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846}],"decl_id":null,"docs":" An iterator over CIE and FDE entries in a `.debug_frame` or `.eh_frame`\n section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":143794,"byte_end":143798,"line_start":919,"line_end":919,"column_start":12,"column_end":16},"name":"next","qualname":"<CfiEntriesIter>::next","value":"fn (&mut self) -> Result<Option<CieOrFde<'bases, Section, R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next entry.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4861},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":144936,"byte_end":144939,"line_start":960,"line_end":960,"column_start":5,"column_end":8},"name":"Cie","qualname":"::read::cfi::CieOrFde::Cie","value":"CieOrFde::Cie(CommonInformationEntry<R>)","parent":{"krate":0,"index":4857},"children":[],"decl_id":null,"docs":" This CFI entry is a `CommonInformationEntry`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4864},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":145141,"byte_end":145144,"line_start":964,"line_end":964,"column_start":5,"column_end":8},"name":"Fde","qualname":"::read::cfi::CieOrFde::Fde","value":"CieOrFde::Fde(PartialFrameDescriptionEntry<'bases, Section, R>)","parent":{"krate":0,"index":4857},"children":[],"decl_id":null,"docs":" This CFI entry is a `FrameDescriptionEntry`, however fully parsing it\n requires parsing its CIE first, so it is left in a partially parsed\n state.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4857},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":144795,"byte_end":144803,"line_start":954,"line_end":954,"column_start":10,"column_end":18},"name":"CieOrFde","qualname":"::read::cfi::CieOrFde","value":"CieOrFde::{Cie, Fde}","parent":null,"children":[{"krate":0,"index":4861},{"krate":0,"index":4864}],"decl_id":null,"docs":" Either a `CommonInformationEntry` (CIE) or a `FrameDescriptionEntry` (FDE).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4896},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":147464,"byte_end":147476,"line_start":1030,"line_end":1030,"column_start":12,"column_end":24},"name":"Augmentation","qualname":"::read::cfi::Augmentation","value":"Augmentation {  }","parent":null,"children":[{"krate":0,"index":4897},{"krate":0,"index":4898},{"krate":0,"index":4899},{"krate":0,"index":4900}],"decl_id":null,"docs":" We support the z-style augmentation [defined by `.eh_frame`][ehframe].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4931},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":153120,"byte_end":153142,"line_start":1162,"line_end":1162,"column_start":12,"column_end":34},"name":"CommonInformationEntry","qualname":"::read::cfi::CommonInformationEntry","value":"CommonInformationEntry {  }","parent":null,"children":[{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4937},{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4944}],"decl_id":null,"docs":" > A Common Information Entry holds information that is shared among many\n > Frame Description Entries. There is at least one CIE in every non-empty\n > `.debug_frame` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":158129,"byte_end":158135,"line_start":1306,"line_end":1306,"column_start":12,"column_end":18},"name":"offset","qualname":"<CommonInformationEntry<R>>::offset","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this entry from the start of its containing section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":158249,"byte_end":158257,"line_start":1311,"line_end":1311,"column_start":12,"column_end":20},"name":"encoding","qualname":"<CommonInformationEntry<R>>::encoding","value":"fn (&self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this CIE.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":158504,"byte_end":158516,"line_start":1320,"line_end":1320,"column_start":12,"column_end":24},"name":"address_size","qualname":"<CommonInformationEntry<R>>::address_size","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this CIE.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":158735,"byte_end":158747,"line_start":1328,"line_end":1328,"column_start":12,"column_end":24},"name":"instructions","qualname":"<CommonInformationEntry<R>>::instructions","value":"fn <'a, Section> (&self, section: &'a Section, bases: &'a BaseAddresses) -> CallFrameInstructionIter<'a, R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this CIE's initial instructions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":159586,"byte_end":159595,"line_start":1352,"line_end":1352,"column_start":12,"column_end":21},"name":"entry_len","qualname":"<CommonInformationEntry<R>>::entry_len","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" > A constant that gives the number of bytes of the CIE structure, not\n > including the length field itself (see Section 7.2.2). The size of the\n > length field plus the value of length must be an integral multiple of\n > the address size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":159815,"byte_end":159822,"line_start":1358,"line_end":1358,"column_start":12,"column_end":19},"name":"version","qualname":"<CommonInformationEntry<R>>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" > A version number (see Section 7.23). This number is specific to the\n > call frame information and is independent of the DWARF version number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":160036,"byte_end":160048,"line_start":1366,"line_end":1366,"column_start":12,"column_end":24},"name":"augmentation","qualname":"<CommonInformationEntry<R>>::augmentation","value":"fn (&self) -> Option<&Augmentation>","parent":null,"children":[],"decl_id":null,"docs":" Get the augmentation data, if any exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":160181,"byte_end":160189,"line_start":1371,"line_end":1371,"column_start":12,"column_end":20},"name":"has_lsda","qualname":"<CommonInformationEntry<R>>::has_lsda","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this CIE's FDEs have a LSDA.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":160356,"byte_end":160369,"line_start":1376,"line_end":1376,"column_start":12,"column_end":25},"name":"lsda_encoding","qualname":"<CommonInformationEntry<R>>::lsda_encoding","value":"fn (&self) -> Option<constants::DwEhPe>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding of the LSDA address for this CIE's FDEs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":160577,"byte_end":160602,"line_start":1382,"line_end":1382,"column_start":12,"column_end":37},"name":"personality_with_encoding","qualname":"<CommonInformationEntry<R>>::personality_with_encoding","value":"fn (&self) -> Option<(constants::DwEhPe, Pointer)>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding and address of the personality routine handler\n for this CIE's FDEs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":160824,"byte_end":160835,"line_start":1388,"line_end":1388,"column_start":12,"column_end":23},"name":"personality","qualname":"<CommonInformationEntry<R>>::personality","value":"fn (&self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Return the address of the personality routine handler\n for this CIE's FDEs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":161066,"byte_end":161086,"line_start":1396,"line_end":1396,"column_start":12,"column_end":32},"name":"fde_address_encoding","qualname":"<CommonInformationEntry<R>>::fde_address_encoding","value":"fn (&self) -> Option<constants::DwEhPe>","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding of the addresses for this CIE's FDEs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":161275,"byte_end":161295,"line_start":1401,"line_end":1401,"column_start":12,"column_end":32},"name":"is_signal_trampoline","qualname":"<CommonInformationEntry<R>>::is_signal_trampoline","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this CIE's FDEs are trampolines for signal handlers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":161511,"byte_end":161532,"line_start":1407,"line_end":1407,"column_start":12,"column_end":33},"name":"code_alignment_factor","qualname":"<CommonInformationEntry<R>>::code_alignment_factor","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > A constant that is factored out of all advance location instructions\n > (see Section 6.4.2.1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":161756,"byte_end":161777,"line_start":1413,"line_end":1413,"column_start":12,"column_end":33},"name":"data_alignment_factor","qualname":"<CommonInformationEntry<R>>::data_alignment_factor","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" > A constant that is factored out of certain offset instructions (see\n > below). The resulting value is (operand * data_alignment_factor).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":162069,"byte_end":162092,"line_start":1420,"line_end":1420,"column_start":12,"column_end":35},"name":"return_address_register","qualname":"<CommonInformationEntry<R>>::return_address_register","value":"fn (&self) -> Register","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned ... constant that indicates which column in the rule\n > table represents the return address of the function. Note that this\n > column might not correspond to an actual machine register.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4968},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":162321,"byte_end":162349,"line_start":1429,"line_end":1429,"column_start":12,"column_end":40},"name":"PartialFrameDescriptionEntry","qualname":"::read::cfi::PartialFrameDescriptionEntry","value":"PartialFrameDescriptionEntry {  }","parent":null,"children":[{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4976},{"krate":0,"index":4977},{"krate":0,"index":4978}],"decl_id":null,"docs":" A partially parsed `FrameDescriptionEntry`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":163396,"byte_end":163401,"line_start":1465,"line_end":1465,"column_start":12,"column_end":17},"name":"parse","qualname":"<PartialFrameDescriptionEntry>::parse","value":"fn <F> (&self, get_cie: F) -> Result<FrameDescriptionEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Fully parse this FDE.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5008},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":163974,"byte_end":163995,"line_start":1484,"line_end":1484,"column_start":12,"column_end":33},"name":"FrameDescriptionEntry","qualname":"::read::cfi::FrameDescriptionEntry","value":"FrameDescriptionEntry {  }","parent":null,"children":[{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019}],"decl_id":null,"docs":" A `FrameDescriptionEntry` is a set of CFA instructions for an address range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":168187,"byte_end":168191,"line_start":1609,"line_end":1609,"column_start":12,"column_end":16},"name":"rows","qualname":"<FrameDescriptionEntry<R>>::rows","value":"fn <'a, Section> (&self, section: &'a Section, bases: &'a BaseAddresses, ctx: &'a mut UninitializedUnwindContext<R>) -> Result<UnwindTable<'a, R>>","parent":null,"children":[],"decl_id":null,"docs":" Return the table of unwind information for this FDE.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":168166,"byte_end":168175,"line_start":1608,"line_end":1608,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":168814,"byte_end":168837,"line_start":1624,"line_end":1624,"column_start":12,"column_end":35},"name":"unwind_info_for_address","qualname":"<FrameDescriptionEntry<R>>::unwind_info_for_address","value":"fn <Section> (&self, section: &Section, bases: &BaseAddresses, ctx: &mut UninitializedUnwindContext<R>, address: u64) -> Result<UnwindTableRow<R>>","parent":null,"children":[],"decl_id":null,"docs":" Find the frame unwind information for the given address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":169627,"byte_end":169633,"line_start":1648,"line_end":1648,"column_start":12,"column_end":18},"name":"offset","qualname":"<FrameDescriptionEntry<R>>::offset","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this entry from the start of its containing section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":169737,"byte_end":169740,"line_start":1653,"line_end":1653,"column_start":12,"column_end":15},"name":"cie","qualname":"<FrameDescriptionEntry<R>>::cie","value":"fn (&self) -> &CommonInformationEntry<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this FDE's CIE.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":170117,"byte_end":170126,"line_start":1661,"line_end":1661,"column_start":12,"column_end":21},"name":"entry_len","qualname":"<FrameDescriptionEntry<R>>::entry_len","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" > A constant that gives the number of bytes of the header and\n > instruction stream for this function, not including the length field\n > itself (see Section 7.2.2). The size of the length field plus the value\n > of length must be an integral multiple of the address size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":170466,"byte_end":170478,"line_start":1672,"line_end":1672,"column_start":12,"column_end":24},"name":"instructions","qualname":"<FrameDescriptionEntry<R>>::instructions","value":"fn <'a, Section> (&self, section: &'a Section, bases: &'a BaseAddresses) -> CallFrameInstructionIter<'a, R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this FDE's instructions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":171177,"byte_end":171192,"line_start":1693,"line_end":1693,"column_start":12,"column_end":27},"name":"initial_address","qualname":"<FrameDescriptionEntry<R>>::initial_address","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The first address for which this entry has unwind information for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":171352,"byte_end":171355,"line_start":1699,"line_end":1699,"column_start":12,"column_end":15},"name":"len","qualname":"<FrameDescriptionEntry<R>>::len","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes of instructions that this entry has unwind\n information for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":171631,"byte_end":171639,"line_start":1708,"line_end":1708,"column_start":12,"column_end":20},"name":"contains","qualname":"<FrameDescriptionEntry<R>>::contains","value":"fn (&self, address: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the given address is within this FDE, `false`\n otherwise.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":171906,"byte_end":171910,"line_start":1716,"line_end":1716,"column_start":12,"column_end":16},"name":"lsda","qualname":"<FrameDescriptionEntry<R>>::lsda","value":"fn (&self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" The address of this FDE's language-specific data area (LSDA), if it has\n any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":172108,"byte_end":172128,"line_start":1722,"line_end":1722,"column_start":12,"column_end":32},"name":"is_signal_trampoline","qualname":"<FrameDescriptionEntry<R>>::is_signal_trampoline","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this FDE's function is a trampoline for a signal handler.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":172087,"byte_end":172096,"line_start":1721,"line_end":1721,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":172443,"byte_end":172454,"line_start":1730,"line_end":1730,"column_start":12,"column_end":23},"name":"personality","qualname":"<FrameDescriptionEntry<R>>::personality","value":"fn (&self) -> Option<Pointer>","parent":null,"children":[],"decl_id":null,"docs":" Return the address of the FDE's function's personality routine\n handler. The personality routine does language-specific clean up when\n unwinding the stack frames with the intent to not run them again.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":172422,"byte_end":172431,"line_start":1729,"line_end":1729,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5043},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":173894,"byte_end":173920,"line_start":1766,"line_end":1766,"column_start":12,"column_end":38},"name":"UninitializedUnwindContext","qualname":"::read::cfi::UninitializedUnwindContext","value":"","parent":null,"children":[],"decl_id":null,"docs":" Common context needed when evaluating the call frame unwinding information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":174070,"byte_end":174073,"line_start":1770,"line_end":1770,"column_start":12,"column_end":15},"name":"new","qualname":"<UninitializedUnwindContext<R>>::new","value":"fn () -> UninitializedUnwindContext<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new call frame unwinding context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":174600,"byte_end":174610,"line_start":1788,"line_end":1788,"column_start":12,"column_end":22},"name":"initialize","qualname":"<UninitializedUnwindContext<R>>::initialize","value":"fn <Section> (&mut self, section: &Section, bases: &BaseAddresses, cie: &CommonInformationEntry<R>) -> Result<&mut UnwindContext<R>>","parent":null,"children":[],"decl_id":null,"docs":" Run the CIE's initial instructions, creating and return an\n `UnwindContext`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5053},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":175183,"byte_end":175196,"line_start":1810,"line_end":1810,"column_start":12,"column_end":25},"name":"UnwindContext","qualname":"::read::cfi::UnwindContext","value":"UnwindContext {  }","parent":null,"children":[{"krate":0,"index":5055},{"krate":0,"index":5057},{"krate":0,"index":5058},{"krate":0,"index":5059}],"decl_id":null,"docs":" An unwinding context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5079},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":182205,"byte_end":182216,"line_start":2009,"line_end":2009,"column_start":12,"column_end":23},"name":"UnwindTable","qualname":"::read::cfi::UnwindTable","value":"UnwindTable {  }","parent":null,"children":[{"krate":0,"index":5082},{"krate":0,"index":5083},{"krate":0,"index":5084},{"krate":0,"index":5085},{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":5088}],"decl_id":null,"docs":" The `UnwindTable` iteratively evaluates a `FrameDescriptionEntry`'s\n `CallFrameInstruction` program, yielding the each row one at a time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":182779,"byte_end":182782,"line_start":2026,"line_end":2026,"column_start":12,"column_end":15},"name":"new","qualname":"<UnwindTable>::new","value":"fn <Section> (section: &'a Section, bases: &'a BaseAddresses, ctx: &'a mut UninitializedUnwindContext<R>, fde: &FrameDescriptionEntry<R>) -> Result<UnwindTable<'a, R>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `UnwindTable` for the given\n `FrameDescriptionEntry`'s CFI unwinding program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":184677,"byte_end":184685,"line_start":2077,"line_end":2077,"column_start":12,"column_end":20},"name":"next_row","qualname":"<UnwindTable>::next_row","value":"fn (&mut self) -> Result<Option<&UnwindTableRow<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate call frame instructions until the next row of the table is\n completed, and return it.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5101},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":199502,"byte_end":199518,"line_start":2501,"line_end":2501,"column_start":12,"column_end":28},"name":"RegisterRuleIter","qualname":"::read::cfi::RegisterRuleIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An unordered iterator for register rules.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5114},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":200004,"byte_end":200018,"line_start":2516,"line_end":2516,"column_start":12,"column_end":26},"name":"UnwindTableRow","qualname":"::read::cfi::UnwindTableRow","value":"UnwindTableRow {  }","parent":null,"children":[{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120}],"decl_id":null,"docs":" A row in the virtual unwind table that describes how to find the values of\n the registers in the *previous* frame for a range of PC addresses.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":200752,"byte_end":200765,"line_start":2545,"line_end":2545,"column_start":12,"column_end":25},"name":"start_address","qualname":"<UnwindTableRow<R>>::start_address","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the starting PC address that this row applies to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":201187,"byte_end":201198,"line_start":2556,"line_end":2556,"column_start":12,"column_end":23},"name":"end_address","qualname":"<UnwindTableRow<R>>::end_address","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the end PC address where this row's register rules become\n unapplicable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":201366,"byte_end":201374,"line_start":2562,"line_end":2562,"column_start":12,"column_end":20},"name":"contains","qualname":"<UnwindTableRow<R>>::contains","value":"fn (&self, address: u64) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the given `address` is within this row's address range,\n `false` otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":201693,"byte_end":201708,"line_start":2570,"line_end":2570,"column_start":12,"column_end":27},"name":"saved_args_size","qualname":"<UnwindTableRow<R>>::saved_args_size","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of args currently on the stack.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":201846,"byte_end":201849,"line_start":2575,"line_end":2575,"column_start":12,"column_end":15},"name":"cfa","qualname":"<UnwindTableRow<R>>::cfa","value":"fn (&self) -> &CfaRule<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the canonical frame address (CFA) recovery rule for this row.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":205603,"byte_end":205611,"line_start":2623,"line_end":2623,"column_start":12,"column_end":20},"name":"register","qualname":"<UnwindTableRow<R>>::register","value":"fn (&self, register: Register) -> RegisterRule<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the register recovery rule for the given register number.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":206323,"byte_end":206332,"line_start":2642,"line_end":2642,"column_start":12,"column_end":21},"name":"registers","qualname":"<UnwindTableRow<R>>::registers","value":"fn (&self) -> RegisterRuleIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all defined register `(number, rule)` pairs.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5140},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":206596,"byte_end":206613,"line_start":2651,"line_end":2651,"column_start":5,"column_end":22},"name":"RegisterAndOffset","qualname":"::read::cfi::CfaRule::RegisterAndOffset","value":"CfaRule::RegisterAndOffset { register, offset }","parent":{"krate":0,"index":5138},"children":[],"decl_id":null,"docs":" The CFA is given offset from the given register's value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5143},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":206878,"byte_end":206888,"line_start":2659,"line_end":2659,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::CfaRule::Expression","value":"CfaRule::Expression(Expression<R>)","parent":{"krate":0,"index":5138},"children":[],"decl_id":null,"docs":" The CFA is obtained by evaluating this `Reader` as a DWARF expression\n program.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5138},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":206506,"byte_end":206513,"line_start":2649,"line_end":2649,"column_start":10,"column_end":17},"name":"CfaRule","qualname":"::read::cfi::CfaRule","value":"CfaRule::{RegisterAndOffset, Expression}","parent":null,"children":[{"krate":0,"index":5140},{"krate":0,"index":5143}],"decl_id":null,"docs":" The canonical frame address (CFA) recovery rules.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5165},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":207852,"byte_end":207861,"line_start":2692,"line_end":2692,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::read::cfi::RegisterRule::Undefined","value":"RegisterRule::Undefined","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":" > A register that has this rule has no recoverable value in the previous\n > frame. (By convention, it is not preserved by a callee.)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5167},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":208043,"byte_end":208052,"line_start":2697,"line_end":2697,"column_start":5,"column_end":14},"name":"SameValue","qualname":"::read::cfi::RegisterRule::SameValue","value":"RegisterRule::SameValue","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":" > This register has not been modified from the previous frame. (By\n > convention, it is preserved by the callee, but the callee has not\n > modified it.)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5169},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":208204,"byte_end":208210,"line_start":2701,"line_end":2701,"column_start":5,"column_end":11},"name":"Offset","qualname":"::read::cfi::RegisterRule::Offset","value":"RegisterRule::Offset(i64)","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":" \"The previous value of this register is saved at the address CFA+N where\n CFA is the current CFA value and N is a signed offset.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5172},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":208356,"byte_end":208365,"line_start":2705,"line_end":2705,"column_start":5,"column_end":14},"name":"ValOffset","qualname":"::read::cfi::RegisterRule::ValOffset","value":"RegisterRule::ValOffset(i64)","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":" \"The previous value of this register is the value CFA+N where CFA is the\n current CFA value and N is a signed offset.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5175},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":208473,"byte_end":208481,"line_start":2709,"line_end":2709,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::cfi::RegisterRule::Register","value":"RegisterRule::Register(Register)","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":" \"The previous value of this register is stored in another register\n numbered R.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5178},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":208622,"byte_end":208632,"line_start":2713,"line_end":2713,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::RegisterRule::Expression","value":"RegisterRule::Expression(Expression<R>)","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":" \"The previous value of this register is located at the address produced\n by executing the DWARF expression.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5181},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":208765,"byte_end":208778,"line_start":2717,"line_end":2717,"column_start":5,"column_end":18},"name":"ValExpression","qualname":"::read::cfi::RegisterRule::ValExpression","value":"RegisterRule::ValExpression(Expression<R>)","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":" \"The previous value of this register is the value produced by executing\n the DWARF expression.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5184},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":208881,"byte_end":208894,"line_start":2720,"line_end":2720,"column_start":5,"column_end":18},"name":"Architectural","qualname":"::read::cfi::RegisterRule::Architectural","value":"RegisterRule::Architectural","parent":{"krate":0,"index":5163},"children":[],"decl_id":null,"docs":" \"The rule is defined externally to this specification by the augmenter.\"\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5163},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":207674,"byte_end":207686,"line_start":2689,"line_end":2689,"column_start":10,"column_end":22},"name":"RegisterRule","qualname":"::read::cfi::RegisterRule","value":"RegisterRule::{Undefined, SameValue, Offset, ValOffset, Register, Expression, ValExpression, Architectural}","parent":null,"children":[{"krate":0,"index":5165},{"krate":0,"index":5167},{"krate":0,"index":5169},{"krate":0,"index":5172},{"krate":0,"index":5175},{"krate":0,"index":5178},{"krate":0,"index":5181},{"krate":0,"index":5184}],"decl_id":null,"docs":" An entry in the abstract CFI table that describes how to find the value of a\n register.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5205},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":209800,"byte_end":209806,"line_start":2745,"line_end":2745,"column_start":5,"column_end":11},"name":"SetLoc","qualname":"::read::cfi::CallFrameInstruction::SetLoc","value":"CallFrameInstruction::SetLoc { address }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_set_loc\n >\n > The DW_CFA_set_loc instruction takes a single operand that represents\n > a target address. The required action is to create a new table row\n > using the specified address as the location. All other values in the\n > new row are initially identical to the current row. The new location\n > value is always greater than the current one. If the segment_size\n > field of this FDE's CIE is non- zero, the initial location is preceded\n > by a segment selector of the given length.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5207},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":210483,"byte_end":210493,"line_start":2761,"line_end":2761,"column_start":5,"column_end":15},"name":"AdvanceLoc","qualname":"::read::cfi::CallFrameInstruction::AdvanceLoc","value":"CallFrameInstruction::AdvanceLoc { delta }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" The `AdvanceLoc` instruction is used for all of `DW_CFA_advance_loc` and\n `DW_CFA_advance_loc{1,2,4}`.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5209},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":210923,"byte_end":210929,"line_start":2773,"line_end":2773,"column_start":5,"column_end":11},"name":"DefCfa","qualname":"::read::cfi::CallFrameInstruction::DefCfa","value":"CallFrameInstruction::DefCfa { register, offset }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_def_cfa\n >\n > The DW_CFA_def_cfa instruction takes two unsigned LEB128 operands\n > representing a register number and a (non-factored) offset. The\n > required action is to define the current CFA rule to use the provided\n > register and offset.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5212},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":211478,"byte_end":211486,"line_start":2787,"line_end":2787,"column_start":5,"column_end":13},"name":"DefCfaSf","qualname":"::read::cfi::CallFrameInstruction::DefCfaSf","value":"CallFrameInstruction::DefCfaSf { register, factored_offset }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_def_cfa_sf\n >\n > The DW_CFA_def_cfa_sf instruction takes two operands: an unsigned\n > LEB128 value representing a register number and a signed LEB128\n > factored offset. This instruction is identical to DW_CFA_def_cfa\n > except that the second operand is signed and factored. The resulting\n > offset is factored_offset * data_alignment_factor.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5215},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":212049,"byte_end":212063,"line_start":2801,"line_end":2801,"column_start":5,"column_end":19},"name":"DefCfaRegister","qualname":"::read::cfi::CallFrameInstruction::DefCfaRegister","value":"CallFrameInstruction::DefCfaRegister { register }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 3. DW_CFA_def_cfa_register\n >\n > The DW_CFA_def_cfa_register instruction takes a single unsigned LEB128\n > operand representing a register number. The required action is to\n > define the current CFA rule to use the provided register (but to keep\n > the old offset). This operation is valid only if the current CFA rule\n > is defined to use a register and offset.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5217},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":212565,"byte_end":212577,"line_start":2813,"line_end":2813,"column_start":5,"column_end":17},"name":"DefCfaOffset","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffset","value":"CallFrameInstruction::DefCfaOffset { offset }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 4. DW_CFA_def_cfa_offset\n >\n > The DW_CFA_def_cfa_offset instruction takes a single unsigned LEB128\n > operand representing a (non-factored) offset. The required action is\n > to define the current CFA rule to use the provided offset (but to keep\n > the old register). This operation is valid only if the current CFA\n > rule is defined to use a register and offset.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5219},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":213123,"byte_end":213137,"line_start":2826,"line_end":2826,"column_start":5,"column_end":19},"name":"DefCfaOffsetSf","qualname":"::read::cfi::CallFrameInstruction::DefCfaOffsetSf","value":"CallFrameInstruction::DefCfaOffsetSf { factored_offset }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 5. DW_CFA_def_cfa_offset_sf\n >\n > The DW_CFA_def_cfa_offset_sf instruction takes a signed LEB128 operand\n > representing a factored offset. This instruction is identical to\n > DW_CFA_def_cfa_offset except that the operand is signed and\n > factored. The resulting offset is factored_offset *\n > data_alignment_factor. This operation is valid only if the current CFA\n > rule is defined to use a register and offset.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5221},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":213540,"byte_end":213556,"line_start":2837,"line_end":2837,"column_start":5,"column_end":21},"name":"DefCfaExpression","qualname":"::read::cfi::CallFrameInstruction::DefCfaExpression","value":"CallFrameInstruction::DefCfaExpression { expression }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 6. DW_CFA_def_cfa_expression\n >\n > The DW_CFA_def_cfa_expression instruction takes a single operand\n > encoded as a DW_FORM_exprloc value representing a DWARF\n > expression. The required action is to establish that expression as the\n > means by which the current CFA is computed.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5223},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":213945,"byte_end":213954,"line_start":2848,"line_end":2848,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::read::cfi::CallFrameInstruction::Undefined","value":"CallFrameInstruction::Undefined { register }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_undefined\n >\n > The DW_CFA_undefined instruction takes a single unsigned LEB128\n > operand that represents a register number. The required action is to\n > set the rule for the specified register to “undefined.”\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5225},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":214305,"byte_end":214314,"line_start":2858,"line_end":2858,"column_start":5,"column_end":14},"name":"SameValue","qualname":"::read::cfi::CallFrameInstruction::SameValue","value":"CallFrameInstruction::SameValue { register }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_same_value\n >\n > The DW_CFA_same_value instruction takes a single unsigned LEB128\n > operand that represents a register number. The required action is to\n > set the rule for the specified register to “same value.”\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5227},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":214936,"byte_end":214942,"line_start":2873,"line_end":2873,"column_start":5,"column_end":11},"name":"Offset","qualname":"::read::cfi::CallFrameInstruction::Offset","value":"CallFrameInstruction::Offset { register, factored_offset }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" The `Offset` instruction represents both `DW_CFA_offset` and\n `DW_CFA_offset_extended`.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5230},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":215530,"byte_end":215546,"line_start":2888,"line_end":2888,"column_start":5,"column_end":21},"name":"OffsetExtendedSf","qualname":"::read::cfi::CallFrameInstruction::OffsetExtendedSf","value":"CallFrameInstruction::OffsetExtendedSf { register, factored_offset }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 5. DW_CFA_offset_extended_sf\n >\n > The DW_CFA_offset_extended_sf instruction takes two operands: an\n > unsigned LEB128 value representing a register number and a signed\n > LEB128 factored offset. This instruction is identical to\n > DW_CFA_offset_extended except that the second operand is signed and\n > factored. The resulting offset is factored_offset *\n > data_alignment_factor.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5233},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":216092,"byte_end":216101,"line_start":2902,"line_end":2902,"column_start":5,"column_end":14},"name":"ValOffset","qualname":"::read::cfi::CallFrameInstruction::ValOffset","value":"CallFrameInstruction::ValOffset { register, factored_offset }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 6. DW_CFA_val_offset\n >\n > The DW_CFA_val_offset instruction takes two unsigned LEB128 operands\n > representing a register number and a factored offset. The required\n > action is to change the rule for the register indicated by the\n > register number to be a val_offset(N) rule where the value of N is\n > factored_offset * data_alignment_factor.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5236},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":216664,"byte_end":216675,"line_start":2916,"line_end":2916,"column_start":5,"column_end":16},"name":"ValOffsetSf","qualname":"::read::cfi::CallFrameInstruction::ValOffsetSf","value":"CallFrameInstruction::ValOffsetSf { register, factored_offset }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 7. DW_CFA_val_offset_sf\n >\n > The DW_CFA_val_offset_sf instruction takes two operands: an unsigned\n > LEB128 value representing a register number and a signed LEB128\n > factored offset. This instruction is identical to DW_CFA_val_offset\n > except that the second operand is signed and factored. The resulting\n > offset is factored_offset * data_alignment_factor.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5239},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":217112,"byte_end":217120,"line_start":2929,"line_end":2929,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::cfi::CallFrameInstruction::Register","value":"CallFrameInstruction::Register { dest_register, src_register }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 8. DW_CFA_register\n >\n > The DW_CFA_register instruction takes two unsigned LEB128 operands\n > representing register numbers. The required action is to set the rule\n > for the first register to be register(R) where R is the second\n > register.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5242},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":217957,"byte_end":217967,"line_start":2946,"line_end":2946,"column_start":5,"column_end":15},"name":"Expression","qualname":"::read::cfi::CallFrameInstruction::Expression","value":"CallFrameInstruction::Expression { register, expression }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 9. DW_CFA_expression\n >\n > The DW_CFA_expression instruction takes two operands: an unsigned\n > LEB128 value representing a register number, and a DW_FORM_block value\n > representing a DWARF expression. The required action is to change the\n > rule for the register indicated by the register number to be an\n > expression(E) rule where E is the DWARF expression. That is, the DWARF\n > expression computes the address. The value of the CFA is pushed on the\n > DWARF evaluation stack prior to execution of the DWARF expression.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5245},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":218754,"byte_end":218767,"line_start":2963,"line_end":2963,"column_start":5,"column_end":18},"name":"ValExpression","qualname":"::read::cfi::CallFrameInstruction::ValExpression","value":"CallFrameInstruction::ValExpression { register, expression }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 10. DW_CFA_val_expression\n >\n > The DW_CFA_val_expression instruction takes two operands: an unsigned\n > LEB128 value representing a register number, and a DW_FORM_block value\n > representing a DWARF expression. The required action is to change the\n > rule for the register indicated by the register number to be a\n > val_expression(E) rule where E is the DWARF expression. That is, the\n > DWARF expression computes the value of the given register. The value\n > of the CFA is pushed on the DWARF evaluation stack prior to execution\n > of the DWARF expression.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5248},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":219362,"byte_end":219369,"line_start":2979,"line_end":2979,"column_start":5,"column_end":12},"name":"Restore","qualname":"::read::cfi::CallFrameInstruction::Restore","value":"CallFrameInstruction::Restore { register }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" The `Restore` instruction represents both `DW_CFA_restore` and\n `DW_CFA_restore_extended`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":219711,"byte_end":219724,"line_start":2990,"line_end":2990,"column_start":5,"column_end":18},"name":"RememberState","qualname":"::read::cfi::CallFrameInstruction::RememberState","value":"CallFrameInstruction::RememberState","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_remember_state\n >\n > The DW_CFA_remember_state instruction takes no operands. The required\n > action is to push the set of rules for every register onto an implicit\n > stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5252},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":219966,"byte_end":219978,"line_start":2997,"line_end":2997,"column_start":5,"column_end":17},"name":"RestoreState","qualname":"::read::cfi::CallFrameInstruction::RestoreState","value":"CallFrameInstruction::RestoreState","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 2. DW_CFA_restore_state\n >\n > The DW_CFA_restore_state instruction takes no operands. The required\n > action is to pop the set of rules off the implicit stack and place\n > them in the current row.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5254},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":220296,"byte_end":220304,"line_start":3006,"line_end":3006,"column_start":5,"column_end":13},"name":"ArgsSize","qualname":"::read::cfi::CallFrameInstruction::ArgsSize","value":"CallFrameInstruction::ArgsSize { size }","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > DW_CFA_GNU_args_size\n >\n > GNU Extension\n >\n > The DW_CFA_GNU_args_size instruction takes an unsigned LEB128 operand\n > representing an argument size. This instruction specifies the total of\n > the size of the arguments which have been pushed onto the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5256},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":220635,"byte_end":220638,"line_start":3016,"line_end":3016,"column_start":5,"column_end":8},"name":"Nop","qualname":"::read::cfi::CallFrameInstruction::Nop","value":"CallFrameInstruction::Nop","parent":{"krate":0,"index":5203},"children":[],"decl_id":null,"docs":" > 1. DW_CFA_nop\n >\n > The DW_CFA_nop instruction has no operands and no required actions. It\n > is used as padding to make a CIE or FDE an appropriate size.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5203},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":209163,"byte_end":209183,"line_start":2734,"line_end":2734,"column_start":10,"column_end":30},"name":"CallFrameInstruction","qualname":"::read::cfi::CallFrameInstruction","value":"CallFrameInstruction::{SetLoc, AdvanceLoc, DefCfa, DefCfaSf, DefCfaRegister, DefCfaOffset, DefCfaOffsetSf, DefCfaExpression, Undefined, SameValue, Offset, OffsetExtendedSf, ValOffset, ValOffsetSf, Register, Expression, ValExpression, Restore, RememberState, RestoreState, ArgsSize, Nop}","parent":null,"children":[{"krate":0,"index":5205},{"krate":0,"index":5207},{"krate":0,"index":5209},{"krate":0,"index":5212},{"krate":0,"index":5215},{"krate":0,"index":5217},{"krate":0,"index":5219},{"krate":0,"index":5221},{"krate":0,"index":5223},{"krate":0,"index":5225},{"krate":0,"index":5227},{"krate":0,"index":5230},{"krate":0,"index":5233},{"krate":0,"index":5236},{"krate":0,"index":5239},{"krate":0,"index":5242},{"krate":0,"index":5245},{"krate":0,"index":5248},{"krate":0,"index":5250},{"krate":0,"index":5252},{"krate":0,"index":5254},{"krate":0,"index":5256}],"decl_id":null,"docs":" A parsed call frame instruction.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5276},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":228750,"byte_end":228774,"line_start":3228,"line_end":3228,"column_start":12,"column_end":36},"name":"CallFrameInstructionIter","qualname":"::read::cfi::CallFrameInstructionIter","value":"CallFrameInstructionIter {  }","parent":null,"children":[{"krate":0,"index":5279},{"krate":0,"index":5280},{"krate":0,"index":5281}],"decl_id":null,"docs":" A lazy iterator parsing call frame instructions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":229020,"byte_end":229024,"line_start":3236,"line_end":3236,"column_start":12,"column_end":16},"name":"next","qualname":"<CallFrameInstructionIter>::next","value":"fn (&mut self) -> Result<Option<CallFrameInstruction<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the next call frame instruction.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5291},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":230258,"byte_end":230264,"line_start":3280,"line_end":3280,"column_start":5,"column_end":11},"name":"Direct","qualname":"::read::cfi::Pointer::Direct","value":"Pointer::Direct(u64)","parent":{"krate":0,"index":5290},"children":[],"decl_id":null,"docs":" This value is the decoded pointer value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5294},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":230573,"byte_end":230581,"line_start":3288,"line_end":3288,"column_start":5,"column_end":13},"name":"Indirect","qualname":"::read::cfi::Pointer::Indirect","value":"Pointer::Indirect(u64)","parent":{"krate":0,"index":5290},"children":[],"decl_id":null,"docs":" This value is *not* the pointer value, but points to the address of\n where the real pointer value lives. In other words, deref this pointer\n to get the real pointer value.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5290},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":230195,"byte_end":230202,"line_start":3278,"line_end":3278,"column_start":10,"column_end":17},"name":"Pointer","qualname":"::read::cfi::Pointer","value":"Pointer::{Direct, Indirect}","parent":null,"children":[{"krate":0,"index":5291},{"krate":0,"index":5294}],"decl_id":null,"docs":" A decoded pointer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5326},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":369602,"byte_end":369607,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Dwarf","qualname":"::read::dwarf::Dwarf","value":"Dwarf { debug_abbrev, debug_addr, debug_info, debug_line, debug_line_str, debug_str, debug_str_offsets, debug_str_sup, debug_types, locations, ranges }","parent":null,"children":[{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5333},{"krate":0,"index":5334},{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5337},{"krate":0,"index":5338}],"decl_id":null,"docs":" All of the commonly used DWARF sections, and other common information.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5328},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":369658,"byte_end":369670,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"debug_abbrev","qualname":"::read::dwarf::Dwarf::debug_abbrev","value":"read::abbrev::DebugAbbrev<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The `.debug_abbrev` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5329},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":369732,"byte_end":369742,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"name":"debug_addr","qualname":"::read::dwarf::Dwarf::debug_addr","value":"read::addr::DebugAddr<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The `.debug_addr` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5330},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":369802,"byte_end":369812,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"name":"debug_info","qualname":"::read::dwarf::Dwarf::debug_info","value":"read::unit::DebugInfo<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The `.debug_info` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5331},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":369872,"byte_end":369882,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"name":"debug_line","qualname":"::read::dwarf::Dwarf::debug_line","value":"read::line::DebugLine<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The `.debug_line` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5332},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":369946,"byte_end":369960,"line_start":35,"line_end":35,"column_start":9,"column_end":23},"name":"debug_line_str","qualname":"::read::dwarf::Dwarf::debug_line_str","value":"read::str::DebugLineStr<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The `.debug_line_str` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5333},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":370022,"byte_end":370031,"line_start":38,"line_end":38,"column_start":9,"column_end":18},"name":"debug_str","qualname":"::read::dwarf::Dwarf::debug_str","value":"read::str::DebugStr<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The `.debug_str` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5334},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":370097,"byte_end":370114,"line_start":41,"line_end":41,"column_start":9,"column_end":26},"name":"debug_str_offsets","qualname":"::read::dwarf::Dwarf::debug_str_offsets","value":"read::str::DebugStrOffsets<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The `.debug_str_offsets` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5335},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":370211,"byte_end":370224,"line_start":44,"line_end":44,"column_start":9,"column_end":22},"name":"debug_str_sup","qualname":"::read::dwarf::Dwarf::debug_str_sup","value":"read::str::DebugStr<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The `.debug_str` section for a supplementary object file.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5336},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":370284,"byte_end":370295,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"debug_types","qualname":"::read::dwarf::Dwarf::debug_types","value":"read::unit::DebugTypes<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The `.debug_types` section.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5337},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":370400,"byte_end":370409,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"locations","qualname":"::read::dwarf::Dwarf::locations","value":"read::loclists::LocationLists<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The location lists in the `.debug_loc` and `.debug_loclists` sections.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5338},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":370517,"byte_end":370523,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"ranges","qualname":"::read::dwarf::Dwarf::ranges","value":"read::rnglists::RangeLists<R>","parent":{"krate":0,"index":5326},"children":[],"decl_id":null,"docs":" The range lists in the `.debug_ranges` and `.debug_rnglists` sections.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":371117,"byte_end":371121,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"load","qualname":"<Dwarf<T>>::load","value":"fn <F1, F2, E> (mut section: F1, mut sup: F2) -> core::result::Result<Self, E>","parent":null,"children":[],"decl_id":null,"docs":" Try to load the DWARF sections using the given loader functions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":373523,"byte_end":373529,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Dwarf<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> Dwarf<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Dwarf` structure that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":374604,"byte_end":374609,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"units","qualname":"<Dwarf<R>>::units","value":"fn (&self) -> CompilationUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the compilation- and partial-unit headers in the\n `.debug_info` section.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":374583,"byte_end":374592,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":374787,"byte_end":374791,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"unit","qualname":"<Dwarf<R>>::unit","value":"fn (&self, header: CompilationUnitHeader<R>) -> Result<Unit<R>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given compilation unit header.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":374766,"byte_end":374775,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375092,"byte_end":375102,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"type_units","qualname":"<Dwarf<R>>::type_units","value":"fn (&self) -> TypeUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the type-unit headers in the `.debug_types` section.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375071,"byte_end":375080,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375267,"byte_end":375276,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"type_unit","qualname":"<Dwarf<R>>::type_unit","value":"fn (&self, header: TypeUnitHeader<R>) -> Result<Unit<R>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given type unit header.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375246,"byte_end":375255,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375508,"byte_end":375521,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<Dwarf<R>>::abbreviations","value":"fn (&self, unit: &CompilationUnitHeader<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations for a compilation unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375487,"byte_end":375496,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375763,"byte_end":375781,"line_start":179,"line_end":179,"column_start":12,"column_end":30},"name":"type_abbreviations","qualname":"<Dwarf<R>>::type_abbreviations","value":"fn (&self, unit: &TypeUnitHeader<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations for a type unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375742,"byte_end":375751,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375974,"byte_end":375987,"line_start":185,"line_end":185,"column_start":12,"column_end":25},"name":"string_offset","qualname":"<Dwarf<R>>::string_offset","value":"fn (&self, unit: &Unit<R>, index: DebugStrOffsetsIndex<R::Offset>) -> Result<DebugStrOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the string offset at the given index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":375953,"byte_end":375962,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":376327,"byte_end":376333,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"string","qualname":"<Dwarf<R>>::string","value":"fn (&self, offset: DebugStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the string at the given offset in `.debug_str`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":376306,"byte_end":376315,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":376530,"byte_end":376541,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"line_string","qualname":"<Dwarf<R>>::line_string","value":"fn (&self, offset: DebugLineStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return the string at the given offset in `.debug_line_str`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":376509,"byte_end":376518,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":377354,"byte_end":377365,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"attr_string","qualname":"<Dwarf<R>>::attr_string","value":"fn (&self, unit: &Unit<R>, attr: AttributeValue<R>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Return an attribute value as a string slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":378229,"byte_end":378236,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"address","qualname":"<Dwarf<R>>::address","value":"fn (&self, unit: &Unit<R>, index: DebugAddrIndex<R::Offset>) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the address at the given index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":378488,"byte_end":378501,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"ranges_offset","qualname":"<Dwarf<R>>::ranges_offset","value":"fn (&self, unit: &Unit<R>, index: DebugRngListsIndex<R::Offset>) -> Result<RangeListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the range list offset at the given index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":378814,"byte_end":378820,"line_start":255,"line_end":255,"column_start":12,"column_end":18},"name":"ranges","qualname":"<Dwarf<R>>::ranges","value":"fn (&self, unit: &Unit<R>, offset: RangeListsOffset<R::Offset>) -> Result<RngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `RangeListEntry`s starting at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":379541,"byte_end":379559,"line_start":278,"line_end":278,"column_start":12,"column_end":30},"name":"attr_ranges_offset","qualname":"<Dwarf<R>>::attr_ranges_offset","value":"fn (&self, unit: &Unit<R>, attr: AttributeValue<R>) -> Result<Option<RangeListsOffset<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a range list offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":380363,"byte_end":380374,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"attr_ranges","qualname":"<Dwarf<R>>::attr_ranges","value":"fn (&self, unit: &Unit<R>, attr: AttributeValue<R>) -> Result<Option<RngListIter<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a range list entry iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":380829,"byte_end":380839,"line_start":313,"line_end":313,"column_start":12,"column_end":22},"name":"die_ranges","qualname":"<Dwarf<R>>::die_ranges","value":"fn (&self, unit: &Unit<R>, entry: &DebuggingInformationEntry<R>) -> Result<RangeIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the address ranges of a `DebuggingInformationEntry`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":382441,"byte_end":382452,"line_start":354,"line_end":354,"column_start":12,"column_end":23},"name":"unit_ranges","qualname":"<Dwarf<R>>::unit_ranges","value":"fn (&self, unit: &Unit<R>) -> Result<RangeIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the address ranges of a `Unit`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":382778,"byte_end":382794,"line_start":362,"line_end":362,"column_start":12,"column_end":28},"name":"locations_offset","qualname":"<Dwarf<R>>::locations_offset","value":"fn (&self, unit: &Unit<R>, index: DebugLocListsIndex<R::Offset>) -> Result<LocationListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Return the location list offset at the given index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":383116,"byte_end":383125,"line_start":372,"line_end":372,"column_start":12,"column_end":21},"name":"locations","qualname":"<Dwarf<R>>::locations","value":"fn (&self, unit: &Unit<R>, offset: LocationListsOffset<R::Offset>) -> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `LocationListEntry`s starting at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":383861,"byte_end":383882,"line_start":395,"line_end":395,"column_start":12,"column_end":33},"name":"attr_locations_offset","qualname":"<Dwarf<R>>::attr_locations_offset","value":"fn (&self, unit: &Unit<R>, attr: AttributeValue<R>) -> Result<Option<LocationListsOffset<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a location list offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":384729,"byte_end":384743,"line_start":418,"line_end":418,"column_start":12,"column_end":26},"name":"attr_locations","qualname":"<Dwarf<R>>::attr_locations","value":"fn (&self, unit: &Unit<R>, attr: AttributeValue<R>) -> Result<Option<LocListIter<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Try to return an attribute value as a location list entry iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":385213,"byte_end":385229,"line_start":432,"line_end":432,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<Dwarf<R>>::lookup_offset_id","value":"fn (&self, id: ReaderOffsetId) -> Option<(bool, SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":386341,"byte_end":386353,"line_start":454,"line_end":454,"column_start":12,"column_end":24},"name":"format_error","qualname":"<Dwarf<R>>::format_error","value":"fn (&self, err: Error) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representation of the given error.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5345},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":387105,"byte_end":387109,"line_start":478,"line_end":478,"column_start":12,"column_end":16},"name":"Unit","qualname":"::read::dwarf::Unit","value":"Unit { offset, header, abbreviations, name, comp_dir, low_pc, str_offsets_base, addr_base, loclists_base, rnglists_base, line_program }","parent":null,"children":[{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352},{"krate":0,"index":5353},{"krate":0,"index":5354},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5358}],"decl_id":null,"docs":" All of the commonly used information for a unit in the `.debug_info` or `.debug_types`\n sections.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5348},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":387259,"byte_end":387265,"line_start":484,"line_end":484,"column_start":9,"column_end":15},"name":"offset","qualname":"::read::dwarf::Unit::offset","value":"common::UnitSectionOffset<Offset>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The section offset of the unit.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5349},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":387335,"byte_end":387341,"line_start":487,"line_end":487,"column_start":9,"column_end":15},"name":"header","qualname":"::read::dwarf::Unit::header","value":"read::unit::UnitHeader<R, Offset>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The header of the unit.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5350},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":387422,"byte_end":387435,"line_start":490,"line_end":490,"column_start":9,"column_end":22},"name":"abbreviations","qualname":"::read::dwarf::Unit::abbreviations","value":"read::abbrev::Abbreviations","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The parsed abbreviations for the unit.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5351},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":387509,"byte_end":387513,"line_start":493,"line_end":493,"column_start":9,"column_end":13},"name":"name","qualname":"::read::dwarf::Unit::name","value":"core::option::Option<R>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The `DW_AT_name` attribute of the unit.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5352},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":387587,"byte_end":387595,"line_start":496,"line_end":496,"column_start":9,"column_end":17},"name":"comp_dir","qualname":"::read::dwarf::Unit::comp_dir","value":"core::option::Option<R>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The `DW_AT_comp_dir` attribute of the unit.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5353},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":387682,"byte_end":387688,"line_start":499,"line_end":499,"column_start":9,"column_end":15},"name":"low_pc","qualname":"::read::dwarf::Unit::low_pc","value":"u64","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The `DW_AT_low_pc` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5354},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":387779,"byte_end":387795,"line_start":502,"line_end":502,"column_start":9,"column_end":25},"name":"str_offsets_base","qualname":"::read::dwarf::Unit::str_offsets_base","value":"common::DebugStrOffsetsBase<Offset>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The `DW_AT_str_offsets_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5355},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":387903,"byte_end":387912,"line_start":505,"line_end":505,"column_start":9,"column_end":18},"name":"addr_base","qualname":"::read::dwarf::Unit::addr_base","value":"common::DebugAddrBase<Offset>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The `DW_AT_addr_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5356},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":388018,"byte_end":388031,"line_start":508,"line_end":508,"column_start":9,"column_end":22},"name":"loclists_base","qualname":"::read::dwarf::Unit::loclists_base","value":"common::DebugLocListsBase<Offset>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The `DW_AT_loclists_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5357},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":388141,"byte_end":388154,"line_start":511,"line_end":511,"column_start":9,"column_end":22},"name":"rnglists_base","qualname":"::read::dwarf::Unit::rnglists_base","value":"common::DebugRngListsBase<Offset>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The `DW_AT_rnglists_base` attribute of the unit. Defaults to 0.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5358},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":388237,"byte_end":388249,"line_start":514,"line_end":514,"column_start":9,"column_end":21},"name":"line_program","qualname":"::read::dwarf::Unit::line_program","value":"core::option::Option<read::line::IncompleteLineProgram<R, Offset>>","parent":{"krate":0,"index":5345},"children":[],"decl_id":null,"docs":" The line number program of the unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":388418,"byte_end":388421,"line_start":520,"line_end":520,"column_start":12,"column_end":15},"name":"new","qualname":"<Unit<R>>::new","value":"fn (dwarf: &Dwarf<R>, header: CompilationUnitHeader<R>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given compilation unit header.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":388397,"byte_end":388406,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":388739,"byte_end":388752,"line_start":530,"line_end":530,"column_start":12,"column_end":25},"name":"new_type_unit","qualname":"<Unit<R>>::new_type_unit","value":"fn (dwarf: &Dwarf<R>, header: TypeUnitHeader<R>) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Unit` from the given type unit header.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":388718,"byte_end":388727,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":392618,"byte_end":392626,"line_start":632,"line_end":632,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Unit<R>>::encoding","value":"fn (&self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":392597,"byte_end":392606,"line_start":631,"line_end":631,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":392763,"byte_end":392768,"line_start":637,"line_end":637,"column_start":12,"column_end":17},"name":"entry","qualname":"<Unit<R>>::entry","value":"fn (&self, offset: UnitOffset<R::Offset>) -> Result<DebuggingInformationEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":392995,"byte_end":393002,"line_start":643,"line_end":643,"column_start":12,"column_end":19},"name":"entries","qualname":"<Unit<R>>::entries","value":"fn (&self) -> EntriesCursor<R>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":392974,"byte_end":392983,"line_start":642,"line_end":642,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":393209,"byte_end":393226,"line_start":650,"line_end":650,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<Unit<R>>::entries_at_offset","value":"fn (&self, offset: UnitOffset<R::Offset>) -> Result<EntriesCursor<R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":393188,"byte_end":393197,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":393500,"byte_end":393512,"line_start":657,"line_end":657,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<Unit<R>>::entries_tree","value":"fn (&self, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesTree<R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":393479,"byte_end":393488,"line_start":656,"line_end":656,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":393755,"byte_end":393766,"line_start":663,"line_end":663,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<Unit<R>>::entries_raw","value":"fn (&self, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesRaw<R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":393734,"byte_end":393743,"line_start":662,"line_end":662,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":394165,"byte_end":394179,"line_start":672,"line_end":672,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<UnitSectionOffset<T>>::to_unit_offset","value":"fn <R> (&self, unit: &Unit<R>) -> Option<UnitOffset<T>>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the section.\n Returns `None` if the offset is not within the unit entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":395279,"byte_end":395301,"line_start":703,"line_end":703,"column_start":12,"column_end":34},"name":"to_unit_section_offset","qualname":"<UnitOffset<T>>::to_unit_section_offset","value":"fn <R> (&self, unit: &Unit<R>) -> UnitSectionOffset<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_info section,\n instead of relative to the start of the given compilation unit.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5363},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":395958,"byte_end":395967,"line_start":722,"line_end":722,"column_start":12,"column_end":21},"name":"RangeIter","qualname":"::read::dwarf::RangeIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator for the address ranges of a `DebuggingInformationEntry`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":396323,"byte_end":396327,"line_start":738,"line_end":738,"column_start":12,"column_end":16},"name":"next","qualname":"<RangeIter<R>>::next","value":"fn (&mut self) -> Result<Option<Range>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5381},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":398998,"byte_end":399009,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"EndianSlice","qualname":"::read::endian_slice::EndianSlice","value":"EndianSlice {  }","parent":null,"children":[{"krate":0,"index":5384},{"krate":0,"index":5385}],"decl_id":null,"docs":" A `&[u8]` slice with endianity metadata.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399284,"byte_end":399287,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<EndianSlice>::new","value":"fn (slice: &'input [u8], endian: Endian) -> EndianSlice<'input, Endian>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `EndianSlice` with the given slice and endianity.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399263,"byte_end":399272,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399576,"byte_end":399579,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"buf","qualname":"<EndianSlice>::buf","value":"fn (&self) -> &'input [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399452,"byte_end":399461,"line_start":34,"line_end":34,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"Method renamed to EndianSlice::slice; use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399485,"byte_end":399564,"line_start":36,"line_end":36,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399701,"byte_end":399706,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"slice","qualname":"<EndianSlice>::slice","value":"fn (&self) -> &'input [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the raw slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399680,"byte_end":399689,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399989,"byte_end":399997,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"split_at","qualname":"<EndianSlice>::split_at","value":"fn (&self, idx: usize) -> (EndianSlice<'input, Endian>, EndianSlice<'input, Endian>)","parent":null,"children":[],"decl_id":null,"docs":" Split the slice in two at the given index, resulting in the tuple where\n the first item has range [0, idx), and the second has range [idx,\n len). Panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399968,"byte_end":399977,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":400270,"byte_end":400274,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"find","qualname":"<EndianSlice>::find","value":"fn (&self, byte: u8) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Find the first occurence of a byte in the slice, and return its index.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":400249,"byte_end":400258,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":400498,"byte_end":400509,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"offset_from","qualname":"<EndianSlice>::offset_from","value":"fn (&self, base: EndianSlice<'input, Endian>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of the start of the slice relative to the start\n of the given slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":400477,"byte_end":400486,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":401001,"byte_end":401010,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"to_string","qualname":"<EndianSlice>::to_string","value":"fn (&self) -> Result<&'input str>","parent":null,"children":[],"decl_id":null,"docs":" Converts the slice to a string using `str::from_utf8`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":400980,"byte_end":400989,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":401249,"byte_end":401264,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<EndianSlice>::to_string_lossy","value":"fn (&self) -> Cow<'input, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts the slice to a string, including invalid characters,\n using `String::from_utf8_lossy`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":401228,"byte_end":401237,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":402449,"byte_end":402454,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"range","qualname":"<EndianSlice>::range","value":"fn (&self, idx: Range<usize>) -> EndianSlice<'input, Endian>","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..end` range of the underlying slice and return a\n new `EndianSlice`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":403052,"byte_end":403062,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"range_from","qualname":"<EndianSlice>::range_from","value":"fn (&self, idx: RangeFrom<usize>) -> EndianSlice<'input, Endian>","parent":null,"children":[],"decl_id":null,"docs":" Take the given `start..` range of the underlying slice and return a new\n `EndianSlice`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":403660,"byte_end":403668,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"range_to","qualname":"<EndianSlice>::range_to","value":"fn (&self, idx: RangeTo<usize>) -> EndianSlice<'input, Endian>","parent":null,"children":[],"decl_id":null,"docs":" Take the given `..end` range of the underlying slice and return a new\n `EndianSlice`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5423},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408371,"byte_end":408385,"line_start":17,"line_end":17,"column_start":12,"column_end":26},"name":"ReaderOffsetId","qualname":"::read::reader::ReaderOffsetId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for an offset within a section reader.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":744},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408545,"byte_end":408557,"line_start":22,"line_end":22,"column_start":11,"column_end":23},"name":"ReaderOffset","qualname":"::read::reader::ReaderOffset","value":"ReaderOffset: Debug + Copy + Eq + Ord + Hash + Add<Output = Self> + AddAssign + Sub<Output =\nSelf>","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752}],"decl_id":null,"docs":" A trait for offsets with a DWARF section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408692,"byte_end":408699,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::read::reader::ReaderOffset::from_u8","value":"fn (offset: u8) -> Self","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Convert a u8 to an offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408765,"byte_end":408773,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::read::reader::ReaderOffset::from_u16","value":"fn (offset: u16) -> Self","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Convert a u16 to an offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408841,"byte_end":408849,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::read::reader::ReaderOffset::from_i16","value":"fn (offset: i16) -> Self","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Convert an i16 to an offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408916,"byte_end":408924,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::read::reader::ReaderOffset::from_u32","value":"fn (offset: u32) -> Self","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Convert a u32 to an offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":409069,"byte_end":409077,"line_start":40,"line_end":40,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::read::reader::ReaderOffset::from_u64","value":"fn (offset: u64) -> Result<Self>","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Convert a u64 to an offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":409152,"byte_end":409160,"line_start":43,"line_end":43,"column_start":8,"column_end":16},"name":"into_u64","qualname":"::read::reader::ReaderOffset::into_u64","value":"fn (self) -> u64","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Convert an offset to a u64.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":409245,"byte_end":409257,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::read::reader::ReaderOffset::wrapping_add","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":409348,"byte_end":409359,"line_start":49,"line_end":49,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::read::reader::ReaderOffset::checked_sub","value":"fn (self, other: Self) -> Option<Self>","parent":{"krate":0,"index":744},"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":780},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":413504,"byte_end":413510,"line_start":207,"line_end":207,"column_start":11,"column_end":17},"name":"Reader","qualname":"::read::reader::Reader","value":"Reader: Debug + Clone","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" A trait for reading the data from a DWARF section.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":781},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":413583,"byte_end":413589,"line_start":209,"line_end":209,"column_start":10,"column_end":16},"name":"Endian","qualname":"::read::reader::Reader::Endian","value":"type Endian: Endianity;","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" The endianity of bytes that are read.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":782},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":413659,"byte_end":413665,"line_start":212,"line_end":212,"column_start":10,"column_end":16},"name":"Offset","qualname":"::read::reader::Reader::Offset","value":"type Offset: ReaderOffset;","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" The type used for offsets and lengths.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":413742,"byte_end":413748,"line_start":215,"line_end":215,"column_start":8,"column_end":14},"name":"endian","qualname":"::read::reader::Reader::endian","value":"fn (&self) -> Self::Endian","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Return the endianity of bytes that are read.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":413827,"byte_end":413830,"line_start":218,"line_end":218,"column_start":8,"column_end":11},"name":"len","qualname":"::read::reader::Reader::len","value":"fn (&self) -> Self::Offset","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Return the number of bytes remaining.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":413914,"byte_end":413919,"line_start":221,"line_end":221,"column_start":8,"column_end":13},"name":"empty","qualname":"::read::reader::Reader::empty","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Set the number of bytes remaining to zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":414007,"byte_end":414015,"line_start":224,"line_end":224,"column_start":8,"column_end":16},"name":"truncate","qualname":"::read::reader::Reader::truncate","value":"fn (&mut self, len: Self::Offset) -> Result<()>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Set the number of bytes remaining to the specified length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":414290,"byte_end":414301,"line_start":231,"line_end":231,"column_start":8,"column_end":19},"name":"offset_from","qualname":"::read::reader::Reader::offset_from","value":"fn (&self, base: &Self) -> Self::Offset","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Return the offset of this reader's data relative to the start of\n the given base reader's data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":414407,"byte_end":414416,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"offset_id","qualname":"::read::reader::Reader::offset_id","value":"fn (&self) -> ReaderOffsetId","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Return an identifier for the current reader offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":414555,"byte_end":414571,"line_start":238,"line_end":238,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"::read::reader::Reader::lookup_offset_id","value":"fn (&self, id: ReaderOffsetId) -> Option<Self::Offset>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Return the offset corresponding to the given `id` if\n it is associated with this reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":414746,"byte_end":414750,"line_start":242,"line_end":242,"column_start":8,"column_end":12},"name":"find","qualname":"::read::reader::Reader::find","value":"fn (&self, byte: u8) -> Result<Self::Offset>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Find the index of the first occurence of the given byte.\n The offset of the reader is not changed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":414848,"byte_end":414852,"line_start":245,"line_end":245,"column_start":8,"column_end":12},"name":"skip","qualname":"::read::reader::Reader::skip","value":"fn (&mut self, len: Self::Offset) -> Result<()>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Discard the specified number of bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":415088,"byte_end":415093,"line_start":251,"line_end":251,"column_start":8,"column_end":13},"name":"split","qualname":"::read::reader::Reader::split","value":"fn (&mut self, len: Self::Offset) -> Result<Self>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Split a reader in two.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":415374,"byte_end":415382,"line_start":259,"line_end":259,"column_start":8,"column_end":16},"name":"to_slice","qualname":"::read::reader::Reader::to_slice","value":"fn (&self) -> Result<Cow<[u8]>>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Return all remaining data as a clone-on-write slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":415722,"byte_end":415731,"line_start":269,"line_end":269,"column_start":8,"column_end":17},"name":"to_string","qualname":"::read::reader::Reader::to_string","value":"fn (&self) -> Result<Cow<str>>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Convert all remaining data to a clone-on-write string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416026,"byte_end":416041,"line_start":277,"line_end":277,"column_start":8,"column_end":23},"name":"to_string_lossy","qualname":"::read::reader::Reader::to_string_lossy","value":"fn (&self) -> Result<Cow<str>>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Convert all remaining data to a clone-on-write string, including invalid characters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416129,"byte_end":416139,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"read_slice","qualname":"::read::reader::Reader::read_slice","value":"fn (&mut self, buf: &mut [u8]) -> Result<()>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read exactly `buf.len()` bytes into `buf`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416229,"byte_end":416242,"line_start":284,"line_end":284,"column_start":8,"column_end":21},"name":"read_u8_array","qualname":"::read::reader::Reader::read_u8_array","value":"fn <A> (&mut self) -> Result<A>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read a u8 array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416212,"byte_end":416221,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416540,"byte_end":416548,"line_start":295,"line_end":295,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::read::reader::Reader::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Return true if the number of bytes remaining is zero.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416523,"byte_end":416532,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416660,"byte_end":416667,"line_start":301,"line_end":301,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::read::reader::Reader::read_u8","value":"fn (&mut self) -> Result<u8>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read a u8.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416643,"byte_end":416652,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416808,"byte_end":416815,"line_start":308,"line_end":308,"column_start":8,"column_end":15},"name":"read_i8","qualname":"::read::reader::Reader::read_i8","value":"fn (&mut self) -> Result<i8>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read an i8.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416791,"byte_end":416800,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416962,"byte_end":416970,"line_start":315,"line_end":315,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::read::reader::Reader::read_u16","value":"fn (&mut self) -> Result<u16>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read a u16.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":416945,"byte_end":416954,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417135,"byte_end":417143,"line_start":322,"line_end":322,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::read::reader::Reader::read_i16","value":"fn (&mut self) -> Result<i16>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read an i16.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417118,"byte_end":417127,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417307,"byte_end":417315,"line_start":329,"line_end":329,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::read::reader::Reader::read_u32","value":"fn (&mut self) -> Result<u32>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read a u32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417290,"byte_end":417299,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417480,"byte_end":417488,"line_start":336,"line_end":336,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::read::reader::Reader::read_i32","value":"fn (&mut self) -> Result<i32>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read an i32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417463,"byte_end":417472,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417652,"byte_end":417660,"line_start":343,"line_end":343,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::read::reader::Reader::read_u64","value":"fn (&mut self) -> Result<u64>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read a u64.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417635,"byte_end":417644,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417825,"byte_end":417833,"line_start":350,"line_end":350,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::read::reader::Reader::read_i64","value":"fn (&mut self) -> Result<i64>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read an i64.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417808,"byte_end":417817,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417997,"byte_end":418005,"line_start":357,"line_end":357,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::read::reader::Reader::read_f32","value":"fn (&mut self) -> Result<f32>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read a f32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":417980,"byte_end":417989,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":418169,"byte_end":418177,"line_start":364,"line_end":364,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::read::reader::Reader::read_f64","value":"fn (&mut self) -> Result<f64>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read a f64.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":418152,"byte_end":418161,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":418445,"byte_end":418454,"line_start":375,"line_end":375,"column_start":8,"column_end":17},"name":"read_uint","qualname":"::read::reader::Reader::read_uint","value":"fn (&mut self, n: usize) -> Result<u64>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read an unsigned n-bytes integer u64.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":418428,"byte_end":418437,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":418699,"byte_end":418725,"line_start":382,"line_end":382,"column_start":8,"column_end":34},"name":"read_null_terminated_slice","qualname":"::read::reader::Reader::read_null_terminated_slice","value":"fn (&mut self) -> Result<Self>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read a null-terminated slice, and return it (excluding the null).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":418949,"byte_end":418961,"line_start":390,"line_end":390,"column_start":8,"column_end":20},"name":"read_uleb128","qualname":"::read::reader::Reader::read_uleb128","value":"fn (&mut self) -> Result<u64>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":419086,"byte_end":419102,"line_start":395,"line_end":395,"column_start":8,"column_end":24},"name":"read_uleb128_u16","qualname":"::read::reader::Reader::read_uleb128_u16","value":"fn (&mut self) -> Result<u16>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read an unsigned LEB128 encoded u16.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":419223,"byte_end":419235,"line_start":400,"line_end":400,"column_start":8,"column_end":20},"name":"read_sleb128","qualname":"::read::reader::Reader::read_sleb128","value":"fn (&mut self) -> Result<i64>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read a signed LEB128 encoded integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":419486,"byte_end":419505,"line_start":408,"line_end":408,"column_start":8,"column_end":27},"name":"read_initial_length","qualname":"::read::reader::Reader::read_initial_length","value":"fn (&mut self) -> Result<(Self::Offset, Format)>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read an initial length field.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":420139,"byte_end":420151,"line_start":424,"line_end":424,"column_start":8,"column_end":20},"name":"read_address","qualname":"::read::reader::Reader::read_address","value":"fn (&mut self, address_size: u8) -> Result<u64>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Read an address-sized integer, and return it as a `u64`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":420691,"byte_end":420700,"line_start":438,"line_end":438,"column_start":8,"column_end":17},"name":"read_word","qualname":"::read::reader::Reader::read_word","value":"fn (&mut self, format: Format) -> Result<Self::Offset>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Parse a word-sized integer according to the DWARF format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":421045,"byte_end":421056,"line_start":447,"line_end":447,"column_start":8,"column_end":19},"name":"read_length","qualname":"::read::reader::Reader::read_length","value":"fn (&mut self, format: Format) -> Result<Self::Offset>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Parse a word-sized section length according to the DWARF format.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":421028,"byte_end":421037,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":421242,"byte_end":421253,"line_start":453,"line_end":453,"column_start":8,"column_end":19},"name":"read_offset","qualname":"::read::reader::Reader::read_offset","value":"fn (&mut self, format: Format) -> Result<Self::Offset>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Parse a word-sized section offset according to the DWARF format.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":421225,"byte_end":421234,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":421481,"byte_end":421498,"line_start":460,"line_end":460,"column_start":8,"column_end":25},"name":"read_sized_offset","qualname":"::read::reader::Reader::read_sized_offset","value":"fn (&mut self, size: u8) -> Result<Self::Offset>","parent":{"krate":0,"index":780},"children":[],"decl_id":null,"docs":" Parse a section offset of the given size.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5438},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":422480,"byte_end":422491,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"DebugAbbrev","qualname":"::read::abbrev::DebugAbbrev","value":"DebugAbbrev {  }","parent":null,"children":[{"krate":0,"index":5440}],"decl_id":null,"docs":" The `DebugAbbrev` struct represents the abbreviations describing\n `DebuggingInformationEntry`s' attribute names and forms found in the\n `.debug_abbrev` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":423232,"byte_end":423235,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugAbbrev<EndianSlice>>::new","value":"fn (debug_abbrev_section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugAbbrev` instance from the data in the `.debug_abbrev`\n section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":423596,"byte_end":423609,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<DebugAbbrev<R>>::abbreviations","value":"fn (&self, debug_abbrev_offset: DebugAbbrevOffset<R::Offset>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse the abbreviations at the given `offset` within this\n `.debug_abbrev` section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":424530,"byte_end":424536,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugAbbrev<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> DebugAbbrev<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugAbbrev` section that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5452},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":425245,"byte_end":425258,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"Abbreviations","qualname":"::read::abbrev::Abbreviations","value":"Abbreviations {  }","parent":null,"children":[{"krate":0,"index":5453},{"krate":0,"index":5454}],"decl_id":null,"docs":" A set of type abbreviations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":427020,"byte_end":427023,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"get","qualname":"<Abbreviations>::get","value":"fn (&self, code: u64) -> Option<&Abbreviation>","parent":null,"children":[],"decl_id":null,"docs":" Get the abbreviation associated with the given code.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":426999,"byte_end":427008,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5461},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":427921,"byte_end":427933,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"Abbreviation","qualname":"::read::abbrev::Abbreviation","value":"Abbreviation {  }","parent":null,"children":[{"krate":0,"index":5462},{"krate":0,"index":5463},{"krate":0,"index":5464},{"krate":0,"index":5465}],"decl_id":null,"docs":" An abbreviation describes the shape of a `DebuggingInformationEntry`'s type:\n its code, tag type, whether it has children, and its set of attributes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":428569,"byte_end":428573,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"code","qualname":"<Abbreviation>::code","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's code.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":428548,"byte_end":428557,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":428677,"byte_end":428680,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"tag","qualname":"<Abbreviation>::tag","value":"fn (&self) -> constants::DwTag","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's tag.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":428656,"byte_end":428665,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":428838,"byte_end":428850,"line_start":224,"line_end":224,"column_start":12,"column_end":24},"name":"has_children","qualname":"<Abbreviation>::has_children","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this abbreviation's type has children, false otherwise.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":428817,"byte_end":428826,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":429000,"byte_end":429010,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"attributes","qualname":"<Abbreviation>::attributes","value":"fn (&self) -> &[AttributeSpecification]","parent":null,"children":[],"decl_id":null,"docs":" Get this abbreviation's attributes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":428979,"byte_end":428988,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5488},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":433130,"byte_end":433152,"line_start":373,"line_end":373,"column_start":12,"column_end":34},"name":"AttributeSpecification","qualname":"::read::abbrev::AttributeSpecification","value":"AttributeSpecification {  }","parent":null,"children":[{"krate":0,"index":5489},{"krate":0,"index":5490},{"krate":0,"index":5491}],"decl_id":null,"docs":" The description of an attribute in an abbreviated type. It is a pair of name\n and form.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":433412,"byte_end":433415,"line_start":383,"line_end":383,"column_start":12,"column_end":15},"name":"new","qualname":"<AttributeSpecification>::new","value":"fn (name: constants::DwAt, form: constants::DwForm, implicit_const_value: Option<i64>) -> AttributeSpecification","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `AttributeSpecification` from the given name and form\n and implicit const value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":433391,"byte_end":433400,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":433993,"byte_end":433997,"line_start":401,"line_end":401,"column_start":12,"column_end":16},"name":"name","qualname":"<AttributeSpecification>::name","value":"fn (&self) -> constants::DwAt","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's name.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":433972,"byte_end":433981,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":434110,"byte_end":434114,"line_start":407,"line_end":407,"column_start":12,"column_end":16},"name":"form","qualname":"<AttributeSpecification>::form","value":"fn (&self) -> constants::DwForm","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's form.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":434089,"byte_end":434098,"line_start":406,"line_end":406,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":434245,"byte_end":434265,"line_start":413,"line_end":413,"column_start":12,"column_end":32},"name":"implicit_const_value","qualname":"<AttributeSpecification>::implicit_const_value","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the attribute's implicit const value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":434224,"byte_end":434233,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":434610,"byte_end":434614,"line_start":422,"line_end":422,"column_start":12,"column_end":16},"name":"size","qualname":"<AttributeSpecification>::size","value":"fn <R> (&self, header: &UnitHeader<R>) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the attribute, in bytes.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5529},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":453994,"byte_end":454005,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"ArangeEntry","qualname":"::read::aranges::ArangeEntry","value":"ArangeEntry {  }","parent":null,"children":[{"krate":0,"index":5531},{"krate":0,"index":5532},{"krate":0,"index":5533},{"krate":0,"index":5534}],"decl_id":null,"docs":" A single parsed arange.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454241,"byte_end":454248,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"segment","qualname":"<ArangeEntry<T>>::segment","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Return the segment selector of this arange.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454220,"byte_end":454229,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454379,"byte_end":454386,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"address","qualname":"<ArangeEntry<T>>::address","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the beginning address of this arange.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454358,"byte_end":454367,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454498,"byte_end":454504,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"length","qualname":"<ArangeEntry<T>>::length","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the length of this arange.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454477,"byte_end":454486,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454645,"byte_end":454662,"line_start":49,"line_end":49,"column_start":12,"column_end":29},"name":"debug_info_offset","qualname":"<ArangeEntry<T>>::debug_info_offset","value":"fn (&self) -> DebugInfoOffset<T>","parent":null,"children":[],"decl_id":null,"docs":" Return the offset into the .debug_info section for this arange.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454624,"byte_end":454633,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5561},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":458632,"byte_end":458644,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"DebugAranges","qualname":"::read::aranges::DebugAranges","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugAranges` struct represents the DWARF address range information\n found in the `.debug_aranges` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":459377,"byte_end":459380,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugAranges<EndianSlice>>::new","value":"fn (debug_aranges_section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugAranges` instance from the data in the `.debug_aranges`\n section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":460111,"byte_end":460116,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugAranges<R>>::items","value":"fn (&self) -> ArangeEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the aranges in the `.debug_aranges` section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5571},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":460734,"byte_end":460749,"line_start":234,"line_end":234,"column_start":12,"column_end":27},"name":"ArangeEntryIter","qualname":"::read::aranges::ArangeEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the aranges from a `.debug_aranges` section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":461235,"byte_end":461239,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"next","qualname":"<ArangeEntryIter<R>>::next","value":"fn (&mut self) -> Result<Option<ArangeEntry<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next arange.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5581},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":467275,"byte_end":467284,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"DebugLine","qualname":"::read::line::DebugLine","value":"DebugLine {  }","parent":null,"children":[{"krate":0,"index":5583}],"decl_id":null,"docs":" The `DebugLine` struct contains the source location to instruction mapping\n found in the `.debug_line` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":468005,"byte_end":468008,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLine<EndianSlice>>::new","value":"fn (debug_line_section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLine` instance from the data in the `.debug_line`\n section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":469330,"byte_end":469337,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"program","qualname":"<DebugLine<R>>::program","value":"fn (&self, offset: DebugLineOffset<R::Offset>, address_size: u8, comp_dir: Option<R>, comp_name: Option<R>) -> Result<IncompleteLineProgram<R>>","parent":null,"children":[],"decl_id":null,"docs":" Parse the line number program whose header is at the given `offset` in the\n `.debug_line` section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":470456,"byte_end":470462,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugLine<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> DebugLine<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugLine` section that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1024},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":471092,"byte_end":471109,"line_start":125,"line_end":125,"column_start":10,"column_end":27},"name":"LineNumberProgram","qualname":"::read::line::LineNumberProgram","value":"dyn LineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberProgram` has been renamed to `LineProgram`.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"LineNumberProgram has been renamed to LineProgram, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":470990,"byte_end":471082,"line_start":124,"line_end":124,"column_start":1,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":1027},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":471347,"byte_end":471358,"line_start":130,"line_end":130,"column_start":11,"column_end":22},"name":"LineProgram","qualname":"::read::line::LineProgram","value":"LineProgram<R, Offset = <R as Reader>::Offset>","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031}],"decl_id":null,"docs":" A `LineProgram` provides access to a `LineProgramHeader` and\n a way to add files to the files table if necessary. Gimli consumers should\n never need to use or see this trait.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":471524,"byte_end":471530,"line_start":136,"line_end":136,"column_start":8,"column_end":14},"name":"header","qualname":"::read::line::LineProgram::header","value":"fn (&self) -> &LineProgramHeader<R, Offset>","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":" Get a reference to the held `LineProgramHeader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":471630,"byte_end":471638,"line_start":138,"line_end":138,"column_start":8,"column_end":16},"name":"add_file","qualname":"::read::line::LineProgram::add_file","value":"fn (&mut self, file: FileEntry<R, Offset>) -> ()","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":" Add a file to the file table if necessary.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1043},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":472531,"byte_end":472543,"line_start":169,"line_end":169,"column_start":10,"column_end":22},"name":"StateMachine","qualname":"::read::line::StateMachine","value":"LineRows<R, Program, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `StateMachine` has been renamed to `LineRows`.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"StateMachine has been renamed to LineRows, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":472437,"byte_end":472521,"line_start":168,"line_end":168,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":5595},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":472924,"byte_end":472932,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"LineRows","qualname":"::read::line::LineRows","value":"LineRows {  }","parent":null,"children":[{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5601}],"decl_id":null,"docs":" Executes a `LineProgram` to iterate over the rows in the matrix of line number information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":474454,"byte_end":474460,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"header","qualname":"<LineRows<R, Program, Offset>>::header","value":"fn (&self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the header for this state machine's line number\n program.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":474433,"byte_end":474442,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":475086,"byte_end":475094,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"next_row","qualname":"<LineRows<R, Program, Offset>>::next_row","value":"fn (&mut self) -> Result<Option<(&LineProgramHeader<R, Offset>, &LineRow)>>","parent":null,"children":[],"decl_id":null,"docs":" Parse and execute the next instructions in the line number program until\n another row in the line number matrix is computed.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1063},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":476090,"byte_end":476096,"line_start":266,"line_end":266,"column_start":10,"column_end":16},"name":"Opcode","qualname":"::read::line::Opcode","value":"LineInstruction<R, <R as Reader>::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `Opcode` has been renamed to `LineInstruction`.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"Opcode has been renamed to LineInstruction, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":475995,"byte_end":476080,"line_start":265,"line_end":265,"column_start":1,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5615},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":477298,"byte_end":477305,"line_start":298,"line_end":298,"column_start":5,"column_end":12},"name":"Special","qualname":"::read::line::LineInstruction::Special","value":"LineInstruction::Special(u8)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" > ### 6.2.5.1 Special Opcodes\n >\n > Each ubyte special opcode has the following effect on the state machine:\n >\n >   1. Add a signed integer to the line register.\n >\n >   2. Modify the operation pointer by incrementing the address and\n >   op_index registers as described below.\n >\n >   3. Append a row to the matrix using the current values of the state\n >   machine registers.\n >\n >   4. Set the basic_block register to “false.”\n >\n >   5. Set the prologue_end register to “false.”\n >\n >   6. Set the epilogue_begin register to “false.”\n >\n >   7. Set the discriminator register to 0.\n >\n > All of the special opcodes do those same seven things; they differ from\n > one another only in what values they add to the line, address and\n > op_index registers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5618},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":477591,"byte_end":477595,"line_start":304,"line_end":304,"column_start":5,"column_end":9},"name":"Copy","qualname":"::read::line::LineInstruction::Copy","value":"LineInstruction::Copy","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::Copy`] appends a row to the matrix using the current\n values of the state machine registers. Then it sets the discriminator\n register to 0, and sets the basic_block, prologue_end and epilogue_begin\n registers to “false.”\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5620},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":477810,"byte_end":477819,"line_start":309,"line_end":309,"column_start":5,"column_end":14},"name":"AdvancePc","qualname":"::read::line::LineInstruction::AdvancePc","value":"LineInstruction::AdvancePc(u64)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"The DW_LNS_advance_pc opcode takes a single unsigned LEB128 operand as\n the operation advance and modifies the address and op_index registers\n [the same as `LineInstruction::Special`]\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5623},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":477980,"byte_end":477991,"line_start":313,"line_end":313,"column_start":5,"column_end":16},"name":"AdvanceLine","qualname":"::read::line::LineInstruction::AdvanceLine","value":"LineInstruction::AdvanceLine(i64)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"The DW_LNS_advance_line opcode takes a single signed LEB128 operand and\n adds that value to the line register of the state machine.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5626},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":478144,"byte_end":478151,"line_start":317,"line_end":317,"column_start":5,"column_end":12},"name":"SetFile","qualname":"::read::line::LineInstruction::SetFile","value":"LineInstruction::SetFile(u64)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_file opcode takes a single unsigned LEB128 operand and\n stores it in the file register of the state machine.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5629},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":478308,"byte_end":478317,"line_start":321,"line_end":321,"column_start":5,"column_end":14},"name":"SetColumn","qualname":"::read::line::LineInstruction::SetColumn","value":"LineInstruction::SetColumn(u64)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_column opcode takes a single unsigned LEB128 operand and\n stores it in the column register of the state machine.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5632},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":478500,"byte_end":478515,"line_start":326,"line_end":326,"column_start":5,"column_end":20},"name":"NegateStatement","qualname":"::read::line::LineInstruction::NegateStatement","value":"LineInstruction::NegateStatement","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"The DW_LNS_negate_stmt opcode takes no operands. It sets the is_stmt\n register of the state machine to the logical negation of its current\n value.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5634},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":478662,"byte_end":478675,"line_start":330,"line_end":330,"column_start":5,"column_end":18},"name":"SetBasicBlock","qualname":"::read::line::LineInstruction::SetBasicBlock","value":"LineInstruction::SetBasicBlock","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_basic_block opcode takes no operands. It sets the\n basic_block register of the state machine to “true.”\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5636},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":479430,"byte_end":479440,"line_start":343,"line_end":343,"column_start":5,"column_end":15},"name":"ConstAddPc","qualname":"::read::line::LineInstruction::ConstAddPc","value":"LineInstruction::ConstAddPc","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" > The DW_LNS_const_add_pc opcode takes no operands. It advances the\n > address and op_index registers by the increments corresponding to\n > special opcode 255.\n >\n > When the line number program needs to advance the address by a small\n > amount, it can use a single special opcode, which occupies a single\n > byte. When it needs to advance the address by up to twice the range of\n > the last special opcode, it can use DW_LNS_const_add_pc followed by a\n > special opcode, for a total of two bytes. Only if it needs to advance\n > the address by more than twice that range will it need to use both\n > DW_LNS_advance_pc and a special opcode, requiring three or more bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5638},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":479840,"byte_end":479850,"line_start":350,"line_end":350,"column_start":5,"column_end":15},"name":"FixedAddPc","qualname":"::read::line::LineInstruction::FixedAddPc","value":"LineInstruction::FixedAddPc(u16)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" > The DW_LNS_fixed_advance_pc opcode takes a single uhalf (unencoded)\n > operand and adds it to the address register of the state machine and\n > sets the op_index register to 0. This is the only standard opcode whose\n > operand is not a variable length number. It also does not multiply the\n > operand by the minimum_instruction_length field of the header.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5641},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":479954,"byte_end":479968,"line_start":353,"line_end":353,"column_start":5,"column_end":19},"name":"SetPrologueEnd","qualname":"::read::line::LineInstruction::SetPrologueEnd","value":"LineInstruction::SetPrologueEnd","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::SetPrologueEnd`] sets the prologue_end register to “true”.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5643},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":480079,"byte_end":480095,"line_start":357,"line_end":357,"column_start":5,"column_end":21},"name":"SetEpilogueBegin","qualname":"::read::line::LineInstruction::SetEpilogueBegin","value":"LineInstruction::SetEpilogueBegin","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"[`LineInstruction::SetEpilogueBegin`] sets the epilogue_begin register to\n “true”.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5645},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":480249,"byte_end":480255,"line_start":361,"line_end":361,"column_start":5,"column_end":11},"name":"SetIsa","qualname":"::read::line::LineInstruction::SetIsa","value":"LineInstruction::SetIsa(u64)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"The DW_LNS_set_isa opcode takes a single unsigned LEB128 operand and\n stores that value in the isa register of the state machine.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5648},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":480322,"byte_end":480338,"line_start":364,"line_end":364,"column_start":5,"column_end":21},"name":"UnknownStandard0","qualname":"::read::line::LineInstruction::UnknownStandard0","value":"LineInstruction::UnknownStandard0(constants::DwLns)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" An unknown standard opcode with zero operands.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5651},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":480416,"byte_end":480432,"line_start":367,"line_end":367,"column_start":5,"column_end":21},"name":"UnknownStandard1","qualname":"::read::line::LineInstruction::UnknownStandard1","value":"LineInstruction::UnknownStandard1(constants::DwLns, u64)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" An unknown standard opcode with one operand.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5655},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":480521,"byte_end":480537,"line_start":370,"line_end":370,"column_start":5,"column_end":21},"name":"UnknownStandardN","qualname":"::read::line::LineInstruction::UnknownStandardN","value":"LineInstruction::UnknownStandardN(constants::DwLns, R)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" An unknown standard opcode with multiple operands.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5659},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":481107,"byte_end":481118,"line_start":379,"line_end":379,"column_start":5,"column_end":16},"name":"EndSequence","qualname":"::read::line::LineInstruction::EndSequence","value":"LineInstruction::EndSequence","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" > [`LineInstruction::EndSequence`] sets the end_sequence register of the state\n > machine to “true” and appends a row to the matrix using the current\n > values of the state-machine registers. Then it resets the registers to\n > the initial values specified above (see Section 6.2.2). Every line\n > number program sequence must end with a DW_LNE_end_sequence instruction\n > which creates a row whose address is that of the byte after the last\n > target machine instruction of the sequence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5661},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":481628,"byte_end":481638,"line_start":389,"line_end":389,"column_start":5,"column_end":15},"name":"SetAddress","qualname":"::read::line::LineInstruction::SetAddress","value":"LineInstruction::SetAddress(u64)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" > The DW_LNE_set_address opcode takes a single relocatable address as an\n > operand. The size of the operand is the size of an address on the target\n > machine. It sets the address register to the value given by the\n > relocatable address and sets the op_index register to 0.\n >\n > All of the other line number program opcodes that affect the address\n > register add a delta to it. This instruction stores a relocatable value\n > into it instead.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5664},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":481792,"byte_end":481802,"line_start":393,"line_end":393,"column_start":5,"column_end":15},"name":"DefineFile","qualname":"::read::line::LineInstruction::DefineFile","value":"LineInstruction::DefineFile(FileEntry<R, Offset>)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" Defines a new source file in the line number program and appends it to\n the line number program header's list of source files.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5667},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":482000,"byte_end":482016,"line_start":398,"line_end":398,"column_start":5,"column_end":21},"name":"SetDiscriminator","qualname":"::read::line::LineInstruction::SetDiscriminator","value":"LineInstruction::SetDiscriminator(u64)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" \"The DW_LNE_set_discriminator opcode takes a single parameter, an\n unsigned LEB128 integer. It sets the discriminator register to the new\n value.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5670},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":482103,"byte_end":482118,"line_start":401,"line_end":401,"column_start":5,"column_end":20},"name":"UnknownExtended","qualname":"::read::line::LineInstruction::UnknownExtended","value":"LineInstruction::UnknownExtended(constants::DwLne, R)","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" An unknown extended opcode and the slice of its unparsed operands.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5612},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":476246,"byte_end":476261,"line_start":270,"line_end":270,"column_start":10,"column_end":25},"name":"LineInstruction","qualname":"::read::line::LineInstruction","value":"LineInstruction::{Special, Copy, AdvancePc, AdvanceLine, SetFile, SetColumn, NegateStatement, SetBasicBlock, ConstAddPc, FixedAddPc, SetPrologueEnd, SetEpilogueBegin, SetIsa, UnknownStandard0, UnknownStandard1, UnknownStandardN, EndSequence, SetAddress, DefineFile, SetDiscriminator, UnknownExtended}","parent":null,"children":[{"krate":0,"index":5615},{"krate":0,"index":5618},{"krate":0,"index":5620},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5629},{"krate":0,"index":5632},{"krate":0,"index":5634},{"krate":0,"index":5636},{"krate":0,"index":5638},{"krate":0,"index":5641},{"krate":0,"index":5643},{"krate":0,"index":5645},{"krate":0,"index":5648},{"krate":0,"index":5651},{"krate":0,"index":5655},{"krate":0,"index":5659},{"krate":0,"index":5661},{"krate":0,"index":5664},{"krate":0,"index":5667},{"krate":0,"index":5670}],"decl_id":null,"docs":" A parsed line number program instruction.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1074},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":489689,"byte_end":489700,"line_start":576,"line_end":576,"column_start":10,"column_end":21},"name":"OpcodesIter","qualname":"::read::line::OpcodesIter","value":"LineInstructions<R>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `OpcodesIter` has been renamed to `LineInstructions`.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"OpcodesIter has been renamed to LineInstructions, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":489588,"byte_end":489679,"line_start":575,"line_end":575,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":5700},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":489936,"byte_end":489952,"line_start":584,"line_end":584,"column_start":12,"column_end":28},"name":"LineInstructions","qualname":"::read::line::LineInstructions","value":"LineInstructions {  }","parent":null,"children":[{"krate":0,"index":5702}],"decl_id":null,"docs":" An iterator yielding parsed instructions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":490932,"byte_end":490948,"line_start":610,"line_end":610,"column_start":12,"column_end":28},"name":"next_instruction","qualname":"<LineInstructions<R>>::next_instruction","value":"fn (&mut self, header: &LineProgramHeader<R>) -> Result<Option<LineInstruction<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next instruction.","sig":null,"attributes":[{"value":"allow(clippy :: inline_always)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":490867,"byte_end":490898,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":490903,"byte_end":490920,"line_start":609,"line_end":609,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1082},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":491520,"byte_end":491533,"line_start":630,"line_end":630,"column_start":10,"column_end":23},"name":"LineNumberRow","qualname":"::read::line::LineNumberRow","value":"LineRow","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberRow` has been renamed to `LineRow`.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"LineNumberRow has been renamed to LineRow, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":491426,"byte_end":491510,"line_start":629,"line_end":629,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":5709},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":491754,"byte_end":491761,"line_start":636,"line_end":636,"column_start":12,"column_end":19},"name":"LineRow","qualname":"::read::line::LineRow","value":"LineRow {  }","parent":null,"children":[{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712},{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5721}],"decl_id":null,"docs":" A row in the line number program's resulting matrix.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":492108,"byte_end":492111,"line_start":653,"line_end":653,"column_start":12,"column_end":15},"name":"new","qualname":"<LineRow>::new","value":"fn <R> (header: &LineProgramHeader<R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a line number row in the initial state for the given program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":493201,"byte_end":493208,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"address","qualname":"<LineRow>::address","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"The program-counter value corresponding to a machine instruction\n generated by the compiler.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":493180,"byte_end":493189,"line_start":679,"line_end":679,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":493684,"byte_end":493692,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"op_index","qualname":"<LineRow>::op_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned integer representing the index of an operation within a VLIW\n > instruction. The index of the first operation is 0. For non-VLIW\n > architectures, this register will always be 0.\n >\n > The address and op_index registers, taken together, form an operation\n > pointer that can reference any individual operation with the\n > instruction stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":493663,"byte_end":493672,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":493884,"byte_end":493894,"line_start":699,"line_end":699,"column_start":12,"column_end":22},"name":"file_index","qualname":"<LineRow>::file_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating the identity of the source file\n corresponding to a machine instruction.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":493863,"byte_end":493872,"line_start":698,"line_end":698,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":494035,"byte_end":494039,"line_start":705,"line_end":705,"column_start":12,"column_end":16},"name":"file","qualname":"<LineRow>::file","value":"fn <'header, R> (&self, header: &'header LineProgramHeader<R>) -> Option<&'header FileEntry<R>>","parent":null,"children":[],"decl_id":null,"docs":" The source file corresponding to the current machine instruction.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":494014,"byte_end":494023,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":494446,"byte_end":494450,"line_start":716,"line_end":716,"column_start":12,"column_end":16},"name":"line","qualname":"<LineRow>::line","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating a source line number. Lines are numbered\n beginning at 1. The compiler may emit the value 0 in cases where an\n instruction cannot be attributed to any source line.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":494425,"byte_end":494434,"line_start":715,"line_end":715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":494835,"byte_end":494841,"line_start":728,"line_end":728,"column_start":12,"column_end":18},"name":"column","qualname":"<LineRow>::column","value":"fn (&self) -> ColumnType","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer indicating a column number within a source\n line. Columns are numbered beginning at 1. The value 0 is reserved to\n indicate that a statement begins at the “left edge” of the line.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":494814,"byte_end":494823,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":495293,"byte_end":495300,"line_start":741,"line_end":741,"column_start":12,"column_end":19},"name":"is_stmt","qualname":"<LineRow>::is_stmt","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current instruction is a recommended\n breakpoint location. A recommended breakpoint location is intended to\n “represent” a line, a statement and/or a semantically distinct subpart\n of a statement.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":495272,"byte_end":495281,"line_start":740,"line_end":740,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":495474,"byte_end":495485,"line_start":748,"line_end":748,"column_start":12,"column_end":23},"name":"basic_block","qualname":"<LineRow>::basic_block","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current instruction is the beginning of a\n basic block.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":495453,"byte_end":495462,"line_start":747,"line_end":747,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":495834,"byte_end":495846,"line_start":757,"line_end":757,"column_start":12,"column_end":24},"name":"end_sequence","qualname":"<LineRow>::end_sequence","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is that of the first byte\n after the end of a sequence of target machine instructions. end_sequence\n terminates a sequence of lines; therefore other information in the same\n row is not meaningful.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":495813,"byte_end":495822,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":496095,"byte_end":496107,"line_start":765,"line_end":765,"column_start":12,"column_end":24},"name":"prologue_end","qualname":"<LineRow>::prologue_end","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is one (of possibly many)\n where execution should be suspended for an entry breakpoint of a\n function.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":496074,"byte_end":496083,"line_start":764,"line_end":764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":496355,"byte_end":496369,"line_start":773,"line_end":773,"column_start":12,"column_end":26},"name":"epilogue_begin","qualname":"<LineRow>::epilogue_begin","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" \"A boolean indicating that the current address is one (of possibly many)\n where execution should be suspended for an exit breakpoint of a\n function.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":496334,"byte_end":496343,"line_start":772,"line_end":772,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":496876,"byte_end":496879,"line_start":786,"line_end":786,"column_start":12,"column_end":15},"name":"isa","qualname":"<LineRow>::isa","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Tag for the current instruction set architecture.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":496855,"byte_end":496864,"line_start":785,"line_end":785,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":497363,"byte_end":497376,"line_start":797,"line_end":797,"column_start":12,"column_end":25},"name":"discriminator","qualname":"<LineRow>::discriminator","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned integer identifying the block to which the current\n instruction belongs. Discriminator values are assigned arbitrarily by\n the DWARF producer and serve to distinguish among multiple blocks that\n may all be associated with the same source file, line, and column. Where\n only one block exists for a given source position, the discriminator\n value should be zero.\"\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":497342,"byte_end":497351,"line_start":796,"line_end":796,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":497632,"byte_end":497639,"line_start":806,"line_end":806,"column_start":12,"column_end":19},"name":"execute","qualname":"<LineRow>::execute","value":"fn <R, Program> (&mut self, instruction: LineInstruction<R>, program: &mut Program) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Execute the given instruction, and return true if a new row in the\n line number matrix needs to be generated.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":497611,"byte_end":497620,"line_start":805,"line_end":805,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":500756,"byte_end":500761,"line_start":912,"line_end":912,"column_start":12,"column_end":17},"name":"reset","qualname":"<LineRow>::reset","value":"fn <R> (&mut self, header: &LineProgramHeader<R>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Perform any reset that was required after copying the previous row.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":500735,"byte_end":500744,"line_start":911,"line_end":911,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5735},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":503731,"byte_end":503739,"line_start":991,"line_end":991,"column_start":5,"column_end":13},"name":"LeftEdge","qualname":"::read::line::ColumnType::LeftEdge","value":"ColumnType::LeftEdge","parent":{"krate":0,"index":5734},"children":[],"decl_id":null,"docs":" The `LeftEdge` means that the statement begins at the start of the new\n line.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5737},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":503795,"byte_end":503801,"line_start":993,"line_end":993,"column_start":5,"column_end":11},"name":"Column","qualname":"::read::line::ColumnType::Column","value":"ColumnType::Column(u64)","parent":{"krate":0,"index":5734},"children":[],"decl_id":null,"docs":" A column number, whose range begins at 1.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5734},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":503621,"byte_end":503631,"line_start":988,"line_end":988,"column_start":10,"column_end":20},"name":"ColumnType","qualname":"::read::line::ColumnType","value":"ColumnType::{LeftEdge, Column}","parent":null,"children":[{"krate":0,"index":5735},{"krate":0,"index":5737}],"decl_id":null,"docs":" The type of column that a row is referring to.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1113},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":503988,"byte_end":504006,"line_start":998,"line_end":998,"column_start":10,"column_end":28},"name":"LineNumberSequence","qualname":"::read::line::LineNumberSequence","value":"LineSequence<R>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberSequence` has been renamed to `LineSequence`.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"LineNumberSequence has been renamed to LineSequence, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":503884,"byte_end":503978,"line_start":997,"line_end":997,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":5760},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":504273,"byte_end":504285,"line_start":1004,"line_end":1004,"column_start":12,"column_end":24},"name":"LineSequence","qualname":"::read::line::LineSequence","value":"LineSequence { start, end }","parent":null,"children":[{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764}],"decl_id":null,"docs":" A sequence within a line number program.  A sequence, as defined in section\n 6.2.5 of the standard, is a linear subset of a line number program within\n which addresses are monotonically increasing.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5762},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":504406,"byte_end":504411,"line_start":1007,"line_end":1007,"column_start":9,"column_end":14},"name":"start","qualname":"::read::line::LineSequence::start","value":"u64","parent":{"krate":0,"index":5760},"children":[],"decl_id":null,"docs":" The first address that is covered by this sequence within the line number\n program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5763},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":504531,"byte_end":504534,"line_start":1010,"line_end":1010,"column_start":9,"column_end":12},"name":"end","qualname":"::read::line::LineSequence::end","value":"u64","parent":{"krate":0,"index":5760},"children":[],"decl_id":null,"docs":" The first address that is *not* covered by this sequence within the line\n number program.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1115},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":504786,"byte_end":504809,"line_start":1018,"line_end":1018,"column_start":10,"column_end":33},"name":"LineNumberProgramHeader","qualname":"::read::line::LineNumberProgramHeader","value":"LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `LineNumberProgramHeader` has been renamed to `LineProgramHeader`.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"LineNumberProgramHeader has been renamed to LineProgramHeader, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":504666,"byte_end":504776,"line_start":1015,"line_end":1017,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":5771},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":505022,"byte_end":505039,"line_start":1023,"line_end":1023,"column_start":12,"column_end":29},"name":"LineProgramHeader","qualname":"::read::line::LineProgramHeader","value":"LineProgramHeader {  }","parent":null,"children":[{"krate":0,"index":5774},{"krate":0,"index":5775},{"krate":0,"index":5776},{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5779},{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5782},{"krate":0,"index":5783},{"krate":0,"index":5784},{"krate":0,"index":5785},{"krate":0,"index":5786},{"krate":0,"index":5787}],"decl_id":null,"docs":" A header for a line number program in the `.debug_line` section, as defined\n in section 6.2.4 of the standard.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":507113,"byte_end":507119,"line_start":1082,"line_end":1082,"column_start":12,"column_end":18},"name":"offset","qualname":"<LineProgramHeader<R, Offset>>::offset","value":"fn (&self) -> DebugLineOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the offset of the line number program header in the `.debug_line` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":507325,"byte_end":507336,"line_start":1088,"line_end":1088,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<LineProgramHeader<R, Offset>>::unit_length","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the line number program and header, not including\n the length of the encoded length itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":507473,"byte_end":507481,"line_start":1093,"line_end":1093,"column_start":12,"column_end":20},"name":"encoding","qualname":"<LineProgramHeader<R, Offset>>::encoding","value":"fn (&self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this header's line program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":507598,"byte_end":507605,"line_start":1098,"line_end":1098,"column_start":12,"column_end":19},"name":"version","qualname":"<LineProgramHeader<R, Offset>>::version","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the version of this header's line program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":507799,"byte_end":507812,"line_start":1104,"line_end":1104,"column_start":12,"column_end":25},"name":"header_length","qualname":"<LineProgramHeader<R, Offset>>::header_length","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the encoded line number program header, not including\n the length of the encoded length itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":507939,"byte_end":507951,"line_start":1109,"line_end":1109,"column_start":12,"column_end":24},"name":"address_size","qualname":"<LineProgramHeader<R, Offset>>::address_size","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the size in bytes of a target machine address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":508089,"byte_end":508095,"line_start":1114,"line_end":1114,"column_start":12,"column_end":18},"name":"format","qualname":"<LineProgramHeader<R, Offset>>::format","value":"fn (&self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this line program is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":508235,"byte_end":508248,"line_start":1119,"line_end":1119,"column_start":12,"column_end":25},"name":"line_encoding","qualname":"<LineProgramHeader<R, Offset>>::line_encoding","value":"fn (&self) -> LineEncoding","parent":null,"children":[],"decl_id":null,"docs":" Get the line encoding parameters for this header's line program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":508426,"byte_end":508452,"line_start":1125,"line_end":1125,"column_start":12,"column_end":38},"name":"minimum_instruction_length","qualname":"<LineProgramHeader<R, Offset>>::minimum_instruction_length","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum instruction length any instruction in this header's line\n program may have.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":508650,"byte_end":508684,"line_start":1131,"line_end":1131,"column_start":12,"column_end":46},"name":"maximum_operations_per_instruction","qualname":"<LineProgramHeader<R, Offset>>::maximum_operations_per_instruction","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the maximum number of operations each instruction in this header's\n line program may have.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":508876,"byte_end":508891,"line_start":1137,"line_end":1137,"column_start":12,"column_end":27},"name":"default_is_stmt","qualname":"<LineProgramHeader<R, Offset>>::default_is_stmt","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get the default value of the `is_stmt` register for this header's line\n program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":509028,"byte_end":509037,"line_start":1142,"line_end":1142,"column_start":12,"column_end":21},"name":"line_base","qualname":"<LineProgramHeader<R, Offset>>::line_base","value":"fn (&self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Get the line base for this header's line program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":509167,"byte_end":509177,"line_start":1147,"line_end":1147,"column_start":12,"column_end":22},"name":"line_range","qualname":"<LineProgramHeader<R, Offset>>::line_range","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the line range for this header's line program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":509305,"byte_end":509316,"line_start":1152,"line_end":1152,"column_start":12,"column_end":23},"name":"opcode_base","qualname":"<LineProgramHeader<R, Offset>>::opcode_base","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get opcode base for this header's line program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":509487,"byte_end":509510,"line_start":1158,"line_end":1158,"column_start":12,"column_end":35},"name":"standard_opcode_lengths","qualname":"<LineProgramHeader<R, Offset>>::standard_opcode_lengths","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" An array of `u8` that specifies the number of LEB128 operands for\n each of the standard opcodes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":509627,"byte_end":509649,"line_start":1163,"line_end":1163,"column_start":12,"column_end":34},"name":"directory_entry_format","qualname":"<LineProgramHeader<R, Offset>>::directory_entry_format","value":"fn (&self) -> &[FileEntryFormat]","parent":null,"children":[],"decl_id":null,"docs":" Get the format of a directory entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":509992,"byte_end":510011,"line_start":1171,"line_end":1171,"column_start":12,"column_end":31},"name":"include_directories","qualname":"<LineProgramHeader<R, Offset>>::include_directories","value":"fn (&self) -> &[AttributeValue<R, Offset>]","parent":null,"children":[],"decl_id":null,"docs":" Get the set of include directories for this header's line program.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":510257,"byte_end":510266,"line_start":1178,"line_end":1178,"column_start":12,"column_end":21},"name":"directory","qualname":"<LineProgramHeader<R, Offset>>::directory","value":"fn (&self, directory: u64) -> Option<AttributeValue<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" The include directory with the given directory index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":510783,"byte_end":510805,"line_start":1192,"line_end":1192,"column_start":12,"column_end":34},"name":"file_name_entry_format","qualname":"<LineProgramHeader<R, Offset>>::file_name_entry_format","value":"fn (&self) -> &[FileEntryFormat]","parent":null,"children":[],"decl_id":null,"docs":" Get the format of a file name entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":511067,"byte_end":511085,"line_start":1200,"line_end":1200,"column_start":12,"column_end":30},"name":"file_has_timestamp","qualname":"<LineProgramHeader<R, Offset>>::file_has_timestamp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file entries may have valid timestamps.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":511474,"byte_end":511487,"line_start":1212,"line_end":1212,"column_start":12,"column_end":25},"name":"file_has_size","qualname":"<LineProgramHeader<R, Offset>>::file_has_size","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file entries may have valid sizes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":511783,"byte_end":511795,"line_start":1221,"line_end":1221,"column_start":12,"column_end":24},"name":"file_has_md5","qualname":"<LineProgramHeader<R, Offset>>::file_has_md5","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the file name entry format contains an MD5 field.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":512030,"byte_end":512040,"line_start":1228,"line_end":1228,"column_start":12,"column_end":22},"name":"file_names","qualname":"<LineProgramHeader<R, Offset>>::file_names","value":"fn (&self) -> &[FileEntry<R, Offset>]","parent":null,"children":[],"decl_id":null,"docs":" Get the list of source files that appear in this header's line program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":512356,"byte_end":512360,"line_start":1237,"line_end":1237,"column_start":12,"column_end":16},"name":"file","qualname":"<LineProgramHeader<R, Offset>>::file","value":"fn (&self, file: u64) -> Option<&FileEntry<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" The source file with the given file index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":513426,"byte_end":513441,"line_start":1268,"line_end":1268,"column_start":12,"column_end":27},"name":"raw_program_buf","qualname":"<LineProgramHeader<R, Offset>>::raw_program_buf","value":"fn (&self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the raw, un-parsed `EndianSlice` containing this header's line number\n program.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":513614,"byte_end":513626,"line_start":1274,"line_end":1274,"column_start":12,"column_end":24},"name":"instructions","qualname":"<LineProgramHeader<R, Offset>>::instructions","value":"fn (&self) -> LineInstructions<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the instructions in this header's line number program, parsing\n them as we go.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1153},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":518554,"byte_end":518581,"line_start":1426,"line_end":1426,"column_start":10,"column_end":37},"name":"IncompleteLineNumberProgram","qualname":"::read::line::IncompleteLineNumberProgram","value":"IncompleteLineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `IncompleteLineNumberProgram` has been renamed to `IncompleteLineProgram`.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"IncompleteLineNumberProgram has been renamed to IncompleteLineProgram, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":518426,"byte_end":518544,"line_start":1423,"line_end":1425,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":5811},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":518743,"byte_end":518764,"line_start":1430,"line_end":1430,"column_start":12,"column_end":33},"name":"IncompleteLineProgram","qualname":"::read::line::IncompleteLineProgram","value":"IncompleteLineProgram {  }","parent":null,"children":[{"krate":0,"index":5814}],"decl_id":null,"docs":" A line number program that has not been run to completion.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":519096,"byte_end":519102,"line_start":1444,"line_end":1444,"column_start":12,"column_end":18},"name":"header","qualname":"<IncompleteLineProgram<R, Offset>>::header","value":"fn (&self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `LineProgramHeader` for this program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":519307,"byte_end":519311,"line_start":1450,"line_end":1450,"column_start":12,"column_end":16},"name":"rows","qualname":"<IncompleteLineProgram<R, Offset>>::rows","value":"fn (self) -> OneShotLineRows<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LineRows` for executing this program to iterate\n over rows in the line information matrix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":520301,"byte_end":520310,"line_start":1475,"line_end":1475,"column_start":12,"column_end":21},"name":"sequences","qualname":"<IncompleteLineProgram<R, Offset>>::sequences","value":"fn (self) -> Result<(CompleteLineProgram<R, Offset>, Vec<LineSequence<R>>)>","parent":null,"children":[],"decl_id":null,"docs":" Execute the line number program, completing the `IncompleteLineProgram`\n into a `CompleteLineProgram` and producing an array of sequences within\n the line number program that can later be used with\n `CompleteLineProgram::resume_from`.","sig":null,"attributes":[{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":520256,"byte_end":520289,"line_start":1474,"line_end":1474,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":521865,"byte_end":521890,"line_start":1519,"line_end":1519,"column_start":10,"column_end":35},"name":"CompleteLineNumberProgram","qualname":"::read::line::CompleteLineNumberProgram","value":"CompleteLineProgram<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated. `CompleteLineNumberProgram` has been renamed to `CompleteLineProgram`.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"CompleteLineNumberProgram has been renamed to CompleteLineProgram, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":521741,"byte_end":521855,"line_start":1516,"line_end":1518,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":5838},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":522057,"byte_end":522076,"line_start":1523,"line_end":1523,"column_start":12,"column_end":31},"name":"CompleteLineProgram","qualname":"::read::line::CompleteLineProgram","value":"CompleteLineProgram {  }","parent":null,"children":[{"krate":0,"index":5841}],"decl_id":null,"docs":" A line number program that has previously been run to completion.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":522406,"byte_end":522412,"line_start":1537,"line_end":1537,"column_start":12,"column_end":18},"name":"header","qualname":"<CompleteLineProgram<R, Offset>>::header","value":"fn (&self) -> &LineProgramHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `LineProgramHeader` for this program.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":523277,"byte_end":523288,"line_start":1562,"line_end":1562,"column_start":12,"column_end":23},"name":"resume_from","qualname":"<CompleteLineProgram<R, Offset>>::resume_from","value":"fn <'program> (&'program self, sequence: &LineSequence<R>) -> ResumedLineRows<'program, R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LineRows` for executing the subset of the line\n number program identified by 'sequence' and  generating the line information\n matrix.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5865},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":523581,"byte_end":523590,"line_start":1572,"line_end":1572,"column_start":12,"column_end":21},"name":"FileEntry","qualname":"::read::line::FileEntry","value":"FileEntry {  }","parent":null,"children":[{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872}],"decl_id":null,"docs":" An entry in the `LineProgramHeader`'s `file_names` set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":524773,"byte_end":524782,"line_start":1611,"line_end":1611,"column_start":12,"column_end":21},"name":"path_name","qualname":"<FileEntry<R, Offset>>::path_name","value":"fn (&self) -> AttributeValue<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" > A slice containing the full or relative path name of\n > a source file. If the entry contains a file name or a relative path\n > name, the file is located relative to either the compilation directory\n > (as specified by the DW_AT_comp_dir attribute given in the compilation\n > unit) or one of the directories in the include_directories section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":525447,"byte_end":525462,"line_start":1626,"line_end":1626,"column_start":12,"column_end":27},"name":"directory_index","qualname":"<FileEntry<R, Offset>>::directory_index","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" > An unsigned LEB128 number representing the directory index of the\n > directory in which the file was found.\n >\n > ...\n >\n > The directory index represents an entry in the include_directories\n > section of the line number program header. The index is 0 if the file\n > was found in the current directory of the compilation, 1 if it was found\n > in the first directory in the include_directories section, and so\n > on. The directory index is ignored for file names that represent full\n > path names.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":525647,"byte_end":525656,"line_start":1633,"line_end":1633,"column_start":12,"column_end":21},"name":"directory","qualname":"<FileEntry<R, Offset>>::directory","value":"fn (&self, header: &LineProgramHeader<R>) -> Option<AttributeValue<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Get this file's directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":525904,"byte_end":525913,"line_start":1639,"line_end":1639,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<FileEntry<R, Offset>>::timestamp","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The implementation-defined time of last modification of the file,\n or 0 if not available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":526160,"byte_end":526177,"line_start":1647,"line_end":1647,"column_start":12,"column_end":29},"name":"last_modification","qualname":"<FileEntry<R, Offset>>::last_modification","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned LEB128 number representing the time of last modification of\n the file, or 0 if not available.\"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":526297,"byte_end":526301,"line_start":1652,"line_end":1652,"column_start":12,"column_end":16},"name":"size","qualname":"<FileEntry<R, Offset>>::size","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The size of the file in bytes, or 0 if not available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":526533,"byte_end":526539,"line_start":1660,"line_end":1660,"column_start":12,"column_end":18},"name":"length","qualname":"<FileEntry<R, Offset>>::length","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" \"An unsigned LEB128 number representing the length in bytes of the file,\n or 0 if not available.\"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":526723,"byte_end":526726,"line_start":1667,"line_end":1667,"column_start":12,"column_end":15},"name":"md5","qualname":"<FileEntry<R, Offset>>::md5","value":"fn (&self) -> &[u8; 16]","parent":null,"children":[],"decl_id":null,"docs":" A 16-byte MD5 digest of the file contents.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5901},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":526906,"byte_end":526921,"line_start":1674,"line_end":1674,"column_start":12,"column_end":27},"name":"FileEntryFormat","qualname":"::read::line::FileEntryFormat","value":"FileEntryFormat { content_type, form }","parent":null,"children":[{"krate":0,"index":5902},{"krate":0,"index":5903}],"decl_id":null,"docs":" The format of a component of an include directory or file name entry.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5902},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":527002,"byte_end":527014,"line_start":1676,"line_end":1676,"column_start":9,"column_end":21},"name":"content_type","qualname":"::read::line::FileEntryFormat::content_type","value":"constants::DwLnct","parent":{"krate":0,"index":5901},"children":[],"decl_id":null,"docs":" The type of information that is represented by the component.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5903},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":527094,"byte_end":527098,"line_start":1679,"line_end":1679,"column_start":9,"column_end":13},"name":"form","qualname":"::read::line::FileEntryFormat::form","value":"constants::DwForm","parent":{"krate":0,"index":5901},"children":[],"decl_id":null,"docs":" The encoding form of the component value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5916},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":573521,"byte_end":573529,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"DebugLoc","qualname":"::read::loclists::DebugLoc","value":"DebugLoc {  }","parent":null,"children":[{"krate":0,"index":5918}],"decl_id":null,"docs":" The raw contents of the `.debug_loc` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":574241,"byte_end":574244,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLoc<EndianSlice>>::new","value":"fn (section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLoc` instance from the data in the `.debug_loc`\n section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5930},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":574773,"byte_end":574786,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"DebugLocLists","qualname":"::read::loclists::DebugLocLists","value":"DebugLocLists {  }","parent":null,"children":[{"krate":0,"index":5932}],"decl_id":null,"docs":" The `DebugLocLists` struct represents the DWARF data\n found in the `.debug_loclists` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":575532,"byte_end":575535,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugLocLists<EndianSlice>>::new","value":"fn (section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugLocLists` instance from the data in the `.debug_loclists`\n section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5952},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":577550,"byte_end":577563,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"LocationLists","qualname":"::read::loclists::LocationLists","value":"LocationLists {  }","parent":null,"children":[{"krate":0,"index":5954},{"krate":0,"index":5955}],"decl_id":null,"docs":" The DWARF data found in `.debug_loc` and `.debug_loclists` sections.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":577799,"byte_end":577802,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<LocationLists<R>>::new","value":"fn (debug_loc: DebugLoc<R>, debug_loclists: DebugLocLists<R>) -> LocationLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LocationLists` instance from the data in the `.debug_loc` and\n `.debug_loclists` sections.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":578638,"byte_end":578644,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"borrow","qualname":"<LocationLists<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> LocationLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocationLists` that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":579460,"byte_end":579469,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"locations","qualname":"<LocationLists<R>>::locations","value":"fn (&self, offset: LocationListsOffset<R::Offset>, unit_encoding: Encoding, base_address: u64, debug_addr: &DebugAddr<R>, debug_addr_base: DebugAddrBase<R::Offset>) -> Result<LocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `LocationListEntry`s starting at the given offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":580338,"byte_end":580351,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"raw_locations","qualname":"<LocationLists<R>>::raw_locations","value":"fn (&self, offset: LocationListsOffset<R::Offset>, unit_encoding: Encoding) -> Result<RawLocListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the raw `LocationListEntry`s starting at the given offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":581095,"byte_end":581105,"line_start":264,"line_end":264,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<LocationLists<R>>::get_offset","value":"fn (&self, unit_encoding: Encoding, base: DebugLocListsBase<R::Offset>, index: DebugLocListsIndex<R::Offset>) -> Result<LocationListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_loclists` offset at the given `base` and `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":581752,"byte_end":581768,"line_start":282,"line_end":282,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<LocationLists<R>>::lookup_offset_id","value":"fn (&self, id: ReaderOffsetId) -> Option<(SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5967},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":582149,"byte_end":582163,"line_start":294,"line_end":294,"column_start":12,"column_end":26},"name":"RawLocListIter","qualname":"::read::loclists::RawLocListIter","value":"RawLocListIter {  }","parent":null,"children":[{"krate":0,"index":5969},{"krate":0,"index":5970}],"decl_id":null,"docs":" A raw iterator over a location list.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5976},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":582364,"byte_end":582383,"line_start":303,"line_end":303,"column_start":5,"column_end":24},"name":"AddressOrOffsetPair","qualname":"::read::loclists::RawLocListEntry::AddressOrOffsetPair","value":"RawLocListEntry::AddressOrOffsetPair { begin, end, data }","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" A location from DWARF version <= 4.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5980},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":582633,"byte_end":582644,"line_start":312,"line_end":312,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::read::loclists::RawLocListEntry::BaseAddress","value":"RawLocListEntry::BaseAddress { addr }","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" DW_LLE_base_address\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5982},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":582731,"byte_end":582743,"line_start":317,"line_end":317,"column_start":5,"column_end":17},"name":"BaseAddressx","qualname":"::read::loclists::RawLocListEntry::BaseAddressx","value":"RawLocListEntry::BaseAddressx { addr }","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" DW_LLE_base_addressx\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5984},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":582850,"byte_end":582860,"line_start":322,"line_end":322,"column_start":5,"column_end":15},"name":"StartxEndx","qualname":"::read::loclists::RawLocListEntry::StartxEndx","value":"RawLocListEntry::StartxEndx { begin, end, data }","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" DW_LLE_startx_endx\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5988},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":583089,"byte_end":583101,"line_start":331,"line_end":331,"column_start":5,"column_end":17},"name":"StartxLength","qualname":"::read::loclists::RawLocListEntry::StartxLength","value":"RawLocListEntry::StartxLength { begin, length, data }","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" DW_LLE_startx_length\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5992},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":583312,"byte_end":583322,"line_start":340,"line_end":340,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::read::loclists::RawLocListEntry::OffsetPair","value":"RawLocListEntry::OffsetPair { begin, end, data }","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" DW_LLE_offset_pair\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5996},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":583510,"byte_end":583525,"line_start":349,"line_end":349,"column_start":5,"column_end":20},"name":"DefaultLocation","qualname":"::read::loclists::RawLocListEntry::DefaultLocation","value":"RawLocListEntry::DefaultLocation { data }","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" DW_LLE_default_location\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5998},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":583616,"byte_end":583624,"line_start":354,"line_end":354,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::read::loclists::RawLocListEntry::StartEnd","value":"RawLocListEntry::StartEnd { begin, end, data }","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" DW_LLE_start_end\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6002},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":583808,"byte_end":583819,"line_start":363,"line_end":363,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::read::loclists::RawLocListEntry::StartLength","value":"RawLocListEntry::StartLength { begin, length, data }","parent":{"krate":0,"index":5974},"children":[],"decl_id":null,"docs":" DW_LLE_start_length\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5974},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":582287,"byte_end":582302,"line_start":301,"line_end":301,"column_start":10,"column_end":25},"name":"RawLocListEntry","qualname":"::read::loclists::RawLocListEntry","value":"RawLocListEntry::{AddressOrOffsetPair, BaseAddress, BaseAddressx, StartxEndx, StartxLength, OffsetPair, DefaultLocation, StartEnd, StartLength}","parent":null,"children":[{"krate":0,"index":5976},{"krate":0,"index":5980},{"krate":0,"index":5982},{"krate":0,"index":5984},{"krate":0,"index":5988},{"krate":0,"index":5992},{"krate":0,"index":5996},{"krate":0,"index":5998},{"krate":0,"index":6002}],"decl_id":null,"docs":" A raw entry in .debug_loclists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":587129,"byte_end":587132,"line_start":442,"line_end":442,"column_start":12,"column_end":15},"name":"new","qualname":"<RawLocListIter<R>>::new","value":"fn (input: R, encoding: Encoding) -> RawLocListIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RawLocListIter`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":587298,"byte_end":587302,"line_start":447,"line_end":447,"column_start":12,"column_end":16},"name":"next","qualname":"<RawLocListIter<R>>::next","value":"fn (&mut self) -> Result<Option<RawLocListEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next location.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6012},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":588361,"byte_end":588372,"line_start":483,"line_end":483,"column_start":12,"column_end":23},"name":"LocListIter","qualname":"::read::loclists::LocListIter","value":"LocListIter {  }","parent":null,"children":[{"krate":0,"index":6014},{"krate":0,"index":6015},{"krate":0,"index":6016},{"krate":0,"index":6017}],"decl_id":null,"docs":" An iterator over a location list.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":589172,"byte_end":589176,"line_start":513,"line_end":513,"column_start":12,"column_end":16},"name":"next","qualname":"<LocListIter<R>>::next","value":"fn (&mut self) -> Result<Option<LocationListEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next location.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6021},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":592042,"byte_end":592059,"line_start":592,"line_end":592,"column_start":12,"column_end":29},"name":"LocationListEntry","qualname":"::read::loclists::LocationListEntry","value":"LocationListEntry { range, data }","parent":null,"children":[{"krate":0,"index":6023},{"krate":0,"index":6024}],"decl_id":null,"docs":" A location list entry from the `.debug_loc` or `.debug_loclists` sections.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6023},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":592140,"byte_end":592145,"line_start":594,"line_end":594,"column_start":9,"column_end":14},"name":"range","qualname":"::read::loclists::LocationListEntry::range","value":"read::rnglists::Range","parent":{"krate":0,"index":6021},"children":[],"decl_id":null,"docs":" The address range that this location is valid for.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6024},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":592222,"byte_end":592226,"line_start":597,"line_end":597,"column_start":9,"column_end":13},"name":"data","qualname":"::read::loclists::LocationListEntry::data","value":"read::op::Expression<R>","parent":{"krate":0,"index":6021},"children":[],"decl_id":null,"docs":" The data containing a single location description.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1294},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":621150,"byte_end":621156,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Header","qualname":"::read::lookup::LookupParser::Header","value":"type Header;","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" The type of the produced header.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1295},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":621207,"byte_end":621212,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"name":"Entry","qualname":"::read::lookup::LookupParser::Entry","value":"type Entry;","parent":{"krate":0,"index":1292},"children":[],"decl_id":null,"docs":" The type of the produced entry.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6112},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":627047,"byte_end":627054,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"UnitRef","qualname":"::read::op::DieReference::UnitRef","value":"DieReference::UnitRef(UnitOffset<T>)","parent":{"krate":0,"index":6110},"children":[],"decl_id":null,"docs":" A CU-relative reference.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6115},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":627113,"byte_end":627125,"line_start":17,"line_end":17,"column_start":5,"column_end":17},"name":"DebugInfoRef","qualname":"::read::op::DieReference::DebugInfoRef","value":"DieReference::DebugInfoRef(DebugInfoOffset<T>)","parent":{"krate":0,"index":6110},"children":[],"decl_id":null,"docs":" A section-relative reference.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6110},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":626984,"byte_end":626996,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"DieReference","qualname":"::read::op::DieReference","value":"DieReference::{UnitRef, DebugInfoRef}","parent":null,"children":[{"krate":0,"index":6112},{"krate":0,"index":6115}],"decl_id":null,"docs":" A reference to a DIE, either relative to the current CU or\n relative to the section.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6140},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":627890,"byte_end":627895,"line_start":38,"line_end":38,"column_start":5,"column_end":10},"name":"Deref","qualname":"::read::op::Operation::Deref","value":"Operation::Deref { base_type, size, space }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Dereference the topmost value of the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6144},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628267,"byte_end":628271,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Drop","qualname":"::read::op::Operation::Drop","value":"Operation::Drop","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Drop an item from the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6146},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628430,"byte_end":628434,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"Pick","qualname":"::read::op::Operation::Pick","value":"Operation::Pick { index }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Pick an item from the stack and push it on top of the stack.\n This operation handles `DW_OP_pick`, `DW_OP_dup`, and\n `DW_OP_over`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6148},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628576,"byte_end":628580,"line_start":57,"line_end":57,"column_start":5,"column_end":9},"name":"Swap","qualname":"::read::op::Operation::Swap","value":"Operation::Swap","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Swap the top two stack items.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6150},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628628,"byte_end":628631,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"Rot","qualname":"::read::op::Operation::Rot","value":"Operation::Rot","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Rotate the top three stack items.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6152},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628694,"byte_end":628697,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"Abs","qualname":"::read::op::Operation::Abs","value":"Operation::Abs","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Take the absolute value of the top of the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6154},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628761,"byte_end":628764,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"And","qualname":"::read::op::Operation::And","value":"Operation::And","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Bitwise `and` of the top two values on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6156},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628818,"byte_end":628821,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"Div","qualname":"::read::op::Operation::Div","value":"Operation::Div","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Divide the top two values on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6158},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628877,"byte_end":628882,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Minus","qualname":"::read::op::Operation::Minus","value":"Operation::Minus","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Subtract the top two values on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6160},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628940,"byte_end":628943,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"Mod","qualname":"::read::op::Operation::Mod","value":"Operation::Mod","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Modulus of the top two values on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6162},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":628999,"byte_end":629002,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"Mul","qualname":"::read::op::Operation::Mul","value":"Operation::Mul","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Multiply the top two values on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6164},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629045,"byte_end":629048,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"Neg","qualname":"::read::op::Operation::Neg","value":"Operation::Neg","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Negate the top of the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6166},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629101,"byte_end":629104,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"Not","qualname":"::read::op::Operation::Not","value":"Operation::Not","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Bitwise `not` of the top of the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6168},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629167,"byte_end":629169,"line_start":77,"line_end":77,"column_start":5,"column_end":7},"name":"Or","qualname":"::read::op::Operation::Or","value":"Operation::Or","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Bitwise `or` of the top two values on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6170},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629220,"byte_end":629224,"line_start":79,"line_end":79,"column_start":5,"column_end":9},"name":"Plus","qualname":"::read::op::Operation::Plus","value":"Operation::Plus","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Add the top two values on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6172},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629288,"byte_end":629300,"line_start":81,"line_end":81,"column_start":5,"column_end":17},"name":"PlusConstant","qualname":"::read::op::Operation::PlusConstant","value":"Operation::PlusConstant { value }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Add a constant to the topmost value on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6174},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629492,"byte_end":629495,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Shl","qualname":"::read::op::Operation::Shl","value":"Operation::Shl","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Logical left shift of the 2nd value on the stack by the number\n of bits given by the topmost value on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6176},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629622,"byte_end":629625,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"Shr","qualname":"::read::op::Operation::Shr","value":"Operation::Shr","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Right shift of the 2nd value on the stack by the number of\n bits given by the topmost value on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6178},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629762,"byte_end":629766,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Shra","qualname":"::read::op::Operation::Shra","value":"Operation::Shra","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Arithmetic left shift of the 2nd value on the stack by the\n number of bits given by the topmost value on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6180},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629830,"byte_end":629833,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"Xor","qualname":"::read::op::Operation::Xor","value":"Operation::Xor","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Bitwise `xor` of the top two values on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6182},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":629909,"byte_end":629912,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"Bra","qualname":"::read::op::Operation::Bra","value":"Operation::Bra { target }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Branch to the target location if the top of stack is nonzero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6184},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630058,"byte_end":630060,"line_start":102,"line_end":102,"column_start":5,"column_end":7},"name":"Eq","qualname":"::read::op::Operation::Eq","value":"Operation::Eq","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Compare the top two stack values for equality.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6186},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630119,"byte_end":630121,"line_start":104,"line_end":104,"column_start":5,"column_end":7},"name":"Ge","qualname":"::read::op::Operation::Ge","value":"Operation::Ge","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `>=`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6188},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630179,"byte_end":630181,"line_start":106,"line_end":106,"column_start":5,"column_end":7},"name":"Gt","qualname":"::read::op::Operation::Gt","value":"Operation::Gt","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6190},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630240,"byte_end":630242,"line_start":108,"line_end":108,"column_start":5,"column_end":7},"name":"Le","qualname":"::read::op::Operation::Le","value":"Operation::Le","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `<=`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6192},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630300,"byte_end":630302,"line_start":110,"line_end":110,"column_start":5,"column_end":7},"name":"Lt","qualname":"::read::op::Operation::Lt","value":"Operation::Lt","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `<`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6194},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630361,"byte_end":630363,"line_start":112,"line_end":112,"column_start":5,"column_end":7},"name":"Ne","qualname":"::read::op::Operation::Ne","value":"Operation::Ne","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Compare the top two stack values using `!=`.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6196},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630422,"byte_end":630426,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Skip","qualname":"::read::op::Operation::Skip","value":"Operation::Skip { target }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Unconditional branch to the target location.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6198},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630617,"byte_end":630633,"line_start":120,"line_end":120,"column_start":5,"column_end":21},"name":"UnsignedConstant","qualname":"::read::op::Operation::UnsignedConstant","value":"Operation::UnsignedConstant { value }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Push an unsigned constant value on the stack.  This handles multiple\n DWARF opcodes.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6200},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630795,"byte_end":630809,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"name":"SignedConstant","qualname":"::read::op::Operation::SignedConstant","value":"Operation::SignedConstant { value }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Push a signed constant value on the stack.  This handles multiple\n DWARF opcodes.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6202},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":630987,"byte_end":630995,"line_start":132,"line_end":132,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::op::Operation::Register","value":"Operation::Register { register }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Indicate that this piece's location is in the given register.\n Completes the piece or expression.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6204},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":631186,"byte_end":631200,"line_start":138,"line_end":138,"column_start":5,"column_end":19},"name":"RegisterOffset","qualname":"::read::op::Operation::RegisterOffset","value":"Operation::RegisterOffset { register, offset, base_type }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Find the value of the given register, add the offset, and then\n push the resulting sum on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6208},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":631572,"byte_end":631583,"line_start":148,"line_end":148,"column_start":5,"column_end":16},"name":"FrameOffset","qualname":"::read::op::Operation::FrameOffset","value":"Operation::FrameOffset { offset }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Compute the frame base (using `DW_AT_frame_base`), add the\n given offset, and then push the resulting sum on the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6210},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":631671,"byte_end":631674,"line_start":153,"line_end":153,"column_start":5,"column_end":8},"name":"Nop","qualname":"::read::op::Operation::Nop","value":"Operation::Nop","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" No operation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6212},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":631726,"byte_end":631743,"line_start":155,"line_end":155,"column_start":5,"column_end":22},"name":"PushObjectAddress","qualname":"::read::op::Operation::PushObjectAddress","value":"Operation::PushObjectAddress","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Push the object address on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6214},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":631898,"byte_end":631902,"line_start":159,"line_end":159,"column_start":5,"column_end":9},"name":"Call","qualname":"::read::op::Operation::Call","value":"Operation::Call { offset }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Evaluate a DWARF expression as a subroutine.  The expression\n comes from the `DW_AT_location` attribute of the indicated\n DIE.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6216},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":632071,"byte_end":632074,"line_start":165,"line_end":165,"column_start":5,"column_end":8},"name":"TLS","qualname":"::read::op::Operation::TLS","value":"Operation::TLS","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Compute the address of a thread-local variable and push it on\n the stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6218},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":632141,"byte_end":632153,"line_start":167,"line_end":167,"column_start":5,"column_end":17},"name":"CallFrameCFA","qualname":"::read::op::Operation::CallFrameCFA","value":"Operation::CallFrameCFA","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Compute the call frame CFA and push it on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6220},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":632186,"byte_end":632191,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Piece","qualname":"::read::op::Operation::Piece","value":"Operation::Piece { size_in_bits, bit_offset }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Terminate a piece.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6223},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":632635,"byte_end":632648,"line_start":180,"line_end":180,"column_start":5,"column_end":18},"name":"ImplicitValue","qualname":"::read::op::Operation::ImplicitValue","value":"Operation::ImplicitValue { data }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_implicit_value`.\n The object has no location, but has a known constant value.\n Completes the piece or expression.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6225},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":632879,"byte_end":632889,"line_start":187,"line_end":187,"column_start":5,"column_end":15},"name":"StackValue","qualname":"::read::op::Operation::StackValue","value":"Operation::StackValue","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_stack_value`.\n The object has no location, but its value is at the top of the stack.\n Completes the piece or expression.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6227},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":633108,"byte_end":633123,"line_start":192,"line_end":192,"column_start":5,"column_end":20},"name":"ImplicitPointer","qualname":"::read::op::Operation::ImplicitPointer","value":"Operation::ImplicitPointer { value, byte_offset }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_implicit_pointer`. The object is a pointer to\n a value which has no actual location, such as an implicit value or\n a stack value.\n Completes the piece or expression.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6230},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":633509,"byte_end":633519,"line_start":200,"line_end":200,"column_start":5,"column_end":15},"name":"EntryValue","qualname":"::read::op::Operation::EntryValue","value":"Operation::EntryValue { expression }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_entry_value`. Evaluate an expression at the entry to\n the current subprogram, and push it on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6232},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":633903,"byte_end":633915,"line_start":208,"line_end":208,"column_start":5,"column_end":17},"name":"ParameterRef","qualname":"::read::op::Operation::ParameterRef","value":"Operation::ParameterRef { offset }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_GNU_parameter_ref`. This represents a parameter that was\n optimized out. The offset points to the definition of the parameter, and is\n matched to the `DW_TAG_GNU_call_site_parameter` in the caller that also\n points to the same definition of the parameter.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6234},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":634092,"byte_end":634099,"line_start":214,"line_end":214,"column_start":5,"column_end":12},"name":"Address","qualname":"::read::op::Operation::Address","value":"Operation::Address { address }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_addr`.\n Relocate the address if needed, and push it on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6236},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":634327,"byte_end":634339,"line_start":221,"line_end":221,"column_start":5,"column_end":17},"name":"AddressIndex","qualname":"::read::op::Operation::AddressIndex","value":"Operation::AddressIndex { index }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_addrx`.\n Read the address at the given index in `.debug_addr, relocate the address if needed,\n and push it on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6238},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":634606,"byte_end":634619,"line_start":228,"line_end":228,"column_start":5,"column_end":18},"name":"ConstantIndex","qualname":"::read::op::Operation::ConstantIndex","value":"Operation::ConstantIndex { index }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_constx`.\n Read the address at the given index in `.debug_addr, and push it on the stack.\n Do not relocate the address.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6240},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":634857,"byte_end":634869,"line_start":234,"line_end":234,"column_start":5,"column_end":17},"name":"TypedLiteral","qualname":"::read::op::Operation::TypedLiteral","value":"Operation::TypedLiteral { base_type, value }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_const_type`.\n Interpret the value bytes as a constant of a given type, and push it on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6243},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":635134,"byte_end":635141,"line_start":242,"line_end":242,"column_start":5,"column_end":12},"name":"Convert","qualname":"::read::op::Operation::Convert","value":"Operation::Convert { base_type }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_convert`.\n Pop the top stack entry, convert it to a different type, and push it on the stack.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6245},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":635394,"byte_end":635405,"line_start":249,"line_end":249,"column_start":5,"column_end":16},"name":"Reinterpret","qualname":"::read::op::Operation::Reinterpret","value":"Operation::Reinterpret { base_type }","parent":{"krate":0,"index":6137},"children":[],"decl_id":null,"docs":" Represents `DW_OP_reinterpret`.\n Pop the top stack entry, reinterpret the bits in its value as a different type,\n and push it on the stack.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6137},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":627723,"byte_end":627732,"line_start":32,"line_end":32,"column_start":10,"column_end":19},"name":"Operation","qualname":"::read::op::Operation","value":"Operation::{Deref, Drop, Pick, Swap, Rot, Abs, And, Div, Minus, Mod, Mul, Neg, Not, Or, Plus, PlusConstant, Shl, Shr, Shra, Xor, Bra, Eq, Ge, Gt, Le, Lt, Ne, Skip, UnsignedConstant, SignedConstant, Register, RegisterOffset, FrameOffset, Nop, PushObjectAddress, Call, TLS, CallFrameCFA, Piece, ImplicitValue, StackValue, ImplicitPointer, EntryValue, ParameterRef, Address, AddressIndex, ConstantIndex, TypedLiteral, Convert, Reinterpret}","parent":null,"children":[{"krate":0,"index":6140},{"krate":0,"index":6144},{"krate":0,"index":6146},{"krate":0,"index":6148},{"krate":0,"index":6150},{"krate":0,"index":6152},{"krate":0,"index":6154},{"krate":0,"index":6156},{"krate":0,"index":6158},{"krate":0,"index":6160},{"krate":0,"index":6162},{"krate":0,"index":6164},{"krate":0,"index":6166},{"krate":0,"index":6168},{"krate":0,"index":6170},{"krate":0,"index":6172},{"krate":0,"index":6174},{"krate":0,"index":6176},{"krate":0,"index":6178},{"krate":0,"index":6180},{"krate":0,"index":6182},{"krate":0,"index":6184},{"krate":0,"index":6186},{"krate":0,"index":6188},{"krate":0,"index":6190},{"krate":0,"index":6192},{"krate":0,"index":6194},{"krate":0,"index":6196},{"krate":0,"index":6198},{"krate":0,"index":6200},{"krate":0,"index":6202},{"krate":0,"index":6204},{"krate":0,"index":6208},{"krate":0,"index":6210},{"krate":0,"index":6212},{"krate":0,"index":6214},{"krate":0,"index":6216},{"krate":0,"index":6218},{"krate":0,"index":6220},{"krate":0,"index":6223},{"krate":0,"index":6225},{"krate":0,"index":6227},{"krate":0,"index":6230},{"krate":0,"index":6232},{"krate":0,"index":6234},{"krate":0,"index":6236},{"krate":0,"index":6238},{"krate":0,"index":6240},{"krate":0,"index":6243},{"krate":0,"index":6245}],"decl_id":null,"docs":" A single decoded DWARF expression operation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6291},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":636010,"byte_end":636015,"line_start":272,"line_end":272,"column_start":5,"column_end":10},"name":"Empty","qualname":"::read::op::Location::Empty","value":"Location::Empty","parent":{"krate":0,"index":6288},"children":[],"decl_id":null,"docs":" The piece is empty.  Ordinarily this means the piece has been\n optimized away.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6293},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":636063,"byte_end":636071,"line_start":274,"line_end":274,"column_start":5,"column_end":13},"name":"Register","qualname":"::read::op::Location::Register","value":"Location::Register { register }","parent":{"krate":0,"index":6288},"children":[],"decl_id":null,"docs":" The piece is found in a register.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6295},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":636184,"byte_end":636191,"line_start":279,"line_end":279,"column_start":5,"column_end":12},"name":"Address","qualname":"::read::op::Location::Address","value":"Location::Address { address }","parent":{"krate":0,"index":6288},"children":[],"decl_id":null,"docs":" The piece is found in memory.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6297},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":636310,"byte_end":636315,"line_start":284,"line_end":284,"column_start":5,"column_end":10},"name":"Value","qualname":"::read::op::Location::Value","value":"Location::Value { value }","parent":{"krate":0,"index":6288},"children":[],"decl_id":null,"docs":" The piece has no location but its value is known.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6299},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":636431,"byte_end":636436,"line_start":289,"line_end":289,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::read::op::Location::Bytes","value":"Location::Bytes { value }","parent":{"krate":0,"index":6288},"children":[],"decl_id":null,"docs":" The piece is represented by some constant bytes.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6301},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":636563,"byte_end":636578,"line_start":294,"line_end":294,"column_start":5,"column_end":20},"name":"ImplicitPointer","qualname":"::read::op::Location::ImplicitPointer","value":"Location::ImplicitPointer { value, byte_offset }","parent":{"krate":0,"index":6288},"children":[],"decl_id":null,"docs":" The piece is a pointer to a value which has no actual location.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6288},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":635802,"byte_end":635810,"line_start":265,"line_end":265,"column_start":10,"column_end":18},"name":"Location","qualname":"::read::op::Location","value":"Location::{Empty, Register, Address, Value, Bytes, ImplicitPointer}","parent":null,"children":[{"krate":0,"index":6291},{"krate":0,"index":6293},{"krate":0,"index":6295},{"krate":0,"index":6297},{"krate":0,"index":6299},{"krate":0,"index":6301}],"decl_id":null,"docs":" A single location of a piece of the result of a DWARF expression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":636982,"byte_end":636990,"line_start":308,"line_end":308,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Location<R, Offset>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the piece is empty.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6323},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":637241,"byte_end":637246,"line_start":319,"line_end":319,"column_start":12,"column_end":17},"name":"Piece","qualname":"::read::op::Piece","value":"Piece { size_in_bits, bit_offset, location }","parent":null,"children":[{"krate":0,"index":6326},{"krate":0,"index":6327},{"krate":0,"index":6328}],"decl_id":null,"docs":" The description of a single piece of the result of a DWARF\n expression.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6326},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":637487,"byte_end":637499,"line_start":326,"line_end":326,"column_start":9,"column_end":21},"name":"size_in_bits","qualname":"::read::op::Piece::size_in_bits","value":"core::option::Option<u64>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" If given, the size of the piece in bits.  If `None`, there\n must be only one piece whose size is all of the object.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6327},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":638125,"byte_end":638135,"line_start":338,"line_end":338,"column_start":9,"column_end":19},"name":"bit_offset","qualname":"::read::op::Piece::bit_offset","value":"core::option::Option<u64>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" If given, the bit offset of the piece within the location.\n If the location is a `Location::Register` or `Location::Value`,\n then this offset is from the least significant bit end of\n the register or value.\n If the location is a `Location::Address` then the offset uses\n the bit numbering and direction conventions of the language\n and target system.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6328},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":638199,"byte_end":638207,"line_start":340,"line_end":340,"column_start":9,"column_end":17},"name":"location","qualname":"::read::op::Piece::location","value":"read::op::Location<R, Offset>","parent":{"krate":0,"index":6323},"children":[],"decl_id":null,"docs":" Where this piece is to be found.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":639246,"byte_end":639251,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"parse","qualname":"<Operation<R, Offset>>::parse","value":"fn (bytes: &mut R, encoding: Encoding) -> Result<Operation<R, Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single DWARF expression operation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6399},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":655771,"byte_end":655779,"line_start":786,"line_end":786,"column_start":5,"column_end":13},"name":"Complete","qualname":"::read::op::EvaluationResult::Complete","value":"EvaluationResult::Complete","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` is complete, and `Evaluation::result()` can be called.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6401},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":656001,"byte_end":656015,"line_start":790,"line_end":790,"column_start":5,"column_end":19},"name":"RequiresMemory","qualname":"::read::op::EvaluationResult::RequiresMemory","value":"EvaluationResult::RequiresMemory { address, size, space, base_type }","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from memory to proceed further.  Once the\n caller determines what value to provide it should resume the `Evaluation`\n by calling `Evaluation::resume_with_memory`.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6406},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":656676,"byte_end":656692,"line_start":804,"line_end":804,"column_start":5,"column_end":21},"name":"RequiresRegister","qualname":"::read::op::EvaluationResult::RequiresRegister","value":"EvaluationResult::RequiresRegister { register, base_type }","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from a register to proceed further.  Once\n the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_register`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6409},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":657256,"byte_end":657273,"line_start":815,"line_end":815,"column_start":5,"column_end":22},"name":"RequiresFrameBase","qualname":"::read::op::EvaluationResult::RequiresFrameBase","value":"EvaluationResult::RequiresFrameBase","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the frame base address to proceed further.  Once\n the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_frame_base`.  The frame\n base address is the address produced by the location description in the\n `DW_AT_frame_base` attribute of the current function.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6411},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":657489,"byte_end":657500,"line_start":819,"line_end":819,"column_start":5,"column_end":16},"name":"RequiresTls","qualname":"::read::op::EvaluationResult::RequiresTls","value":"EvaluationResult::RequiresTls(u64)","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs a value from TLS to proceed further.  Once the\n caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_tls`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6414},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":657723,"byte_end":657743,"line_start":823,"line_end":823,"column_start":5,"column_end":25},"name":"RequiresCallFrameCfa","qualname":"::read::op::EvaluationResult::RequiresCallFrameCfa","value":"EvaluationResult::RequiresCallFrameCfa","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the CFA to proceed further.  Once the caller\n determines what value to provide it should resume the `Evaluation` by\n calling `Evaluation::resume_with_call_frame_cfa`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6416},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":658001,"byte_end":658019,"line_start":828,"line_end":828,"column_start":5,"column_end":23},"name":"RequiresAtLocation","qualname":"::read::op::EvaluationResult::RequiresAtLocation","value":"EvaluationResult::RequiresAtLocation(DieReference<R::Offset>)","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the DWARF expression at the given location to\n proceed further.  Once the caller determines what value to provide it\n should resume the `Evaluation` by calling\n `Evaluation::resume_with_at_location`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6419},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":658337,"byte_end":658355,"line_start":833,"line_end":833,"column_start":5,"column_end":23},"name":"RequiresEntryValue","qualname":"::read::op::EvaluationResult::RequiresEntryValue","value":"EvaluationResult::RequiresEntryValue(Expression<R>)","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the value produced by evaluating a DWARF\n expression at the entry point of the current subprogram.  Once the\n caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_entry_value`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6422},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":658650,"byte_end":658670,"line_start":838,"line_end":838,"column_start":5,"column_end":25},"name":"RequiresParameterRef","qualname":"::read::op::EvaluationResult::RequiresParameterRef","value":"EvaluationResult::RequiresParameterRef(UnitOffset<R::Offset>)","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the value of the parameter at the given location\n in the current function's caller.  Once the caller determines what value\n to provide it should resume the `Evaluation` by calling\n `Evaluation::resume_with_parameter_ref`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6425},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":658932,"byte_end":658956,"line_start":842,"line_end":842,"column_start":5,"column_end":29},"name":"RequiresRelocatedAddress","qualname":"::read::op::EvaluationResult::RequiresRelocatedAddress","value":"EvaluationResult::RequiresRelocatedAddress(u64)","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs an address to be relocated to proceed further.\n Once the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_relocated_address`.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6428},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":659246,"byte_end":659268,"line_start":847,"line_end":847,"column_start":5,"column_end":27},"name":"RequiresIndexedAddress","qualname":"::read::op::EvaluationResult::RequiresIndexedAddress","value":"EvaluationResult::RequiresIndexedAddress { index, relocate }","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs an address from the `.debug_addr` section.\n This address may also need to be relocated.\n Once the caller determines what value to provide it should resume the\n `Evaluation` by calling `Evaluation::resume_with_indexed_address`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6431},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":659796,"byte_end":659812,"line_start":858,"line_end":858,"column_start":5,"column_end":21},"name":"RequiresBaseType","qualname":"::read::op::EvaluationResult::RequiresBaseType","value":"EvaluationResult::RequiresBaseType(UnitOffset<R::Offset>)","parent":{"krate":0,"index":6397},"children":[],"decl_id":null,"docs":" The `Evaluation` needs the `ValueType` for the base type DIE at\n the give unit offset.  Once the caller determines what value to provide it\n should resume the `Evaluation` by calling\n `Evaluation::resume_with_base_type`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6397},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":655657,"byte_end":655673,"line_start":784,"line_end":784,"column_start":10,"column_end":26},"name":"EvaluationResult","qualname":"::read::op::EvaluationResult","value":"EvaluationResult::{Complete, RequiresMemory, RequiresRegister, RequiresFrameBase, RequiresTls, RequiresCallFrameCfa, RequiresAtLocation, RequiresEntryValue, RequiresParameterRef, RequiresRelocatedAddress, RequiresIndexedAddress, RequiresBaseType}","parent":null,"children":[{"krate":0,"index":6399},{"krate":0,"index":6401},{"krate":0,"index":6406},{"krate":0,"index":6409},{"krate":0,"index":6411},{"krate":0,"index":6414},{"krate":0,"index":6416},{"krate":0,"index":6419},{"krate":0,"index":6422},{"krate":0,"index":6425},{"krate":0,"index":6428},{"krate":0,"index":6431}],"decl_id":null,"docs":" The state of an `Evaluation` after evaluating a DWARF expression.\n The evaluation is either `Complete`, or it requires more data\n to continue, as described by the variant.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6443},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":659967,"byte_end":659977,"line_start":863,"line_end":863,"column_start":12,"column_end":22},"name":"Expression","qualname":"::read::op::Expression","value":"","parent":null,"children":[],"decl_id":null,"docs":" The bytecode for a DWARF expression or location description.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":660848,"byte_end":660858,"line_start":885,"line_end":885,"column_start":12,"column_end":22},"name":"evaluation","qualname":"<Expression<R>>::evaluation","value":"fn (self, encoding: Encoding) -> Evaluation<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an evaluation for this expression.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":660827,"byte_end":660836,"line_start":884,"line_end":884,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":661029,"byte_end":661039,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"operations","qualname":"<Expression<R>>::operations","value":"fn (self, encoding: Encoding) -> OperationIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator for the operations in the expression.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6470},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":661274,"byte_end":661287,"line_start":900,"line_end":900,"column_start":12,"column_end":25},"name":"OperationIter","qualname":"::read::op::OperationIter","value":"OperationIter {  }","parent":null,"children":[{"krate":0,"index":6472},{"krate":0,"index":6473}],"decl_id":null,"docs":" An iterator for the operations in an expression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":661438,"byte_end":661442,"line_start":907,"line_end":907,"column_start":12,"column_end":16},"name":"next","qualname":"<OperationIter<R>>::next","value":"fn (&mut self) -> Result<Option<Operation<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Read the next operation in an expression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":661844,"byte_end":661855,"line_start":921,"line_end":921,"column_start":12,"column_end":23},"name":"offset_from","qualname":"<OperationIter<R>>::offset_from","value":"fn (&self, expression: &Expression<R>) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the current byte offset of the iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6482},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":663983,"byte_end":663993,"line_start":972,"line_end":972,"column_start":12,"column_end":22},"name":"Evaluation","qualname":"::read::op::Evaluation","value":"Evaluation {  }","parent":null,"children":[{"krate":0,"index":6484},{"krate":0,"index":6485},{"krate":0,"index":6486},{"krate":0,"index":6487},{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6494}],"decl_id":null,"docs":" A DWARF expression evaluator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":664888,"byte_end":664891,"line_start":1003,"line_end":1003,"column_start":12,"column_end":15},"name":"new","qualname":"<Evaluation<R>>::new","value":"fn (bytecode: R, encoding: Encoding) -> Evaluation<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DWARF expression evaluator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":666041,"byte_end":666058,"line_start":1034,"line_end":1034,"column_start":12,"column_end":29},"name":"set_initial_value","qualname":"<Evaluation<R>>::set_initial_value","value":"fn (&mut self, value: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set an initial value to be pushed on the DWARF expression\n evaluator's stack.  This can be used in cases like\n `DW_AT_vtable_elem_location`, which require a value on the\n stack before evaluation commences.  If no initial value is\n set, and the expression uses an opcode requiring the initial\n value, then evaluation will fail with an error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":666644,"byte_end":666662,"line_start":1049,"line_end":1049,"column_start":12,"column_end":30},"name":"set_object_address","qualname":"<Evaluation<R>>::set_object_address","value":"fn (&mut self, value: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the enclosing object's address, as used by\n `DW_OP_push_object_address`.  If no object address is set, and\n the expression uses an opcode requiring the object address,\n then evaluation will fail with an error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":667268,"byte_end":667286,"line_start":1062,"line_end":1062,"column_start":12,"column_end":30},"name":"set_max_iterations","qualname":"<Evaluation<R>>::set_max_iterations","value":"fn (&mut self, value: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of iterations to be allowed by the\n expression evaluator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":680784,"byte_end":680790,"line_start":1443,"line_end":1443,"column_start":12,"column_end":18},"name":"result","qualname":"<Evaluation<R>>::result","value":"fn (self) -> Vec<Piece<R>>","parent":null,"children":[],"decl_id":null,"docs":" Get the result of this `Evaluation`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":681381,"byte_end":681389,"line_start":1457,"line_end":1457,"column_start":12,"column_end":20},"name":"evaluate","qualname":"<Evaluation<R>>::evaluate","value":"fn (&mut self) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate a DWARF expression.  This method should only ever be called\n once.  If the returned `EvaluationResult` is not\n `EvaluationResult::Complete`, the caller should provide the required\n value and resume the evaluation by calling the appropriate resume_with\n method on `Evaluation`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":682563,"byte_end":682581,"line_start":1487,"line_end":1487,"column_start":12,"column_end":30},"name":"resume_with_memory","qualname":"<Evaluation<R>>::resume_with_memory","value":"fn (&mut self, value: Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided memory `value`.  This will apply\n the provided memory value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":683461,"byte_end":683481,"line_start":1508,"line_end":1508,"column_start":12,"column_end":32},"name":"resume_with_register","qualname":"<Evaluation<R>>::resume_with_register","value":"fn (&mut self, value: Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `register` value.  This will apply\n the provided register value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":684523,"byte_end":684545,"line_start":1531,"line_end":1531,"column_start":12,"column_end":34},"name":"resume_with_frame_base","qualname":"<Evaluation<R>>::resume_with_frame_base","value":"fn (&mut self, frame_base: u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `frame_base`.  This will\n apply the provided frame base value to the evaluation and continue\n evaluating opcodes until the evaluation is completed, reaches an error,\n or needs more information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":685479,"byte_end":685494,"line_start":1552,"line_end":1552,"column_start":12,"column_end":27},"name":"resume_with_tls","qualname":"<Evaluation<R>>::resume_with_tls","value":"fn (&mut self, value: u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `value`.  This will apply\n the provided TLS value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":686367,"byte_end":686393,"line_start":1573,"line_end":1573,"column_start":12,"column_end":38},"name":"resume_with_call_frame_cfa","qualname":"<Evaluation<R>>::resume_with_call_frame_cfa","value":"fn (&mut self, cfa: u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `cfa`.  This will\n apply the provided CFA value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":687271,"byte_end":687294,"line_start":1594,"line_end":1594,"column_start":12,"column_end":35},"name":"resume_with_at_location","qualname":"<Evaluation<R>>::resume_with_at_location","value":"fn (&mut self, mut bytes: R) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `bytes`.  This will\n continue processing the evaluation with the new expression provided\n until the evaluation is completed, reaches an error, or needs more\n information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":688433,"byte_end":688456,"line_start":1620,"line_end":1620,"column_start":12,"column_end":35},"name":"resume_with_entry_value","qualname":"<Evaluation<R>>::resume_with_entry_value","value":"fn (&mut self, entry_value: Value) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `entry_value`.  This will\n apply the provided entry value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":689367,"byte_end":689392,"line_start":1641,"line_end":1641,"column_start":12,"column_end":37},"name":"resume_with_parameter_ref","qualname":"<Evaluation<R>>::resume_with_parameter_ref","value":"fn (&mut self, parameter_value: u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `parameter_value`.  This will\n apply the provided parameter value to the evaluation and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":690386,"byte_end":690415,"line_start":1666,"line_end":1666,"column_start":12,"column_end":41},"name":"resume_with_relocated_address","qualname":"<Evaluation<R>>::resume_with_relocated_address","value":"fn (&mut self, address: u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided relocated `address`.  This will use the\n provided relocated address for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":691376,"byte_end":691403,"line_start":1688,"line_end":1688,"column_start":12,"column_end":39},"name":"resume_with_indexed_address","qualname":"<Evaluation<R>>::resume_with_indexed_address","value":"fn (&mut self, address: u64) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided indexed `address`.  This will use the\n provided indexed address for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":692332,"byte_end":692353,"line_start":1709,"line_end":1709,"column_start":12,"column_end":33},"name":"resume_with_base_type","qualname":"<Evaluation<R>>::resume_with_base_type","value":"fn (&mut self, base_type: ValueType) -> Result<EvaluationResult<R>>","parent":null,"children":[],"decl_id":null,"docs":" Resume the `Evaluation` with the provided `base_type`.  This will use the\n provided base type for the operation that required it, and continue evaluating\n opcodes until the evaluation is completed, reaches an error, or needs\n more information again.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6512},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":763276,"byte_end":763289,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PubNamesEntry","qualname":"::read::pubnames::PubNamesEntry","value":"PubNamesEntry {  }","parent":null,"children":[{"krate":0,"index":6514},{"krate":0,"index":6515},{"krate":0,"index":6516}],"decl_id":null,"docs":" A single parsed pubname.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":763503,"byte_end":763507,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<PubNamesEntry<R>>::name","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the name this entry refers to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":763689,"byte_end":763707,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"unit_header_offset","qualname":"<PubNamesEntry<R>>::unit_header_offset","value":"fn (&self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the .debug_info section for the header of the compilation unit\n which contains this name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":763915,"byte_end":763925,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"die_offset","qualname":"<PubNamesEntry<R>>::die_offset","value":"fn (&self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the compilation unit for the debugging information entry which\n has this name.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6523},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":764466,"byte_end":764479,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"DebugPubNames","qualname":"::read::pubnames::DebugPubNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugPubNames` struct represents the DWARF public names information\n found in the `.debug_pubnames` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":765257,"byte_end":765260,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugPubNames<EndianSlice>>::new","value":"fn (debug_pubnames_section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugPubNames` instance from the data in the `.debug_pubnames`\n section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":766011,"byte_end":766016,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugPubNames<R>>::items","value":"fn (&self) -> PubNamesEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the pubnames in the `.debug_pubnames` section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6533},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":766646,"byte_end":766663,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"PubNamesEntryIter","qualname":"::read::pubnames::PubNamesEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the pubnames from a `.debug_pubnames` section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":767184,"byte_end":767188,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"next","qualname":"<PubNamesEntryIter<R>>::next","value":"fn (&mut self) -> Result<Option<PubNamesEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next pubname.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6543},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":767877,"byte_end":767890,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PubTypesEntry","qualname":"::read::pubtypes::PubTypesEntry","value":"PubTypesEntry {  }","parent":null,"children":[{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6547}],"decl_id":null,"docs":" A single parsed pubtype.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":768116,"byte_end":768120,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<PubTypesEntry<R>>::name","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the type this entry refers to.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":768316,"byte_end":768334,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"unit_header_offset","qualname":"<PubTypesEntry<R>>::unit_header_offset","value":"fn (&self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the .debug_info section for the header of the compilation unit\n which contains the type with this name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":768552,"byte_end":768562,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"die_offset","qualname":"<PubTypesEntry<R>>::die_offset","value":"fn (&self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset into the compilation unit for the debugging information entry which\n the type with this name.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6554},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":769099,"byte_end":769112,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"DebugPubTypes","qualname":"::read::pubtypes::DebugPubTypes","value":"","parent":null,"children":[],"decl_id":null,"docs":" The `DebugPubTypes` struct represents the DWARF public types information\n found in the `.debug_info` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":769874,"byte_end":769877,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugPubTypes<EndianSlice>>::new","value":"fn (debug_pubtypes_section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugPubTypes` instance from the data in the `.debug_pubtypes`\n section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":770628,"byte_end":770633,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"items","qualname":"<DebugPubTypes<R>>::items","value":"fn (&self) -> PubTypesEntryIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the pubtypes in the `.debug_pubtypes` section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6564},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":771263,"byte_end":771280,"line_start":118,"line_end":118,"column_start":12,"column_end":29},"name":"PubTypesEntryIter","qualname":"::read::pubtypes::PubTypesEntryIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the pubtypes from a `.debug_pubtypes` section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":771801,"byte_end":771805,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"next","qualname":"<PubTypesEntryIter<R>>::next","value":"fn (&mut self) -> Result<Option<PubTypesEntry<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next pubtype.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6574},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":772610,"byte_end":772621,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"DebugRanges","qualname":"::read::rnglists::DebugRanges","value":"DebugRanges {  }","parent":null,"children":[{"krate":0,"index":6576}],"decl_id":null,"docs":" The raw contents of the `.debug_ranges` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":773360,"byte_end":773363,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugRanges<EndianSlice>>::new","value":"fn (section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugRanges` instance from the data in the `.debug_ranges`\n section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6588},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":773896,"byte_end":773909,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"DebugRngLists","qualname":"::read::rnglists::DebugRngLists","value":"DebugRngLists {  }","parent":null,"children":[{"krate":0,"index":6590}],"decl_id":null,"docs":" The `DebugRngLists` struct represents the contents of the\n `.debug_rnglists` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":774667,"byte_end":774670,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugRngLists<EndianSlice>>::new","value":"fn (section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugRngLists` instance from the data in the\n `.debug_rnglists` section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6610},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":776688,"byte_end":776698,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"RangeLists","qualname":"::read::rnglists::RangeLists","value":"RangeLists {  }","parent":null,"children":[{"krate":0,"index":6612},{"krate":0,"index":6613}],"decl_id":null,"docs":" The DWARF data found in `.debug_ranges` and `.debug_rnglists` sections.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":776937,"byte_end":776940,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<RangeLists<R>>::new","value":"fn (debug_ranges: DebugRanges<R>, debug_rnglists: DebugRngLists<R>) -> RangeLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `RangeLists` instance from the data in the `.debug_ranges` and\n `.debug_rnglists` sections.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":777770,"byte_end":777776,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"borrow","qualname":"<RangeLists<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> RangeLists<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `RangeLists` that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":778596,"byte_end":778602,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"ranges","qualname":"<RangeLists<R>>::ranges","value":"fn (&self, offset: RangeListsOffset<R::Offset>, unit_encoding: Encoding, base_address: u64, debug_addr: &DebugAddr<R>, debug_addr_base: DebugAddrBase<R::Offset>) -> Result<RngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `Range` list entries starting at the given offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":779458,"byte_end":779468,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"raw_ranges","qualname":"<RangeLists<R>>::raw_ranges","value":"fn (&self, offset: RangeListsOffset<R::Offset>, unit_encoding: Encoding) -> Result<RawRngListIter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the `RawRngListEntry`ies starting at the given offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":780321,"byte_end":780331,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<RangeLists<R>>::get_offset","value":"fn (&self, unit_encoding: Encoding, base: DebugRngListsBase<R::Offset>, index: DebugRngListsIndex<R::Offset>) -> Result<RangeListsOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_rnglists` offset at the given `base` and `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":780972,"byte_end":780988,"line_start":284,"line_end":284,"column_start":12,"column_end":28},"name":"lookup_offset_id","qualname":"<RangeLists<R>>::lookup_offset_id","value":"fn (&self, id: ReaderOffsetId) -> Option<(SectionId, R::Offset)>","parent":null,"children":[],"decl_id":null,"docs":" Call `Reader::lookup_offset_id` for each section, and return the first match.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6625},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":781375,"byte_end":781389,"line_start":296,"line_end":296,"column_start":12,"column_end":26},"name":"RawRngListIter","qualname":"::read::rnglists::RawRngListIter","value":"RawRngListIter {  }","parent":null,"children":[{"krate":0,"index":6627},{"krate":0,"index":6628}],"decl_id":null,"docs":" A raw iterator over an address range list.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6634},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":781578,"byte_end":781597,"line_start":305,"line_end":305,"column_start":5,"column_end":24},"name":"AddressOrOffsetPair","qualname":"::read::rnglists::RawRngListEntry::AddressOrOffsetPair","value":"RawRngListEntry::AddressOrOffsetPair { begin, end }","parent":{"krate":0,"index":6632},"children":[],"decl_id":null,"docs":" A range from DWARF version <= 4.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6637},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":781795,"byte_end":781806,"line_start":312,"line_end":312,"column_start":5,"column_end":16},"name":"BaseAddress","qualname":"::read::rnglists::RawRngListEntry::BaseAddress","value":"RawRngListEntry::BaseAddress { addr }","parent":{"krate":0,"index":6632},"children":[],"decl_id":null,"docs":" DW_RLE_base_address\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6639},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":781893,"byte_end":781905,"line_start":317,"line_end":317,"column_start":5,"column_end":17},"name":"BaseAddressx","qualname":"::read::rnglists::RawRngListEntry::BaseAddressx","value":"RawRngListEntry::BaseAddressx { addr }","parent":{"krate":0,"index":6632},"children":[],"decl_id":null,"docs":" DW_RLE_base_addressx\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6641},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":782004,"byte_end":782014,"line_start":322,"line_end":322,"column_start":5,"column_end":15},"name":"StartxEndx","qualname":"::read::rnglists::RawRngListEntry::StartxEndx","value":"RawRngListEntry::StartxEndx { begin, end }","parent":{"krate":0,"index":6632},"children":[],"decl_id":null,"docs":" DW_RLE_startx_endx\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6644},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":782175,"byte_end":782187,"line_start":329,"line_end":329,"column_start":5,"column_end":17},"name":"StartxLength","qualname":"::read::rnglists::RawRngListEntry::StartxLength","value":"RawRngListEntry::StartxLength { begin, length }","parent":{"krate":0,"index":6632},"children":[],"decl_id":null,"docs":" DW_RLE_startx_length\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6647},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":782338,"byte_end":782348,"line_start":336,"line_end":336,"column_start":5,"column_end":15},"name":"OffsetPair","qualname":"::read::rnglists::RawRngListEntry::OffsetPair","value":"RawRngListEntry::OffsetPair { begin, end }","parent":{"krate":0,"index":6632},"children":[],"decl_id":null,"docs":" DW_RLE_offset_pair\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6650},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":782477,"byte_end":782485,"line_start":343,"line_end":343,"column_start":5,"column_end":13},"name":"StartEnd","qualname":"::read::rnglists::RawRngListEntry::StartEnd","value":"RawRngListEntry::StartEnd { begin, end }","parent":{"krate":0,"index":6632},"children":[],"decl_id":null,"docs":" DW_RLE_start_end\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6653},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":782617,"byte_end":782628,"line_start":350,"line_end":350,"column_start":5,"column_end":16},"name":"StartLength","qualname":"::read::rnglists::RawRngListEntry::StartLength","value":"RawRngListEntry::StartLength { begin, length }","parent":{"krate":0,"index":6632},"children":[],"decl_id":null,"docs":" DW_RLE_start_length\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6632},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":781512,"byte_end":781527,"line_start":303,"line_end":303,"column_start":10,"column_end":25},"name":"RawRngListEntry","qualname":"::read::rnglists::RawRngListEntry","value":"RawRngListEntry::{AddressOrOffsetPair, BaseAddress, BaseAddressx, StartxEndx, StartxLength, OffsetPair, StartEnd, StartLength}","parent":null,"children":[{"krate":0,"index":6634},{"krate":0,"index":6637},{"krate":0,"index":6639},{"krate":0,"index":6641},{"krate":0,"index":6644},{"krate":0,"index":6647},{"krate":0,"index":6650},{"krate":0,"index":6653}],"decl_id":null,"docs":" A raw entry in .debug_rnglists\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":785394,"byte_end":785398,"line_start":416,"line_end":416,"column_start":12,"column_end":16},"name":"next","qualname":"<RawRngListIter<R>>::next","value":"fn (&mut self) -> Result<Option<RawRngListEntry<R::Offset>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6662},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":786465,"byte_end":786476,"line_start":452,"line_end":452,"column_start":12,"column_end":23},"name":"RngListIter","qualname":"::read::rnglists::RngListIter","value":"RngListIter {  }","parent":null,"children":[{"krate":0,"index":6664},{"krate":0,"index":6665},{"krate":0,"index":6666},{"krate":0,"index":6667}],"decl_id":null,"docs":" An iterator over an address range list.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":787273,"byte_end":787277,"line_start":482,"line_end":482,"column_start":12,"column_end":16},"name":"next","qualname":"<RngListIter<R>>::next","value":"fn (&mut self) -> Result<Option<Range>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next range.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6689},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":790749,"byte_end":790754,"line_start":582,"line_end":582,"column_start":12,"column_end":17},"name":"Range","qualname":"::read::rnglists::Range","value":"Range { begin, end }","parent":null,"children":[{"krate":0,"index":6690},{"krate":0,"index":6691}],"decl_id":null,"docs":" An address range from the `.debug_ranges` or `.debug_rnglists` sections.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6690},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":790809,"byte_end":790814,"line_start":584,"line_end":584,"column_start":9,"column_end":14},"name":"begin","qualname":"::read::rnglists::Range::begin","value":"u64","parent":{"krate":0,"index":6689},"children":[],"decl_id":null,"docs":" The beginning address of the range.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6691},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":790883,"byte_end":790886,"line_start":587,"line_end":587,"column_start":9,"column_end":12},"name":"end","qualname":"::read::rnglists::Range::end","value":"u64","parent":{"krate":0,"index":6689},"children":[],"decl_id":null,"docs":" The first address past the end of the range.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6707},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":814142,"byte_end":814150,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"DebugStr","qualname":"::read::str::DebugStr","value":"DebugStr {  }","parent":null,"children":[{"krate":0,"index":6709}],"decl_id":null,"docs":" The `DebugStr` struct represents the DWARF strings\n found in the `.debug_str` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":814861,"byte_end":814864,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugStr<EndianSlice>>::new","value":"fn (debug_str_section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugStr` instance from the data in the `.debug_str`\n section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":815575,"byte_end":815582,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_str","qualname":"<DebugStr<R>>::get_str","value":"fn (&self, offset: DebugStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Lookup a string from the `.debug_str` section by DebugStrOffset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":816434,"byte_end":816440,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugStr<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> DebugStr<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugStr` section that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6721},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":816996,"byte_end":817011,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"DebugStrOffsets","qualname":"::read::str::DebugStrOffsets","value":"DebugStrOffsets {  }","parent":null,"children":[{"krate":0,"index":6723}],"decl_id":null,"docs":" The raw contents of the `.debug_str_offsets` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":817964,"byte_end":817978,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"get_str_offset","qualname":"<DebugStrOffsets<R>>::get_str_offset","value":"fn (&self, format: Format, base: DebugStrOffsetsBase<R::Offset>, index: DebugStrOffsetsIndex<R::Offset>) -> Result<DebugStrOffset<R::Offset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `.debug_str` offset at the given `base` and `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":819090,"byte_end":819096,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugStrOffsets<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> DebugStrOffsets<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugStrOffsets` section that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6735},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":819692,"byte_end":819704,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"DebugLineStr","qualname":"::read::str::DebugLineStr","value":"DebugLineStr {  }","parent":null,"children":[{"krate":0,"index":6737}],"decl_id":null,"docs":" The `DebugLineStr` struct represents the DWARF strings\n found in the `.debug_line_str` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":819856,"byte_end":819863,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"get_str","qualname":"<DebugLineStr<R>>::get_str","value":"fn (&self, offset: DebugLineStrOffset<R::Offset>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Lookup a string from the `.debug_line_str` section by DebugLineStrOffset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":820721,"byte_end":820727,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugLineStr<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> DebugLineStr<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugLineStr` section that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":823756,"byte_end":823770,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<DebugTypesOffset<T>>::to_unit_offset","value":"fn <R> (&self, unit: &TypeUnitHeader<R>) -> Option<UnitOffset<T>>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the .debug_types section.\n Returns `None` if the offset is not within the unit entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":824415,"byte_end":824429,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"to_unit_offset","qualname":"<DebugInfoOffset<T>>::to_unit_offset","value":"fn <R> (&self, unit: &CompilationUnitHeader<R>) -> Option<UnitOffset<T>>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the given unit,\n instead of relative to the start of the .debug_info section.\n Returns `None` if the offset is not within this unit entries.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6749},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":824951,"byte_end":824961,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"UnitOffset","qualname":"::read::unit::UnitOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" An offset into the current compilation or type unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":825185,"byte_end":825205,"line_start":66,"line_end":66,"column_start":12,"column_end":32},"name":"to_debug_info_offset","qualname":"<UnitOffset<T>>::to_debug_info_offset","value":"fn <R> (&self, unit: &CompilationUnitHeader<R>) -> DebugInfoOffset<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_info section,\n instead of relative to the start of the given compilation unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":825532,"byte_end":825553,"line_start":75,"line_end":75,"column_start":12,"column_end":33},"name":"to_debug_types_offset","qualname":"<UnitOffset<T>>::to_debug_types_offset","value":"fn <R> (&self, unit: &TypeUnitHeader<R>) -> DebugTypesOffset<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert an offset to be relative to the start of the .debug_types section,\n instead of relative to the start of the given type unit.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6786},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":825878,"byte_end":825887,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"DebugInfo","qualname":"::read::unit::DebugInfo","value":"DebugInfo {  }","parent":null,"children":[{"krate":0,"index":6788}],"decl_id":null,"docs":" The `DebugInfo` struct represents the DWARF debugging information found in\n the `.debug_info` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":826608,"byte_end":826611,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugInfo<EndianSlice>>::new","value":"fn (debug_info_section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugInfo` instance from the data in the `.debug_info`\n section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":827420,"byte_end":827425,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"units","qualname":"<DebugInfo<R>>::units","value":"fn (&self) -> CompilationUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the compilation- and partial-units in this\n `.debug_info` section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":827748,"byte_end":827766,"line_start":142,"line_end":142,"column_start":12,"column_end":30},"name":"header_from_offset","qualname":"<DebugInfo<R>>::header_from_offset","value":"fn (&self, offset: DebugInfoOffset<R::Offset>) -> Result<CompilationUnitHeader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Get the CompilationUnitHeader located at offset from this .debug_info section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":828678,"byte_end":828684,"line_start":168,"line_end":168,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugInfo<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> DebugInfo<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugInfo` section that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6800},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":829359,"byte_end":829385,"line_start":197,"line_end":197,"column_start":12,"column_end":38},"name":"CompilationUnitHeadersIter","qualname":"::read::unit::CompilationUnitHeadersIter","value":"CompilationUnitHeadersIter {  }","parent":null,"children":[{"krate":0,"index":6802},{"krate":0,"index":6803}],"decl_id":null,"docs":" An iterator over the compilation- and partial-units of a section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":829569,"byte_end":829573,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"next","qualname":"<CompilationUnitHeadersIter<R>>::next","value":"fn (&mut self) -> Result<Option<CompilationUnitHeader<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next unit header.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6810},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":830568,"byte_end":830589,"line_start":235,"line_end":235,"column_start":12,"column_end":33},"name":"CompilationUnitHeader","qualname":"::read::unit::CompilationUnitHeader","value":"CompilationUnitHeader {  }","parent":null,"children":[{"krate":0,"index":6813},{"krate":0,"index":6814}],"decl_id":null,"docs":" The header of a compilation unit's debugging information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":830941,"byte_end":830944,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"new","qualname":"<CompilationUnitHeader<R, Offset>>::new","value":"fn (header: UnitHeader<R, Offset>, offset: DebugInfoOffset<Offset>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `CompilationUnitHeader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":831156,"byte_end":831162,"line_start":255,"line_end":255,"column_start":12,"column_end":18},"name":"header","qualname":"<CompilationUnitHeader<R, Offset>>::header","value":"fn (self) -> UnitHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the `UnitHeader` containing common unit header fields.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":831336,"byte_end":831350,"line_start":261,"line_end":261,"column_start":12,"column_end":26},"name":"size_of_header","qualname":"<CompilationUnitHeader<R, Offset>>::size_of_header","value":"fn (format: Format) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of the compilation unit header for the given\n DWARF format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":831527,"byte_end":831533,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"offset","qualname":"<CompilationUnitHeader<R, Offset>>::offset","value":"fn (&self) -> DebugInfoOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this compilation unit within the .debug_info section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":831751,"byte_end":831762,"line_start":272,"line_end":272,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<CompilationUnitHeader<R, Offset>>::unit_length","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit, not\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":831971,"byte_end":831992,"line_start":278,"line_end":278,"column_start":12,"column_end":33},"name":"length_including_self","qualname":"<CompilationUnitHeader<R, Offset>>::length_including_self","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit,\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":832131,"byte_end":832139,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"encoding","qualname":"<CompilationUnitHeader<R, Offset>>::encoding","value":"fn (&self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":832287,"byte_end":832294,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"version","qualname":"<CompilationUnitHeader<R, Offset>>::version","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the DWARF version of the debugging info for this compilation unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":832493,"byte_end":832512,"line_start":294,"line_end":294,"column_start":12,"column_end":31},"name":"debug_abbrev_offset","qualname":"<CompilationUnitHeader<R, Offset>>::debug_abbrev_offset","value":"fn (&self) -> DebugAbbrevOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" The offset into the `.debug_abbrev` section for this compilation unit's\n debugging information entries' abbreviations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":832672,"byte_end":832684,"line_start":299,"line_end":299,"column_start":12,"column_end":24},"name":"address_size","qualname":"<CompilationUnitHeader<R, Offset>>::address_size","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this type-unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":832819,"byte_end":832825,"line_start":304,"line_end":304,"column_start":12,"column_end":18},"name":"format","qualname":"<CompilationUnitHeader<R, Offset>>::format","value":"fn (&self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this type unit is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":832961,"byte_end":832972,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"name":"header_size","qualname":"<CompilationUnitHeader<R, Offset>>::header_size","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" The serialized size of the header for this compilation unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":833113,"byte_end":833118,"line_start":314,"line_end":314,"column_start":12,"column_end":17},"name":"entry","qualname":"<CompilationUnitHeader<R, Offset>>::entry","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: UnitOffset<R::Offset>) -> Result<DebuggingInformationEntry<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":833439,"byte_end":833446,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"entries","qualname":"<CompilationUnitHeader<R, Offset>>::entries","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations) -> EntriesCursor<'abbrev, 'me, R>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":833739,"byte_end":833756,"line_start":332,"line_end":332,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<CompilationUnitHeader<R, Offset>>::entries_at_offset","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: UnitOffset<R::Offset>) -> Result<EntriesCursor<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":834124,"byte_end":834136,"line_start":342,"line_end":342,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<CompilationUnitHeader<R, Offset>>::entries_tree","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesTree<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":834461,"byte_end":834472,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<CompilationUnitHeader<R, Offset>>::entries_raw","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesRaw<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":837058,"byte_end":837071,"line_start":437,"line_end":437,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<CompilationUnitHeader<R, Offset>>::abbreviations","value":"fn (&self, debug_abbrev: &DebugAbbrev<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse this compilation unit's abbreviations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6841},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":838300,"byte_end":838310,"line_start":476,"line_end":476,"column_start":12,"column_end":22},"name":"UnitHeader","qualname":"::read::unit::UnitHeader","value":"UnitHeader {  }","parent":null,"children":[{"krate":0,"index":6844},{"krate":0,"index":6845},{"krate":0,"index":6846},{"krate":0,"index":6847}],"decl_id":null,"docs":" The common fields for the headers of compilation units and\n type units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":838709,"byte_end":838712,"line_start":494,"line_end":494,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitHeader<R, Offset>>::new","value":"fn (encoding: Encoding, unit_length: R::Offset, debug_abbrev_offset: DebugAbbrevOffset<R::Offset>, entries_buf: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `UnitHeader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":839124,"byte_end":839138,"line_start":510,"line_end":510,"column_start":12,"column_end":26},"name":"size_of_header","qualname":"<UnitHeader<R, Offset>>::size_of_header","value":"fn (format: Format) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of the common unit header for the given\n DWARF format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":839743,"byte_end":839754,"line_start":528,"line_end":528,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<UnitHeader<R, Offset>>::unit_length","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit, not\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":839956,"byte_end":839977,"line_start":534,"line_end":534,"column_start":12,"column_end":33},"name":"length_including_self","qualname":"<UnitHeader<R, Offset>>::length_including_self","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this compilation unit,\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":840155,"byte_end":840163,"line_start":539,"line_end":539,"column_start":12,"column_end":20},"name":"encoding","qualname":"<UnitHeader<R, Offset>>::encoding","value":"fn (&self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":840304,"byte_end":840311,"line_start":544,"line_end":544,"column_start":12,"column_end":19},"name":"version","qualname":"<UnitHeader<R, Offset>>::version","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the DWARF version of the debugging info for this compilation unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":840510,"byte_end":840529,"line_start":550,"line_end":550,"column_start":12,"column_end":31},"name":"debug_abbrev_offset","qualname":"<UnitHeader<R, Offset>>::debug_abbrev_offset","value":"fn (&self) -> DebugAbbrevOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" The offset into the `.debug_abbrev` section for this compilation unit's\n debugging information entries' abbreviations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":840689,"byte_end":840701,"line_start":555,"line_end":555,"column_start":12,"column_end":24},"name":"address_size","qualname":"<UnitHeader<R, Offset>>::address_size","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this compilation unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":840843,"byte_end":840849,"line_start":560,"line_end":560,"column_start":12,"column_end":18},"name":"format","qualname":"<UnitHeader<R, Offset>>::format","value":"fn (&self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this compilation unit is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":840985,"byte_end":840996,"line_start":565,"line_end":565,"column_start":12,"column_end":23},"name":"header_size","qualname":"<UnitHeader<R, Offset>>::header_size","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" The serialized size of the header for this compilation unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":841492,"byte_end":841497,"line_start":580,"line_end":580,"column_start":12,"column_end":17},"name":"range","qualname":"<UnitHeader<R, Offset>>::range","value":"fn (&self, idx: Range<UnitOffset<R::Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":842158,"byte_end":842168,"line_start":598,"line_end":598,"column_start":12,"column_end":22},"name":"range_from","qualname":"<UnitHeader<R, Offset>>::range_from","value":"fn (&self, idx: RangeFrom<UnitOffset<R::Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":842561,"byte_end":842569,"line_start":609,"line_end":609,"column_start":12,"column_end":20},"name":"range_to","qualname":"<UnitHeader<R, Offset>>::range_to","value":"fn (&self, idx: RangeTo<UnitOffset<R::Offset>>) -> Result<R>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying bytes for the supplied range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":842965,"byte_end":842970,"line_start":620,"line_end":620,"column_start":12,"column_end":17},"name":"entry","qualname":"<UnitHeader<R, Offset>>::entry","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: UnitOffset<R::Offset>) -> Result<DebuggingInformationEntry<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the `DebuggingInformationEntry` at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":843419,"byte_end":843426,"line_start":631,"line_end":631,"column_start":12,"column_end":19},"name":"entries","qualname":"<UnitHeader<R, Offset>>::entries","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations) -> EntriesCursor<'abbrev, 'me, R>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":843868,"byte_end":843885,"line_start":646,"line_end":646,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<UnitHeader<R, Offset>>::entries_at_offset","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: UnitOffset<R::Offset>) -> Result<EntriesCursor<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this compilation unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":844398,"byte_end":844410,"line_start":663,"line_end":663,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<UnitHeader<R, Offset>>::entries_tree","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesTree<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":844884,"byte_end":844895,"line_start":676,"line_end":676,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<UnitHeader<R, Offset>>::entries_raw","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesRaw<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":845405,"byte_end":845418,"line_start":694,"line_end":694,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<UnitHeader<R, Offset>>::abbreviations","value":"fn (&self, debug_abbrev: &DebugAbbrev<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse this unit's abbreviations.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6875},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":846793,"byte_end":846818,"line_start":735,"line_end":735,"column_start":12,"column_end":37},"name":"DebuggingInformationEntry","qualname":"::read::unit::DebuggingInformationEntry","value":"DebuggingInformationEntry {  }","parent":null,"children":[{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6883},{"krate":0,"index":6884}],"decl_id":null,"docs":" A Debugging Information Entry (DIE).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":847318,"byte_end":847321,"line_start":753,"line_end":753,"column_start":12,"column_end":15},"name":"new","qualname":"<DebuggingInformationEntry>::new","value":"fn (offset: UnitOffset<Offset>, attrs_slice: R, abbrev: &'abbrev Abbreviation, unit: &'unit UnitHeader<R, Offset>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebuggingInformationEntry`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":847700,"byte_end":847704,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"code","qualname":"<DebuggingInformationEntry>::code","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":847799,"byte_end":847805,"line_start":774,"line_end":774,"column_start":12,"column_end":18},"name":"offset","qualname":"<DebuggingInformationEntry>::offset","value":"fn (&self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":850201,"byte_end":850204,"line_start":841,"line_end":841,"column_start":12,"column_end":15},"name":"tag","qualname":"<DebuggingInformationEntry>::tag","value":"fn (&self) -> constants::DwTag","parent":null,"children":[],"decl_id":null,"docs":" Get this entry's `DW_TAG_whatever` tag.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":850355,"byte_end":850367,"line_start":846,"line_end":846,"column_start":12,"column_end":24},"name":"has_children","qualname":"<DebuggingInformationEntry>::has_children","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this entry's type can have children, false otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":853107,"byte_end":853112,"line_start":928,"line_end":928,"column_start":12,"column_end":17},"name":"attrs","qualname":"<DebuggingInformationEntry>::attrs","value":"fn <'me> (&'me self) -> AttrsIter<'abbrev, 'me, 'unit, R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over this entry's set of attributes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":853477,"byte_end":853481,"line_start":938,"line_end":938,"column_start":12,"column_end":16},"name":"attr","qualname":"<DebuggingInformationEntry>::attr","value":"fn (&self, name: constants::DwAt) -> Result<Option<Attribute<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return it. Returns `Ok(None)` if no attribute is found.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":853918,"byte_end":853932,"line_start":950,"line_end":950,"column_start":12,"column_end":26},"name":"attr_value_raw","qualname":"<DebuggingInformationEntry>::attr_value_raw","value":"fn (&self, name: constants::DwAt) -> Result<Option<AttributeValue<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return its raw value. Returns `Ok(None)` if no attribute is found.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":854271,"byte_end":854281,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"attr_value","qualname":"<DebuggingInformationEntry>::attr_value","value":"fn (&self, name: constants::DwAt) -> Result<Option<AttributeValue<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Find the first attribute in this entry which has the given name,\n and return its normalized value.  Returns `Ok(None)` if no\n attribute is found.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6900},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":856675,"byte_end":856679,"line_start":1027,"line_end":1027,"column_start":5,"column_end":9},"name":"Addr","qualname":"::read::unit::AttributeValue::Addr","value":"AttributeValue::Addr(u64)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" \"Refers to some location in the address space of the described program.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6903},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":856740,"byte_end":856745,"line_start":1030,"line_end":1030,"column_start":5,"column_end":10},"name":"Block","qualname":"::read::unit::AttributeValue::Block","value":"AttributeValue::Block(R)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A slice of an arbitrary number of bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6906},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":857023,"byte_end":857028,"line_start":1037,"line_end":1037,"column_start":5,"column_end":10},"name":"Data1","qualname":"::read::unit::AttributeValue::Data1","value":"AttributeValue::Data1(u8)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A one byte constant data value. How to interpret the byte depends on context.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6909},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":857437,"byte_end":857442,"line_start":1047,"line_end":1047,"column_start":5,"column_end":10},"name":"Data2","qualname":"::read::unit::AttributeValue::Data2","value":"AttributeValue::Data2(u16)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A two byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6912},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":857853,"byte_end":857858,"line_start":1057,"line_end":1057,"column_start":5,"column_end":10},"name":"Data4","qualname":"::read::unit::AttributeValue::Data4","value":"AttributeValue::Data4(u32)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A four byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6915},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":858271,"byte_end":858276,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10},"name":"Data8","qualname":"::read::unit::AttributeValue::Data8","value":"AttributeValue::Data8(u64)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An eight byte constant data value. How to interpret the bytes depends on context.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6918},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":858323,"byte_end":858328,"line_start":1070,"line_end":1070,"column_start":5,"column_end":10},"name":"Sdata","qualname":"::read::unit::AttributeValue::Sdata","value":"AttributeValue::Sdata(i64)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A signed integer constant.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6921},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":858378,"byte_end":858383,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10},"name":"Udata","qualname":"::read::unit::AttributeValue::Udata","value":"AttributeValue::Udata(u64)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An unsigned integer constant.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6924},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":858523,"byte_end":858530,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12},"name":"Exprloc","qualname":"::read::unit::AttributeValue::Exprloc","value":"AttributeValue::Exprloc(Expression<R>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" \"The information bytes contain a DWARF expression (see Section 2.5) or\n location description (see Section 2.6).\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6927},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":858623,"byte_end":858627,"line_start":1080,"line_end":1080,"column_start":5,"column_end":9},"name":"Flag","qualname":"::read::unit::AttributeValue::Flag","value":"AttributeValue::Flag(bool)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A boolean that indicates presence or absence of the attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6930},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":858745,"byte_end":858754,"line_start":1084,"line_end":1084,"column_start":5,"column_end":14},"name":"SecOffset","qualname":"::read::unit::AttributeValue::SecOffset","value":"AttributeValue::SecOffset(Offset)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into another section. Which section this is an offset into\n depends on context.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6933},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":858839,"byte_end":858852,"line_start":1087,"line_end":1087,"column_start":5,"column_end":18},"name":"DebugAddrBase","qualname":"::read::unit::AttributeValue::DebugAddrBase","value":"AttributeValue::DebugAddrBase(DebugAddrBase<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset to a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6936},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":858953,"byte_end":858967,"line_start":1090,"line_end":1090,"column_start":5,"column_end":19},"name":"DebugAddrIndex","qualname":"::read::unit::AttributeValue::DebugAddrIndex","value":"AttributeValue::DebugAddrIndex(DebugAddrIndex<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An index into a set of addresses in the `.debug_addr` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6939},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":859051,"byte_end":859058,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12},"name":"UnitRef","qualname":"::read::unit::AttributeValue::UnitRef","value":"AttributeValue::UnitRef(UnitOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the current compilation unit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6942},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":859215,"byte_end":859227,"line_start":1097,"line_end":1097,"column_start":5,"column_end":17},"name":"DebugInfoRef","qualname":"::read::unit::AttributeValue::DebugInfoRef","value":"AttributeValue::DebugInfoRef(DebugInfoOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the current `.debug_info` section, but possibly a\n different compilation unit from the current one.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6945},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":859342,"byte_end":859357,"line_start":1100,"line_end":1100,"column_start":5,"column_end":20},"name":"DebugInfoRefSup","qualname":"::read::unit::AttributeValue::DebugInfoRefSup","value":"AttributeValue::DebugInfoRefSup(DebugInfoOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the `.debug_info` section of the supplementary object file.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6948},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":859439,"byte_end":859451,"line_start":1103,"line_end":1103,"column_start":5,"column_end":17},"name":"DebugLineRef","qualname":"::read::unit::AttributeValue::DebugLineRef","value":"AttributeValue::DebugLineRef(DebugLineOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the `.debug_line` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6951},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":859572,"byte_end":859588,"line_start":1106,"line_end":1106,"column_start":5,"column_end":21},"name":"LocationListsRef","qualname":"::read::unit::AttributeValue::LocationListsRef","value":"AttributeValue::LocationListsRef(LocationListsOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into either the `.debug_loc` section or the `.debug_loclists` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6954},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":859696,"byte_end":859713,"line_start":1109,"line_end":1109,"column_start":5,"column_end":22},"name":"DebugLocListsBase","qualname":"::read::unit::AttributeValue::DebugLocListsBase","value":"AttributeValue::DebugLocListsBase(DebugLocListsBase<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset to a set of offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6957},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":859820,"byte_end":859838,"line_start":1112,"line_end":1112,"column_start":5,"column_end":23},"name":"DebugLocListsIndex","qualname":"::read::unit::AttributeValue::DebugLocListsIndex","value":"AttributeValue::DebugLocListsIndex(DebugLocListsIndex<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An index into a set of offsets in the `.debug_loclists` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6960},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":859926,"byte_end":859941,"line_start":1115,"line_end":1115,"column_start":5,"column_end":20},"name":"DebugMacinfoRef","qualname":"::read::unit::AttributeValue::DebugMacinfoRef","value":"AttributeValue::DebugMacinfoRef(DebugMacinfoOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macinfo` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6963},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":860027,"byte_end":860040,"line_start":1118,"line_end":1118,"column_start":5,"column_end":18},"name":"DebugMacroRef","qualname":"::read::unit::AttributeValue::DebugMacroRef","value":"AttributeValue::DebugMacroRef(DebugMacroOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the `.debug_macro` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6966},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":860125,"byte_end":860138,"line_start":1121,"line_end":1121,"column_start":5,"column_end":18},"name":"RangeListsRef","qualname":"::read::unit::AttributeValue::RangeListsRef","value":"AttributeValue::RangeListsRef(RangeListsOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the `.debug_ranges` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6969},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":860243,"byte_end":860260,"line_start":1124,"line_end":1124,"column_start":5,"column_end":22},"name":"DebugRngListsBase","qualname":"::read::unit::AttributeValue::DebugRngListsBase","value":"AttributeValue::DebugRngListsBase(DebugRngListsBase<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset to a set of offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6972},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":860367,"byte_end":860385,"line_start":1127,"line_end":1127,"column_start":5,"column_end":23},"name":"DebugRngListsIndex","qualname":"::read::unit::AttributeValue::DebugRngListsIndex","value":"AttributeValue::DebugRngListsIndex(DebugRngListsIndex<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An index into a set of offsets in the `.debug_rnglists` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6975},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":860446,"byte_end":860459,"line_start":1130,"line_end":1130,"column_start":5,"column_end":18},"name":"DebugTypesRef","qualname":"::read::unit::AttributeValue::DebugTypesRef","value":"AttributeValue::DebugTypesRef(DebugTypeSignature)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A type signature.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6978},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":860535,"byte_end":860546,"line_start":1133,"line_end":1133,"column_start":5,"column_end":16},"name":"DebugStrRef","qualname":"::read::unit::AttributeValue::DebugStrRef","value":"AttributeValue::DebugStrRef(DebugStrOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6981},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":860659,"byte_end":860673,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19},"name":"DebugStrRefSup","qualname":"::read::unit::AttributeValue::DebugStrRefSup","value":"AttributeValue::DebugStrRefSup(DebugStrOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the `.debug_str` section of the supplementary object file.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6984},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":860779,"byte_end":860798,"line_start":1139,"line_end":1139,"column_start":5,"column_end":24},"name":"DebugStrOffsetsBase","qualname":"::read::unit::AttributeValue::DebugStrOffsetsBase","value":"AttributeValue::DebugStrOffsetsBase(DebugStrOffsetsBase<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset to a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6987},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":860910,"byte_end":860930,"line_start":1142,"line_end":1142,"column_start":5,"column_end":25},"name":"DebugStrOffsetsIndex","qualname":"::read::unit::AttributeValue::DebugStrOffsetsIndex","value":"AttributeValue::DebugStrOffsetsIndex(DebugStrOffsetsIndex<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An index into a set of entries in the `.debug_str_offsets` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6990},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861021,"byte_end":861036,"line_start":1145,"line_end":1145,"column_start":5,"column_end":20},"name":"DebugLineStrRef","qualname":"::read::unit::AttributeValue::DebugLineStrRef","value":"AttributeValue::DebugLineStrRef(DebugLineStrOffset<Offset>)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An offset into the `.debug_line_str` section.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6993},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861213,"byte_end":861219,"line_start":1149,"line_end":1149,"column_start":5,"column_end":11},"name":"String","qualname":"::read::unit::AttributeValue::String","value":"AttributeValue::String(R)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" A slice of bytes representing a string. Does not include a final null byte.\n Not guaranteed to be UTF-8 or anything like that.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6996},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861280,"byte_end":861288,"line_start":1152,"line_end":1152,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::read::unit::AttributeValue::Encoding","value":"AttributeValue::Encoding(constants::DwAte)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_encoding` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6999},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861368,"byte_end":861379,"line_start":1155,"line_end":1155,"column_start":5,"column_end":16},"name":"DecimalSign","qualname":"::read::unit::AttributeValue::DecimalSign","value":"AttributeValue::DecimalSign(constants::DwDs)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_decimal_sign` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7002},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861455,"byte_end":861464,"line_start":1158,"line_end":1158,"column_start":5,"column_end":14},"name":"Endianity","qualname":"::read::unit::AttributeValue::Endianity","value":"AttributeValue::Endianity(constants::DwEnd)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_endianity` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7005},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861545,"byte_end":861558,"line_start":1161,"line_end":1161,"column_start":5,"column_end":18},"name":"Accessibility","qualname":"::read::unit::AttributeValue::Accessibility","value":"AttributeValue::Accessibility(constants::DwAccess)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_accessibility` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7008},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861639,"byte_end":861649,"line_start":1164,"line_end":1164,"column_start":5,"column_end":15},"name":"Visibility","qualname":"::read::unit::AttributeValue::Visibility","value":"AttributeValue::Visibility(constants::DwVis)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_visibility` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7011},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861727,"byte_end":861737,"line_start":1167,"line_end":1167,"column_start":5,"column_end":15},"name":"Virtuality","qualname":"::read::unit::AttributeValue::Virtuality","value":"AttributeValue::Virtuality(constants::DwVirtuality)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_virtuality` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7014},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861820,"byte_end":861828,"line_start":1170,"line_end":1170,"column_start":5,"column_end":13},"name":"Language","qualname":"::read::unit::AttributeValue::Language","value":"AttributeValue::Language(constants::DwLang)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_language` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7017},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":861910,"byte_end":861922,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17},"name":"AddressClass","qualname":"::read::unit::AttributeValue::AddressClass","value":"AttributeValue::AddressClass(constants::DwAddr)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_address_class` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7020},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862006,"byte_end":862020,"line_start":1176,"line_end":1176,"column_start":5,"column_end":19},"name":"IdentifierCase","qualname":"::read::unit::AttributeValue::IdentifierCase","value":"AttributeValue::IdentifierCase(constants::DwId)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_identifier_case` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7023},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862105,"byte_end":862122,"line_start":1179,"line_end":1179,"column_start":5,"column_end":22},"name":"CallingConvention","qualname":"::read::unit::AttributeValue::CallingConvention","value":"AttributeValue::CallingConvention(constants::DwCc)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_calling_convention` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7026},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862195,"byte_end":862201,"line_start":1182,"line_end":1182,"column_start":5,"column_end":11},"name":"Inline","qualname":"::read::unit::AttributeValue::Inline","value":"AttributeValue::Inline(constants::DwInl)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_inline` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7029},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862277,"byte_end":862285,"line_start":1185,"line_end":1185,"column_start":5,"column_end":13},"name":"Ordering","qualname":"::read::unit::AttributeValue::Ordering","value":"AttributeValue::Ordering(constants::DwOrd)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" The value of a `DW_AT_ordering` attribute.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7032},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862448,"byte_end":862457,"line_start":1189,"line_end":1189,"column_start":5,"column_end":14},"name":"FileIndex","qualname":"::read::unit::AttributeValue::FileIndex","value":"AttributeValue::FileIndex(u64)","parent":{"krate":0,"index":6897},"children":[],"decl_id":null,"docs":" An index into the filename entries from the line number information\n table for the compilation unit containing this value.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6897},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":856474,"byte_end":856488,"line_start":1021,"line_end":1021,"column_start":10,"column_end":24},"name":"AttributeValue","qualname":"::read::unit::AttributeValue","value":"AttributeValue::{Addr, Block, Data1, Data2, Data4, Data8, Sdata, Udata, Exprloc, Flag, SecOffset, DebugAddrBase, DebugAddrIndex, UnitRef, DebugInfoRef, DebugInfoRefSup, DebugLineRef, LocationListsRef, DebugLocListsBase, DebugLocListsIndex, DebugMacinfoRef, DebugMacroRef, RangeListsRef, DebugRngListsBase, DebugRngListsIndex, DebugTypesRef, DebugStrRef, DebugStrRefSup, DebugStrOffsetsBase, DebugStrOffsetsIndex, DebugLineStrRef, String, Encoding, DecimalSign, Endianity, Accessibility, Visibility, Virtuality, Language, AddressClass, IdentifierCase, CallingConvention, Inline, Ordering, FileIndex}","parent":null,"children":[{"krate":0,"index":6900},{"krate":0,"index":6903},{"krate":0,"index":6906},{"krate":0,"index":6909},{"krate":0,"index":6912},{"krate":0,"index":6915},{"krate":0,"index":6918},{"krate":0,"index":6921},{"krate":0,"index":6924},{"krate":0,"index":6927},{"krate":0,"index":6930},{"krate":0,"index":6933},{"krate":0,"index":6936},{"krate":0,"index":6939},{"krate":0,"index":6942},{"krate":0,"index":6945},{"krate":0,"index":6948},{"krate":0,"index":6951},{"krate":0,"index":6954},{"krate":0,"index":6957},{"krate":0,"index":6960},{"krate":0,"index":6963},{"krate":0,"index":6966},{"krate":0,"index":6969},{"krate":0,"index":6972},{"krate":0,"index":6975},{"krate":0,"index":6978},{"krate":0,"index":6981},{"krate":0,"index":6984},{"krate":0,"index":6987},{"krate":0,"index":6990},{"krate":0,"index":6993},{"krate":0,"index":6996},{"krate":0,"index":6999},{"krate":0,"index":7002},{"krate":0,"index":7005},{"krate":0,"index":7008},{"krate":0,"index":7011},{"krate":0,"index":7014},{"krate":0,"index":7017},{"krate":0,"index":7020},{"krate":0,"index":7023},{"krate":0,"index":7026},{"krate":0,"index":7029},{"krate":0,"index":7032}],"decl_id":null,"docs":" The value of an attribute in a `DebuggingInformationEntry`.\n","sig":null,"attributes":[{"value":"repr(u64)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":856407,"byte_end":856419,"line_start":1019,"line_end":1019,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":7061},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862621,"byte_end":862630,"line_start":1195,"line_end":1195,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::read::unit::Attribute","value":"Attribute {  }","parent":null,"children":[{"krate":0,"index":7063},{"krate":0,"index":7064}],"decl_id":null,"docs":" An attribute in a `DebuggingInformationEntry`, consisting of a name and\n associated value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862781,"byte_end":862785,"line_start":1202,"line_end":1202,"column_start":12,"column_end":16},"name":"name","qualname":"<Attribute<R>>::name","value":"fn (&self) -> constants::DwAt","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862890,"byte_end":862899,"line_start":1207,"line_end":1207,"column_start":12,"column_end":21},"name":"raw_value","qualname":"<Attribute<R>>::raw_value","value":"fn (&self) -> AttributeValue<R>","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's raw value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":863468,"byte_end":863473,"line_start":1221,"line_end":1221,"column_start":12,"column_end":17},"name":"value","qualname":"<Attribute<R>>::value","value":"fn (&self) -> AttributeValue<R>","parent":null,"children":[],"decl_id":null,"docs":" Get this attribute's normalized value.","sig":null,"attributes":[{"value":"allow(clippy :: cyclomatic_complexity)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":863379,"byte_end":863418,"line_start":1219,"line_end":1219,"column_start":5,"column_end":44}},{"value":"allow(clippy :: match_same_arms)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":863423,"byte_end":863456,"line_start":1220,"line_end":1220,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882130,"byte_end":882138,"line_start":1801,"line_end":1801,"column_start":12,"column_end":20},"name":"u8_value","qualname":"<Attribute<R>>::u8_value","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u8.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882109,"byte_end":882118,"line_start":1800,"line_end":1800,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882280,"byte_end":882289,"line_start":1807,"line_end":1807,"column_start":12,"column_end":21},"name":"u16_value","qualname":"<Attribute<R>>::u16_value","value":"fn (&self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u16.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882259,"byte_end":882268,"line_start":1806,"line_end":1806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882447,"byte_end":882458,"line_start":1813,"line_end":1813,"column_start":12,"column_end":23},"name":"udata_value","qualname":"<Attribute<R>>::udata_value","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an unsigned integer.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882426,"byte_end":882435,"line_start":1812,"line_end":1812,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882615,"byte_end":882626,"line_start":1819,"line_end":1819,"column_start":12,"column_end":23},"name":"sdata_value","qualname":"<Attribute<R>>::sdata_value","value":"fn (&self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a signed integer.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882594,"byte_end":882603,"line_start":1818,"line_end":1818,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882776,"byte_end":882788,"line_start":1825,"line_end":1825,"column_start":12,"column_end":24},"name":"offset_value","qualname":"<Attribute<R>>::offset_value","value":"fn (&self) -> Option<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an offset.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":882755,"byte_end":882764,"line_start":1824,"line_end":1824,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":883173,"byte_end":883186,"line_start":1835,"line_end":1835,"column_start":12,"column_end":25},"name":"exprloc_value","qualname":"<Attribute<R>>::exprloc_value","value":"fn (&self) -> Option<Expression<R>>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an expression or location buffer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":883152,"byte_end":883161,"line_start":1834,"line_end":1834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":883760,"byte_end":883772,"line_start":1849,"line_end":1849,"column_start":12,"column_end":24},"name":"string_value","qualname":"<Attribute<R>>::string_value","value":"fn (&self, debug_str: &DebugStr<R>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":883739,"byte_end":883748,"line_start":1848,"line_end":1848,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":884456,"byte_end":884472,"line_start":1864,"line_end":1864,"column_start":12,"column_end":28},"name":"string_value_sup","qualname":"<Attribute<R>>::string_value_sup","value":"fn (&self, debug_str: &DebugStr<R>, debug_str_sup: Option<&DebugStr<R>>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":884435,"byte_end":884444,"line_start":1863,"line_end":1863,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":884833,"byte_end":884841,"line_start":1879,"line_end":1879,"column_start":12,"column_end":20},"name":"u8_value","qualname":"<AttributeValue<R, Offset>>::u8_value","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u8.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":885113,"byte_end":885122,"line_start":1889,"line_end":1889,"column_start":12,"column_end":21},"name":"u16_value","qualname":"<AttributeValue<R, Offset>>::u16_value","value":"fn (&self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a u16.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":885411,"byte_end":885422,"line_start":1899,"line_end":1899,"column_start":12,"column_end":23},"name":"udata_value","qualname":"<AttributeValue<R, Offset>>::udata_value","value":"fn (&self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an unsigned integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":886105,"byte_end":886116,"line_start":1918,"line_end":1918,"column_start":12,"column_end":23},"name":"sdata_value","qualname":"<AttributeValue<R, Offset>>::sdata_value","value":"fn (&self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to a signed integer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":886841,"byte_end":886853,"line_start":1937,"line_end":1937,"column_start":12,"column_end":24},"name":"offset_value","qualname":"<AttributeValue<R, Offset>>::offset_value","value":"fn (&self) -> Option<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":887449,"byte_end":887462,"line_start":1952,"line_end":1952,"column_start":12,"column_end":25},"name":"exprloc_value","qualname":"<AttributeValue<R, Offset>>::exprloc_value","value":"fn (&self) -> Option<Expression<R>>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this attribute's value to an expression or location buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":888191,"byte_end":888203,"line_start":1969,"line_end":1969,"column_start":12,"column_end":24},"name":"string_value","qualname":"<AttributeValue<R, Offset>>::string_value","value":"fn (&self, debug_str: &DebugStr<R>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":889040,"byte_end":889056,"line_start":1987,"line_end":1987,"column_start":12,"column_end":28},"name":"string_value_sup","qualname":"<AttributeValue<R, Offset>>::string_value_sup","value":"fn (&self, debug_str: &DebugStr<R>, debug_str_sup: Option<&DebugStr<R>>) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Try to return this attribute's value as a string slice.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7084},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":901312,"byte_end":901321,"line_start":2274,"line_end":2274,"column_start":12,"column_end":21},"name":"AttrsIter","qualname":"::read::unit::AttrsIter","value":"AttrsIter {  }","parent":null,"children":[{"krate":0,"index":7089},{"krate":0,"index":7090},{"krate":0,"index":7091}],"decl_id":null,"docs":" An iterator over a particular entry's attributes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":901897,"byte_end":901901,"line_start":2288,"line_end":2288,"column_start":12,"column_end":16},"name":"next","qualname":"<AttrsIter>::next","value":"fn (&mut self) -> Result<Option<Attribute<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator and return the next attribute.","sig":null,"attributes":[{"value":"allow(clippy :: inline_always)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":901832,"byte_end":901863,"line_start":2286,"line_end":2286,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":901868,"byte_end":901885,"line_start":2287,"line_end":2287,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7110},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":905652,"byte_end":905662,"line_start":2387,"line_end":2387,"column_start":12,"column_end":22},"name":"EntriesRaw","qualname":"::read::unit::EntriesRaw","value":"EntriesRaw {  }","parent":null,"children":[{"krate":0,"index":7114},{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7117}],"decl_id":null,"docs":" A raw reader of the data that defines the Debugging Information Entries.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":905951,"byte_end":905959,"line_start":2400,"line_end":2400,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EntriesRaw>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if there is no more input.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":905930,"byte_end":905939,"line_start":2399,"line_end":2399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":906216,"byte_end":906227,"line_start":2408,"line_end":2408,"column_start":12,"column_end":23},"name":"next_offset","qualname":"<EntriesRaw>::next_offset","value":"fn (&self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the unit offset at which the reader will read next.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":906600,"byte_end":906610,"line_start":2417,"line_end":2417,"column_start":12,"column_end":22},"name":"next_depth","qualname":"<EntriesRaw>::next_depth","value":"fn (&self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Return the depth of the next entry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":906579,"byte_end":906588,"line_start":2416,"line_end":2416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":906812,"byte_end":906829,"line_start":2425,"line_end":2425,"column_start":12,"column_end":29},"name":"read_abbreviation","qualname":"<EntriesRaw>::read_abbreviation","value":"fn (&mut self) -> Result<Option<&'abbrev Abbreviation>>","parent":null,"children":[],"decl_id":null,"docs":" Read an abbreviation code and lookup the corresponding `Abbreviation`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":906791,"byte_end":906800,"line_start":2424,"line_end":2424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":907306,"byte_end":907320,"line_start":2443,"line_end":2443,"column_start":12,"column_end":26},"name":"read_attribute","qualname":"<EntriesRaw>::read_attribute","value":"fn (&mut self, spec: AttributeSpecification) -> Result<Attribute<R>>","parent":null,"children":[],"decl_id":null,"docs":" Read an attribute.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":907285,"byte_end":907294,"line_start":2442,"line_end":2442,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7128},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":908305,"byte_end":908318,"line_start":2462,"line_end":2462,"column_start":12,"column_end":25},"name":"EntriesCursor","qualname":"::read::unit::EntriesCursor","value":"EntriesCursor {  }","parent":null,"children":[{"krate":0,"index":7132},{"krate":0,"index":7133},{"krate":0,"index":7134},{"krate":0,"index":7135},{"krate":0,"index":7136}],"decl_id":null,"docs":" A cursor into the Debugging Information Entries tree for a compilation unit.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":908855,"byte_end":908862,"line_start":2479,"line_end":2479,"column_start":12,"column_end":19},"name":"current","qualname":"<EntriesCursor>::current","value":"fn (&self) -> Option<&DebuggingInformationEntry<'abbrev, 'unit, R>>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the entry that the cursor is currently pointing to.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":908834,"byte_end":908843,"line_start":2478,"line_end":2478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":909182,"byte_end":909192,"line_start":2487,"line_end":2487,"column_start":12,"column_end":22},"name":"next_entry","qualname":"<EntriesCursor>::next_entry","value":"fn (&mut self) -> Result<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next DIE in the tree.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":914191,"byte_end":914199,"line_start":2636,"line_end":2636,"column_start":12,"column_end":20},"name":"next_dfs","qualname":"<EntriesCursor>::next_dfs","value":"fn (&mut self) -> Result<Option<(isize, &DebuggingInformationEntry<'abbrev, 'unit, R>)>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next DIE in the tree in DFS order.","sig":null,"attributes":[{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":914146,"byte_end":914179,"line_start":2635,"line_end":2635,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":918238,"byte_end":918250,"line_start":2761,"line_end":2761,"column_start":12,"column_end":24},"name":"next_sibling","qualname":"<EntriesCursor>::next_sibling","value":"fn (&mut self) -> Result<Option<&DebuggingInformationEntry<'abbrev, 'unit, R>>>","parent":null,"children":[],"decl_id":null,"docs":" Move the cursor to the next sibling DIE of the current one.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7147},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":921319,"byte_end":921330,"line_start":2847,"line_end":2847,"column_start":12,"column_end":23},"name":"EntriesTree","qualname":"::read::unit::EntriesTree","value":"EntriesTree {  }","parent":null,"children":[{"krate":0,"index":7151},{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7155},{"krate":0,"index":7156}],"decl_id":null,"docs":" The state information for a tree view of the Debugging Information Entries.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":921979,"byte_end":921983,"line_start":2873,"line_end":2873,"column_start":12,"column_end":16},"name":"root","qualname":"<EntriesTree>::root","value":"fn <'me> (&'me mut self) -> Result<EntriesTreeNode<'abbrev, 'unit, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the root node of the tree.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7168},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":925616,"byte_end":925631,"line_start":2979,"line_end":2979,"column_start":12,"column_end":27},"name":"EntriesTreeNode","qualname":"::read::unit::EntriesTreeNode","value":"EntriesTreeNode {  }","parent":null,"children":[{"krate":0,"index":7173},{"krate":0,"index":7174}],"decl_id":null,"docs":" A node in the Debugging Information Entry tree.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":926119,"byte_end":926124,"line_start":2994,"line_end":2994,"column_start":12,"column_end":17},"name":"entry","qualname":"<EntriesTreeNode>::entry","value":"fn (&self) -> &DebuggingInformationEntry<'abbrev, 'unit, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current entry in the tree.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":926458,"byte_end":926466,"line_start":3003,"line_end":3003,"column_start":12,"column_end":20},"name":"children","qualname":"<EntriesTreeNode>::children","value":"fn (self) -> EntriesTreeIter<'abbrev, 'unit, 'tree, R>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator for the children of the current entry.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7182},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":926824,"byte_end":926839,"line_start":3014,"line_end":3014,"column_start":12,"column_end":27},"name":"EntriesTreeIter","qualname":"::read::unit::EntriesTreeIter","value":"EntriesTreeIter {  }","parent":null,"children":[{"krate":0,"index":7187},{"krate":0,"index":7188},{"krate":0,"index":7189}],"decl_id":null,"docs":" An iterator that allows traversal of the children of an\n `EntriesTreeNode`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":927436,"byte_end":927440,"line_start":3035,"line_end":3035,"column_start":12,"column_end":16},"name":"next","qualname":"<EntriesTreeIter>::next","value":"fn <'me> (&'me mut self) -> Result<Option<EntriesTreeNode<'abbrev, 'unit, 'me, R>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `EntriesTreeNode` for the next child entry.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7196},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":928353,"byte_end":928363,"line_start":3061,"line_end":3061,"column_start":12,"column_end":22},"name":"DebugTypes","qualname":"::read::unit::DebugTypes","value":"DebugTypes {  }","parent":null,"children":[{"krate":0,"index":7198}],"decl_id":null,"docs":" The `DebugTypes` struct represents the DWARF type information\n found in the `.debug_types` section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":929094,"byte_end":929097,"line_start":3083,"line_end":3083,"column_start":12,"column_end":15},"name":"new","qualname":"<DebugTypes<EndianSlice>>::new","value":"fn (debug_types_section: &'input [u8], endian: Endian) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `DebugTypes` instance from the data in the `.debug_types`\n section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":929894,"byte_end":929900,"line_start":3104,"line_end":3104,"column_start":12,"column_end":18},"name":"borrow","qualname":"<DebugTypes<T>>::borrow","value":"fn <'a, F, R> (&'a self, mut borrow: F) -> DebugTypes<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a `DebugTypes` section that references the data in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":931041,"byte_end":931046,"line_start":3148,"line_end":3148,"column_start":12,"column_end":17},"name":"units","qualname":"<DebugTypes<R>>::units","value":"fn (&self) -> TypeUnitHeadersIter<R>","parent":null,"children":[],"decl_id":null,"docs":" Iterate the type-units in this `.debug_types` section.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7210},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":931467,"byte_end":931486,"line_start":3162,"line_end":3162,"column_start":12,"column_end":31},"name":"TypeUnitHeadersIter","qualname":"::read::unit::TypeUnitHeadersIter","value":"TypeUnitHeadersIter {  }","parent":null,"children":[{"krate":0,"index":7212},{"krate":0,"index":7213}],"decl_id":null,"docs":" An iterator over the type-units of this `.debug_types` section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":931669,"byte_end":931673,"line_start":3169,"line_end":3169,"column_start":12,"column_end":16},"name":"next","qualname":"<TypeUnitHeadersIter<R>>::next","value":"fn (&mut self) -> Result<Option<TypeUnitHeader<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Advance the iterator to the next type unit header.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7220},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":932627,"byte_end":932641,"line_start":3200,"line_end":3200,"column_start":12,"column_end":26},"name":"TypeUnitHeader","qualname":"::read::unit::TypeUnitHeader","value":"TypeUnitHeader {  }","parent":null,"children":[{"krate":0,"index":7223},{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7226}],"decl_id":null,"docs":" The header of a type unit's debugging information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":933447,"byte_end":933453,"line_start":3232,"line_end":3232,"column_start":12,"column_end":18},"name":"header","qualname":"<TypeUnitHeader<R, Offset>>::header","value":"fn (self) -> UnitHeader<R, Offset>","parent":null,"children":[],"decl_id":null,"docs":" Return the `UnitHeader` containing common unit fields.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":933620,"byte_end":933634,"line_start":3238,"line_end":3238,"column_start":12,"column_end":26},"name":"size_of_header","qualname":"<TypeUnitHeader<R, Offset>>::size_of_header","value":"fn (format: Format) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the serialized size of the type-unit header for the given\n DWARF format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":933998,"byte_end":934004,"line_start":3246,"line_end":3246,"column_start":12,"column_end":18},"name":"offset","qualname":"<TypeUnitHeader<R, Offset>>::offset","value":"fn (&self) -> DebugTypesOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset of this compilation unit within the .debug_info section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":934148,"byte_end":934159,"line_start":3251,"line_end":3251,"column_start":12,"column_end":23},"name":"unit_length","qualname":"<TypeUnitHeader<R, Offset>>::unit_length","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this type-unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":934361,"byte_end":934382,"line_start":3257,"line_end":3257,"column_start":12,"column_end":33},"name":"length_including_self","qualname":"<TypeUnitHeader<R, Offset>>::length_including_self","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the debugging info for this type-unit,\n including the byte length of the encoded length itself.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":934521,"byte_end":934529,"line_start":3262,"line_end":3262,"column_start":12,"column_end":20},"name":"encoding","qualname":"<TypeUnitHeader<R, Offset>>::encoding","value":"fn (&self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Return the encoding parameters for this unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":934670,"byte_end":934677,"line_start":3267,"line_end":3267,"column_start":12,"column_end":19},"name":"version","qualname":"<TypeUnitHeader<R, Offset>>::version","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the DWARF version of the debugging info for this type-unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":934854,"byte_end":934873,"line_start":3273,"line_end":3273,"column_start":12,"column_end":31},"name":"debug_abbrev_offset","qualname":"<TypeUnitHeader<R, Offset>>::debug_abbrev_offset","value":"fn (&self) -> DebugAbbrevOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" The offset into the `.debug_abbrev` section for this type-unit's\n debugging information entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1944},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":935033,"byte_end":935045,"line_start":3278,"line_end":3278,"column_start":12,"column_end":24},"name":"address_size","qualname":"<TypeUnitHeader<R, Offset>>::address_size","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The size of addresses (in bytes) in this type-unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":935180,"byte_end":935186,"line_start":3283,"line_end":3283,"column_start":12,"column_end":18},"name":"format","qualname":"<TypeUnitHeader<R, Offset>>::format","value":"fn (&self) -> Format","parent":null,"children":[],"decl_id":null,"docs":" Whether this type unit is encoded in 64- or 32-bit DWARF.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":935315,"byte_end":935326,"line_start":3288,"line_end":3288,"column_start":12,"column_end":23},"name":"header_size","qualname":"<TypeUnitHeader<R, Offset>>::header_size","value":"fn (&self) -> R::Offset","parent":null,"children":[],"decl_id":null,"docs":" The serialized size of the header for this type-unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":935459,"byte_end":935473,"line_start":3293,"line_end":3293,"column_start":12,"column_end":26},"name":"type_signature","qualname":"<TypeUnitHeader<R, Offset>>::type_signature","value":"fn (&self) -> DebugTypeSignature","parent":null,"children":[],"decl_id":null,"docs":" Get the unique type signature for this type unit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":935623,"byte_end":935634,"line_start":3298,"line_end":3298,"column_start":12,"column_end":23},"name":"type_offset","qualname":"<TypeUnitHeader<R, Offset>>::type_offset","value":"fn (&self) -> UnitOffset<R::Offset>","parent":null,"children":[],"decl_id":null,"docs":" Get the offset within this type unit where the type is defined.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":935776,"byte_end":935783,"line_start":3303,"line_end":3303,"column_start":12,"column_end":19},"name":"entries","qualname":"<TypeUnitHeader<R, Offset>>::entries","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations) -> EntriesCursor<'abbrev, 'me, R>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this type unit's `DebuggingInformationEntry`s.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":936069,"byte_end":936086,"line_start":3312,"line_end":3312,"column_start":12,"column_end":29},"name":"entries_at_offset","qualname":"<TypeUnitHeader<R, Offset>>::entries_at_offset","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: UnitOffset<R::Offset>) -> Result<EntriesCursor<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this type unit's `DebuggingInformationEntry`s\n starting at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":936447,"byte_end":936459,"line_start":3322,"line_end":3322,"column_start":12,"column_end":24},"name":"entries_tree","qualname":"<TypeUnitHeader<R, Offset>>::entries_tree","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesTree<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Navigate this type unit's `DebuggingInformationEntry`s as a tree\n starting at the given offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":936784,"byte_end":936795,"line_start":3331,"line_end":3331,"column_start":12,"column_end":23},"name":"entries_raw","qualname":"<TypeUnitHeader<R, Offset>>::entries_raw","value":"fn <'me, 'abbrev> (&'me self, abbreviations: &'abbrev Abbreviations, offset: Option<UnitOffset<R::Offset>>) -> Result<EntriesRaw<'abbrev, 'me, R>>","parent":null,"children":[],"decl_id":null,"docs":" Read the raw data that defines the Debugging Information Entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":939545,"byte_end":939558,"line_start":3421,"line_end":3421,"column_start":12,"column_end":25},"name":"abbreviations","qualname":"<TypeUnitHeader<R, Offset>>::abbreviations","value":"fn (&self, debug_abbrev: &DebugAbbrev<R>) -> Result<Abbreviations>","parent":null,"children":[],"decl_id":null,"docs":" Parse this type unit's abbreviations.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7254},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033376,"byte_end":1033383,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Generic","qualname":"::read::value::ValueType::Generic","value":"ValueType::Generic","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" The generic type, which is address-sized and of unspecified sign,\n as specified in the DWARF 5 standard, section 2.5.1.\n This type is also used to represent address base types.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7256},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033424,"byte_end":1033426,"line_start":32,"line_end":32,"column_start":5,"column_end":7},"name":"I8","qualname":"::read::value::ValueType::I8","value":"ValueType::I8","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" Signed 8-bit integer type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7258},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033469,"byte_end":1033471,"line_start":34,"line_end":34,"column_start":5,"column_end":7},"name":"U8","qualname":"::read::value::ValueType::U8","value":"ValueType::U8","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" Unsigned 8-bit integer type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7260},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033513,"byte_end":1033516,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"I16","qualname":"::read::value::ValueType::I16","value":"ValueType::I16","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" Signed 16-bit integer type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7262},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033560,"byte_end":1033563,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"U16","qualname":"::read::value::ValueType::U16","value":"ValueType::U16","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" Unsigned 16-bit integer type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7264},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033605,"byte_end":1033608,"line_start":40,"line_end":40,"column_start":5,"column_end":8},"name":"I32","qualname":"::read::value::ValueType::I32","value":"ValueType::I32","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" Signed 32-bit integer type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7266},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033652,"byte_end":1033655,"line_start":42,"line_end":42,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::value::ValueType::U32","value":"ValueType::U32","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" Unsigned 32-bit integer type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7268},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033697,"byte_end":1033700,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"I64","qualname":"::read::value::ValueType::I64","value":"ValueType::I64","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" Signed 64-bit integer type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7270},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033744,"byte_end":1033747,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::value::ValueType::U64","value":"ValueType::U64","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" Unsigned 64-bit integer type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7272},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033789,"byte_end":1033792,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"F32","qualname":"::read::value::ValueType::F32","value":"ValueType::F32","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" 32-bit floating point type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7274},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033834,"byte_end":1033837,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"F64","qualname":"::read::value::ValueType::F64","value":"ValueType::F64","parent":{"krate":0,"index":7253},"children":[],"decl_id":null,"docs":" 64-bit floating point type.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7253},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033161,"byte_end":1033170,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::read::value::ValueType","value":"ValueType::{Generic, I8, U8, I16, U16, I32, U32, I64, U64, F32, F64}","parent":null,"children":[{"krate":0,"index":7254},{"krate":0,"index":7256},{"krate":0,"index":7258},{"krate":0,"index":7260},{"krate":0,"index":7262},{"krate":0,"index":7264},{"krate":0,"index":7266},{"krate":0,"index":7268},{"krate":0,"index":7270},{"krate":0,"index":7272},{"krate":0,"index":7274}],"decl_id":null,"docs":" The type of an entry on the DWARF stack.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7288},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034023,"byte_end":1034030,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Generic","qualname":"::read::value::Value::Generic","value":"Value::Generic(u64)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" A generic value, which is address-sized and of unspecified sign.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7291},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034079,"byte_end":1034081,"line_start":59,"line_end":59,"column_start":5,"column_end":7},"name":"I8","qualname":"::read::value::Value::I8","value":"Value::I8(i8)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" A signed 8-bit integer value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7294},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034132,"byte_end":1034134,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"U8","qualname":"::read::value::Value::U8","value":"Value::U8(u8)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" An unsigned 8-bit integer value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7297},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034183,"byte_end":1034186,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"I16","qualname":"::read::value::Value::I16","value":"Value::I16(i16)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" A signed 16-bit integer value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7300},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034239,"byte_end":1034242,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"U16","qualname":"::read::value::Value::U16","value":"Value::U16(u16)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" An unsigned 16-bit integer value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7303},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034292,"byte_end":1034295,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"I32","qualname":"::read::value::Value::I32","value":"Value::I32(i32)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" A signed 32-bit integer value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7306},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034348,"byte_end":1034351,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"U32","qualname":"::read::value::Value::U32","value":"Value::U32(u32)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" An unsigned 32-bit integer value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7309},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034401,"byte_end":1034404,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"I64","qualname":"::read::value::Value::I64","value":"Value::I64(i64)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" A signed 64-bit integer value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7312},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034457,"byte_end":1034460,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"U64","qualname":"::read::value::Value::U64","value":"Value::U64(u64)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" An unsigned 64-bit integer value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7315},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034510,"byte_end":1034513,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"F32","qualname":"::read::value::Value::F32","value":"Value::F32(f32)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" A 32-bit floating point value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7318},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034563,"byte_end":1034566,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"F64","qualname":"::read::value::Value::F64","value":"Value::F64(f64)","parent":{"krate":0,"index":7287},"children":[],"decl_id":null,"docs":" A 64-bit floating point value.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7287},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1033938,"byte_end":1033943,"line_start":55,"line_end":55,"column_start":10,"column_end":15},"name":"Value","qualname":"::read::value::Value","value":"Value::{Generic, I8, U8, I16, U16, I32, U32, I64, U64, F32, F64}","parent":null,"children":[{"krate":0,"index":7288},{"krate":0,"index":7291},{"krate":0,"index":7294},{"krate":0,"index":7297},{"krate":0,"index":7300},{"krate":0,"index":7303},{"krate":0,"index":7306},{"krate":0,"index":7309},{"krate":0,"index":7312},{"krate":0,"index":7315},{"krate":0,"index":7318}],"decl_id":null,"docs":" The value of an entry on the DWARF stack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034655,"byte_end":1034663,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"bit_size","qualname":"<ValueType>::bit_size","value":"fn (self, addr_mask: u64) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size in bits of a value for this type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1035111,"byte_end":1035124,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"from_encoding","qualname":"<ValueType>::from_encoding","value":"fn (encoding: constants::DwAte, byte_size: u64) -> Option<ValueType>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ValueType` from the attributes of a base type DIE.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1035962,"byte_end":1035972,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"from_entry","qualname":"<ValueType>::from_entry","value":"fn <R> (entry: &DebuggingInformationEntry<R>) -> Result<Option<ValueType>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ValueType` from a base type DIE.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1037447,"byte_end":1037457,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"value_type","qualname":"<Value>::value_type","value":"fn (&self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Return the `ValueType` corresponding to this `Value`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1038097,"byte_end":1038102,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"parse","qualname":"<Value>::parse","value":"fn <R> (value_type: ValueType, mut bytes: R) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Read a `Value` with the given `value_type` from a `Reader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1039084,"byte_end":1039090,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Value>::to_u64","value":"fn (self, addr_mask: u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Value` to a `u64`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1039955,"byte_end":1039963,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Value>::from_u64","value":"fn (value_type: ValueType, value: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Value` with the given `value_type` from a `u64` value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1043147,"byte_end":1043154,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"convert","qualname":"<Value>::convert","value":"fn (self, value_type: ValueType, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `Value` to the given `value_type`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1043696,"byte_end":1043707,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"reinterpret","qualname":"<Value>::reinterpret","value":"fn (self, value_type: ValueType, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Reinterpret the bits in a `Value` as the given `value_type`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1045443,"byte_end":1045446,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"abs","qualname":"<Value>::abs","value":"fn (self, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an absolute value operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1046611,"byte_end":1046614,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"neg","qualname":"<Value>::neg","value":"fn (self, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a negation operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1047822,"byte_end":1047825,"line_start":383,"line_end":383,"column_start":12,"column_end":15},"name":"add","qualname":"<Value>::add","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an addition operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1049100,"byte_end":1049103,"line_start":408,"line_end":408,"column_start":12,"column_end":15},"name":"sub","qualname":"<Value>::sub","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a subtraction operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1050379,"byte_end":1050382,"line_start":433,"line_end":433,"column_start":12,"column_end":15},"name":"mul","qualname":"<Value>::mul","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a multiplication operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1051734,"byte_end":1051737,"line_start":459,"line_end":459,"column_start":12,"column_end":15},"name":"div","qualname":"<Value>::div","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a division operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1053695,"byte_end":1053698,"line_start":504,"line_end":504,"column_start":12,"column_end":15},"name":"rem","qualname":"<Value>::rem","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a remainder operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1055534,"byte_end":1055537,"line_start":546,"line_end":546,"column_start":12,"column_end":15},"name":"not","qualname":"<Value>::not","value":"fn (self, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise not operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1055897,"byte_end":1055900,"line_start":557,"line_end":557,"column_start":12,"column_end":15},"name":"and","qualname":"<Value>::and","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise and operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1056416,"byte_end":1056418,"line_start":572,"line_end":572,"column_start":12,"column_end":14},"name":"or","qualname":"<Value>::or","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise or operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1056945,"byte_end":1056948,"line_start":587,"line_end":587,"column_start":12,"column_end":15},"name":"xor","qualname":"<Value>::xor","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a bitwise exclusive-or operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1058381,"byte_end":1058384,"line_start":623,"line_end":623,"column_start":12,"column_end":15},"name":"shl","qualname":"<Value>::shl","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a shift left operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1059931,"byte_end":1059934,"line_start":654,"line_end":654,"column_start":12,"column_end":15},"name":"shr","qualname":"<Value>::shr","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform a logical shift right operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1061527,"byte_end":1061531,"line_start":687,"line_end":687,"column_start":12,"column_end":16},"name":"shra","qualname":"<Value>::shra","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform an arithmetic shift right operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1063677,"byte_end":1063679,"line_start":755,"line_end":755,"column_start":12,"column_end":14},"name":"eq","qualname":"<Value>::eq","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `==` relational operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1064876,"byte_end":1064878,"line_start":781,"line_end":781,"column_start":12,"column_end":14},"name":"ge","qualname":"<Value>::ge","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `>=` relational operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1066074,"byte_end":1066076,"line_start":807,"line_end":807,"column_start":12,"column_end":14},"name":"gt","qualname":"<Value>::gt","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `>` relational operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1067261,"byte_end":1067263,"line_start":833,"line_end":833,"column_start":12,"column_end":14},"name":"le","qualname":"<Value>::le","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `<= relational operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1068458,"byte_end":1068460,"line_start":859,"line_end":859,"column_start":12,"column_end":14},"name":"lt","qualname":"<Value>::lt","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `< relational operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1069645,"byte_end":1069647,"line_start":885,"line_end":885,"column_start":12,"column_end":14},"name":"ne","qualname":"<Value>::ne","value":"fn (self, rhs: Value, addr_mask: u64) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" Perform the `!= relational operation.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2013},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":87262,"byte_end":87271,"line_start":231,"line_end":231,"column_start":10,"column_end":19},"name":"EndianBuf","qualname":"::read::EndianBuf","value":"EndianSlice<'input, Endian>","parent":null,"children":[],"decl_id":null,"docs":" `EndianBuf` has been renamed to `EndianSlice`. For ease of upgrading across\n `gimli` versions, we export this type alias.\n","sig":null,"attributes":[{"value":"deprecated(note =\n             \"EndianBuf has been renamed to EndianSlice, use that instead.\")","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":87168,"byte_end":87252,"line_start":230,"line_end":230,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7331},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":87472,"byte_end":87474,"line_start":237,"line_end":237,"column_start":5,"column_end":7},"name":"Io","qualname":"::read::Error::Io","value":"Error::Io","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An I/O error occurred while reading.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7333},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":87552,"byte_end":87594,"line_start":239,"line_end":239,"column_start":5,"column_end":47},"name":"PcRelativePointerButSectionBaseIsUndefined","qualname":"::read::Error::PcRelativePointerButSectionBaseIsUndefined","value":"Error::PcRelativePointerButSectionBaseIsUndefined","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found a PC relative pointer, but the section base is undefined.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7335},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":87677,"byte_end":87718,"line_start":241,"line_end":241,"column_start":5,"column_end":46},"name":"TextRelativePointerButTextBaseIsUndefined","qualname":"::read::Error::TextRelativePointerButTextBaseIsUndefined","value":"Error::TextRelativePointerButTextBaseIsUndefined","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found a `.text` relative pointer, but the `.text` base is undefined.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7337},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":87795,"byte_end":87836,"line_start":243,"line_end":243,"column_start":5,"column_end":46},"name":"DataRelativePointerButDataBaseIsUndefined","qualname":"::read::Error::DataRelativePointerButDataBaseIsUndefined","value":"Error::DataRelativePointerButDataBaseIsUndefined","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found a data relative pointer, but the data base is undefined.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7339},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":87941,"byte_end":87972,"line_start":246,"line_end":246,"column_start":5,"column_end":36},"name":"FuncRelativePointerInBadContext","qualname":"::read::Error::FuncRelativePointerInBadContext","value":"Error::FuncRelativePointerInBadContext","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found a function relative pointer in a context that does not have a\n function base.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7341},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88042,"byte_end":88072,"line_start":248,"line_end":248,"column_start":5,"column_end":35},"name":"CannotParseOmitPointerEncoding","qualname":"::read::Error::CannotParseOmitPointerEncoding","value":"Error::CannotParseOmitPointerEncoding","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Cannot parse a pointer with a `DW_EH_PE_omit` encoding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7343},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88129,"byte_end":88146,"line_start":250,"line_end":250,"column_start":5,"column_end":22},"name":"BadUnsignedLeb128","qualname":"::read::Error::BadUnsignedLeb128","value":"Error::BadUnsignedLeb128","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An error parsing an unsigned LEB128 value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7345},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88200,"byte_end":88215,"line_start":252,"line_end":252,"column_start":5,"column_end":20},"name":"BadSignedLeb128","qualname":"::read::Error::BadSignedLeb128","value":"Error::BadSignedLeb128","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An error parsing a signed LEB128 value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7347},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88323,"byte_end":88342,"line_start":255,"line_end":255,"column_start":5,"column_end":24},"name":"AbbreviationTagZero","qualname":"::read::Error::AbbreviationTagZero","value":"Error::AbbreviationTagZero","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An abbreviation declared that its tag is zero, but zero is reserved for\n null records.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7349},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88462,"byte_end":88479,"line_start":258,"line_end":258,"column_start":5,"column_end":22},"name":"AttributeFormZero","qualname":"::read::Error::AttributeFormZero","value":"Error::AttributeFormZero","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An attribute specification declared that its form is zero, but zero is\n reserved for null records.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7351},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88577,"byte_end":88591,"line_start":261,"line_end":261,"column_start":5,"column_end":19},"name":"BadHasChildren","qualname":"::read::Error::BadHasChildren","value":"Error::BadHasChildren","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The abbreviation's has-children byte was not one of\n `DW_CHILDREN_{yes,no}`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7353},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88641,"byte_end":88650,"line_start":263,"line_end":263,"column_start":5,"column_end":14},"name":"BadLength","qualname":"::read::Error::BadLength","value":"Error::BadLength","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The specified length is impossible.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7355},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88699,"byte_end":88710,"line_start":265,"line_end":265,"column_start":5,"column_end":16},"name":"UnknownForm","qualname":"::read::Error::UnknownForm","value":"Error::UnknownForm","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found an unknown `DW_FORM_*` type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7357},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88763,"byte_end":88775,"line_start":267,"line_end":267,"column_start":5,"column_end":17},"name":"ExpectedZero","qualname":"::read::Error::ExpectedZero","value":"Error::ExpectedZero","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Expected a zero, found something else.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7359},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88844,"byte_end":88869,"line_start":269,"line_end":269,"column_start":5,"column_end":30},"name":"DuplicateAbbreviationCode","qualname":"::read::Error::DuplicateAbbreviationCode","value":"Error::DuplicateAbbreviationCode","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found an abbreviation code that has already been used.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7361},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88909,"byte_end":88924,"line_start":271,"line_end":271,"column_start":5,"column_end":20},"name":"DuplicateArange","qualname":"::read::Error::DuplicateArange","value":"Error::DuplicateArange","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found a duplicate arange.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7363},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":88978,"byte_end":88999,"line_start":273,"line_end":273,"column_start":5,"column_end":26},"name":"UnknownReservedLength","qualname":"::read::Error::UnknownReservedLength","value":"Error::UnknownReservedLength","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found an unknown reserved length value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7365},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89045,"byte_end":89059,"line_start":275,"line_end":275,"column_start":5,"column_end":19},"name":"UnknownVersion","qualname":"::read::Error::UnknownVersion","value":"Error::UnknownVersion(u64)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found an unknown DWARF version.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7368},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89128,"byte_end":89147,"line_start":277,"line_end":277,"column_start":5,"column_end":24},"name":"UnknownAbbreviation","qualname":"::read::Error::UnknownAbbreviation","value":"Error::UnknownAbbreviation","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found a record with an unknown abbreviation code.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7370},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89206,"byte_end":89219,"line_start":279,"line_end":279,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::read::Error::UnexpectedEof","value":"Error::UnexpectedEof(ReaderOffsetId)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Hit the end of input before it was expected.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7373},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89291,"byte_end":89305,"line_start":281,"line_end":281,"column_start":5,"column_end":19},"name":"UnexpectedNull","qualname":"::read::Error::UnexpectedNull","value":"Error::UnexpectedNull","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Read a null entry before it was expected.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7375},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89353,"byte_end":89374,"line_start":283,"line_end":283,"column_start":5,"column_end":26},"name":"UnknownStandardOpcode","qualname":"::read::Error::UnknownStandardOpcode","value":"Error::UnknownStandardOpcode(constants::DwLns)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found an unknown standard opcode.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7378},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89440,"byte_end":89461,"line_start":285,"line_end":285,"column_start":5,"column_end":26},"name":"UnknownExtendedOpcode","qualname":"::read::Error::UnknownExtendedOpcode","value":"Error::UnknownExtendedOpcode(constants::DwLne)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found an unknown extended opcode.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7381},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89538,"byte_end":89560,"line_start":287,"line_end":287,"column_start":5,"column_end":27},"name":"UnsupportedAddressSize","qualname":"::read::Error::UnsupportedAddressSize","value":"Error::UnsupportedAddressSize(u8)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The specified address size is not supported.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7384},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89622,"byte_end":89643,"line_start":289,"line_end":289,"column_start":5,"column_end":26},"name":"UnsupportedOffsetSize","qualname":"::read::Error::UnsupportedOffsetSize","value":"Error::UnsupportedOffsetSize(u8)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The specified offset size is not supported.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7387},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89704,"byte_end":89724,"line_start":291,"line_end":291,"column_start":5,"column_end":25},"name":"UnsupportedFieldSize","qualname":"::read::Error::UnsupportedFieldSize","value":"Error::UnsupportedFieldSize(u8)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The specified field size is not supported.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7390},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89791,"byte_end":89819,"line_start":293,"line_end":293,"column_start":5,"column_end":33},"name":"MinimumInstructionLengthZero","qualname":"::read::Error::MinimumInstructionLengthZero","value":"Error::MinimumInstructionLengthZero","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The minimum instruction length must not be zero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7392},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89890,"byte_end":89925,"line_start":295,"line_end":295,"column_start":5,"column_end":40},"name":"MaximumOperationsPerInstructionZero","qualname":"::read::Error::MaximumOperationsPerInstructionZero","value":"Error::MaximumOperationsPerInstructionZero","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The maximum operations per instruction must not be zero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7394},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":89972,"byte_end":89985,"line_start":297,"line_end":297,"column_start":5,"column_end":18},"name":"LineRangeZero","qualname":"::read::Error::LineRangeZero","value":"Error::LineRangeZero","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The line range must not be zero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7396},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90033,"byte_end":90047,"line_start":299,"line_end":299,"column_start":5,"column_end":19},"name":"OpcodeBaseZero","qualname":"::read::Error::OpcodeBaseZero","value":"Error::OpcodeBaseZero","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The opcode base must not be zero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7398},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90092,"byte_end":90099,"line_start":301,"line_end":301,"column_start":5,"column_end":12},"name":"BadUtf8","qualname":"::read::Error::BadUtf8","value":"Error::BadUtf8","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found an invalid UTF-8 string.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7400},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90168,"byte_end":90176,"line_start":303,"line_end":303,"column_start":5,"column_end":13},"name":"NotCieId","qualname":"::read::Error::NotCieId","value":"Error::NotCieId","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Expected to find the CIE ID, but found something else.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7402},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90257,"byte_end":90270,"line_start":305,"line_end":305,"column_start":5,"column_end":18},"name":"NotCiePointer","qualname":"::read::Error::NotCiePointer","value":"Error::NotCiePointer","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Expected to find a pointer to a CIE, but found the CIE ID instead.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7404},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90347,"byte_end":90360,"line_start":307,"line_end":307,"column_start":5,"column_end":18},"name":"NotFdePointer","qualname":"::read::Error::NotFdePointer","value":"Error::NotFdePointer","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Expected to find a pointer to an FDE, but found a CIE instead.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7406},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90427,"byte_end":90442,"line_start":309,"line_end":309,"column_start":5,"column_end":20},"name":"BadBranchTarget","qualname":"::read::Error::BadBranchTarget","value":"Error::BadBranchTarget(u64)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Invalid branch target for a DW_OP_bra or DW_OP_skip.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7409},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90518,"byte_end":90542,"line_start":311,"line_end":311,"column_start":5,"column_end":29},"name":"InvalidPushObjectAddress","qualname":"::read::Error::InvalidPushObjectAddress","value":"Error::InvalidPushObjectAddress","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" DW_OP_push_object_address used but no address passed in.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7411},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90617,"byte_end":90636,"line_start":313,"line_end":313,"column_start":5,"column_end":24},"name":"NotEnoughStackItems","qualname":"::read::Error::NotEnoughStackItems","value":"Error::NotEnoughStackItems","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Not enough items on the stack when evaluating an expression.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7413},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90697,"byte_end":90714,"line_start":315,"line_end":315,"column_start":5,"column_end":22},"name":"TooManyIterations","qualname":"::read::Error::TooManyIterations","value":"Error::TooManyIterations","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Too many iterations to compute the expression.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7415},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90806,"byte_end":90823,"line_start":318,"line_end":318,"column_start":5,"column_end":22},"name":"InvalidExpression","qualname":"::read::Error::InvalidExpression","value":"Error::InvalidExpression(constants::DwOp)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An unrecognized operation was found while parsing a DWARF\n expression.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7418},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":90943,"byte_end":90955,"line_start":321,"line_end":321,"column_start":5,"column_end":17},"name":"InvalidPiece","qualname":"::read::Error::InvalidPiece","value":"Error::InvalidPiece","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The expression had a piece followed by an expression\n terminator without a piece.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7420},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91098,"byte_end":91125,"line_start":324,"line_end":324,"column_start":5,"column_end":32},"name":"InvalidExpressionTerminator","qualname":"::read::Error::InvalidExpressionTerminator","value":"Error::InvalidExpressionTerminator(u64)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An expression-terminating operation was followed by something\n other than the end of the expression or a piece operation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7423},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91203,"byte_end":91217,"line_start":326,"line_end":326,"column_start":5,"column_end":19},"name":"DivisionByZero","qualname":"::read::Error::DivisionByZero","value":"Error::DivisionByZero","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Division or modulus by zero when evaluating an expression.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7425},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91279,"byte_end":91291,"line_start":328,"line_end":328,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::read::Error::TypeMismatch","value":"Error::TypeMismatch","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An expression operation used mismatching types.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7427},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91394,"byte_end":91414,"line_start":331,"line_end":331,"column_start":5,"column_end":25},"name":"IntegralTypeRequired","qualname":"::read::Error::IntegralTypeRequired","value":"Error::IntegralTypeRequired","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An expression operation required an integral type but saw a\n floating point type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7429},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91487,"byte_end":91511,"line_start":333,"line_end":333,"column_start":5,"column_end":29},"name":"UnsupportedTypeOperation","qualname":"::read::Error::UnsupportedTypeOperation","value":"Error::UnsupportedTypeOperation","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An expression operation used types that are not supported.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7431},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91590,"byte_end":91612,"line_start":335,"line_end":335,"column_start":5,"column_end":27},"name":"InvalidShiftExpression","qualname":"::read::Error::InvalidShiftExpression","value":"Error::InvalidShiftExpression","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The shift value in an expression must be a non-negative integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7433},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91659,"byte_end":91686,"line_start":337,"line_end":337,"column_start":5,"column_end":32},"name":"UnknownCallFrameInstruction","qualname":"::read::Error::UnknownCallFrameInstruction","value":"Error::UnknownCallFrameInstruction(constants::DwCfa)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An unknown DW_CFA_* instruction.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7436},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91772,"byte_end":91791,"line_start":339,"line_end":339,"column_start":5,"column_end":24},"name":"InvalidAddressRange","qualname":"::read::Error::InvalidAddressRange","value":"Error::InvalidAddressRange","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The end of an address range was before the beginning.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7438},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91866,"byte_end":91893,"line_start":341,"line_end":341,"column_start":5,"column_end":32},"name":"InvalidLocationAddressRange","qualname":"::read::Error::InvalidLocationAddressRange","value":"Error::InvalidLocationAddressRange","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The end offset of a loc list entry was before the beginning.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7440},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":91991,"byte_end":92021,"line_start":344,"line_end":344,"column_start":5,"column_end":35},"name":"CfiInstructionInInvalidContext","qualname":"::read::Error::CfiInstructionInInvalidContext","value":"Error::CfiInstructionInInvalidContext","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Encountered a call frame instruction in a context in which it is not\n valid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7442},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92187,"byte_end":92204,"line_start":347,"line_end":347,"column_start":5,"column_end":22},"name":"PopWithEmptyStack","qualname":"::read::Error::PopWithEmptyStack","value":"Error::PopWithEmptyStack","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" When evaluating call frame instructions, found a `DW_CFA_restore_state`\n stack pop instruction, but the stack was empty, and had nothing to pop.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7444},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92265,"byte_end":92287,"line_start":349,"line_end":349,"column_start":5,"column_end":27},"name":"NoUnwindInfoForAddress","qualname":"::read::Error::NoUnwindInfoForAddress","value":"Error::NoUnwindInfoForAddress","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Do not have unwind info for the given address.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7446},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92362,"byte_end":92379,"line_start":351,"line_end":351,"column_start":5,"column_end":22},"name":"UnsupportedOffset","qualname":"::read::Error::UnsupportedOffset","value":"Error::UnsupportedOffset","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" An offset value was larger than the maximum supported value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7448},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92450,"byte_end":92472,"line_start":353,"line_end":353,"column_start":5,"column_end":27},"name":"UnknownPointerEncoding","qualname":"::read::Error::UnknownPointerEncoding","value":"Error::UnknownPointerEncoding","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The given pointer encoding is either unknown or invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7450},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92529,"byte_end":92549,"line_start":355,"line_end":355,"column_start":5,"column_end":25},"name":"NoEntryAtGivenOffset","qualname":"::read::Error::NoEntryAtGivenOffset","value":"Error::NoEntryAtGivenOffset","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Did not find an entry at the given offset.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7452},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92598,"byte_end":92615,"line_start":357,"line_end":357,"column_start":5,"column_end":22},"name":"OffsetOutOfBounds","qualname":"::read::Error::OffsetOutOfBounds","value":"Error::OffsetOutOfBounds","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The given offset is out of bounds.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7454},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92664,"byte_end":92683,"line_start":359,"line_end":359,"column_start":5,"column_end":24},"name":"UnknownAugmentation","qualname":"::read::Error::UnknownAugmentation","value":"Error::UnknownAugmentation","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Found an unknown CFI augmentation.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7456},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92747,"byte_end":92773,"line_start":361,"line_end":361,"column_start":5,"column_end":31},"name":"UnsupportedPointerEncoding","qualname":"::read::Error::UnsupportedPointerEncoding","value":"Error::UnsupportedPointerEncoding","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" We do not support the given pointer encoding yet.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7458},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92834,"byte_end":92853,"line_start":363,"line_end":363,"column_start":5,"column_end":24},"name":"UnsupportedRegister","qualname":"::read::Error::UnsupportedRegister","value":"Error::UnsupportedRegister(u64)","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Registers larger than `u16` are not supported.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7461},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":92942,"byte_end":92962,"line_start":365,"line_end":365,"column_start":5,"column_end":25},"name":"TooManyRegisterRules","qualname":"::read::Error::TooManyRegisterRules","value":"Error::TooManyRegisterRules","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The CFI program defined more register rules than we have storage for.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7463},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93059,"byte_end":93071,"line_start":368,"line_end":368,"column_start":5,"column_end":17},"name":"CfiStackFull","qualname":"::read::Error::CfiStackFull","value":"Error::CfiStackFull","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Attempted to push onto the CFI stack, but it was already at full\n capacity.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7465},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93209,"byte_end":93234,"line_start":371,"line_end":371,"column_start":5,"column_end":30},"name":"VariableLengthSearchTable","qualname":"::read::Error::VariableLengthSearchTable","value":"Error::VariableLengthSearchTable","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The `.eh_frame_hdr` binary search table claims to be variable-length encoded,\n which makes binary search impossible.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7467},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93304,"byte_end":93323,"line_start":373,"line_end":373,"column_start":5,"column_end":24},"name":"UnsupportedUnitType","qualname":"::read::Error::UnsupportedUnitType","value":"Error::UnsupportedUnitType","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" The `DW_UT_*` value for this unit is not supported yet.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7469},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93386,"byte_end":93409,"line_start":375,"line_end":375,"column_start":5,"column_end":28},"name":"UnsupportedAddressIndex","qualname":"::read::Error::UnsupportedAddressIndex","value":"Error::UnsupportedAddressIndex","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Ranges using AddressIndex are not supported yet.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7471},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93476,"byte_end":93498,"line_start":377,"line_end":377,"column_start":5,"column_end":27},"name":"UnsupportedSegmentSize","qualname":"::read::Error::UnsupportedSegmentSize","value":"Error::UnsupportedSegmentSize","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Nonzero segment selector sizes aren't supported yet.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7473},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93574,"byte_end":93588,"line_start":379,"line_end":379,"column_start":5,"column_end":19},"name":"MissingUnitDie","qualname":"::read::Error::MissingUnitDie","value":"Error::MissingUnitDie","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" A compilation unit or type unit is missing its top level DIE.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7475},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93644,"byte_end":93668,"line_start":381,"line_end":381,"column_start":5,"column_end":29},"name":"UnsupportedAttributeForm","qualname":"::read::Error::UnsupportedAttributeForm","value":"Error::UnsupportedAttributeForm","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" A DIE attribute used an unsupported form.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7477},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93725,"byte_end":93751,"line_start":383,"line_end":383,"column_start":5,"column_end":31},"name":"MissingFileEntryFormatPath","qualname":"::read::Error::MissingFileEntryFormatPath","value":"Error::MissingFileEntryFormatPath","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Missing DW_LNCT_path in file entry format.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7479},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93814,"byte_end":93842,"line_start":385,"line_end":385,"column_start":5,"column_end":33},"name":"ExpectedStringAttributeValue","qualname":"::read::Error::ExpectedStringAttributeValue","value":"Error::ExpectedStringAttributeValue","parent":{"krate":0,"index":7330},"children":[],"decl_id":null,"docs":" Expected an attribute value to be a string form.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7330},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":87415,"byte_end":87420,"line_start":235,"line_end":235,"column_start":10,"column_end":15},"name":"Error","qualname":"::read::Error","value":"Error::{Io, PcRelativePointerButSectionBaseIsUndefined, TextRelativePointerButTextBaseIsUndefined, DataRelativePointerButDataBaseIsUndefined, FuncRelativePointerInBadContext, CannotParseOmitPointerEncoding, BadUnsignedLeb128, BadSignedLeb128, AbbreviationTagZero, AttributeFormZero, BadHasChildren, BadLength, UnknownForm, ExpectedZero, DuplicateAbbreviationCode, DuplicateArange, UnknownReservedLength, UnknownVersion, UnknownAbbreviation, UnexpectedEof, UnexpectedNull, UnknownStandardOpcode, UnknownExtendedOpcode, UnsupportedAddressSize, UnsupportedOffsetSize, UnsupportedFieldSize, MinimumInstructionLengthZero, MaximumOperationsPerInstructionZero, LineRangeZero, OpcodeBaseZero, BadUtf8, NotCieId, NotCiePointer, NotFdePointer, BadBranchTarget, InvalidPushObjectAddress, NotEnoughStackItems, TooManyIterations, InvalidExpression, InvalidPiece, InvalidExpressionTerminator, DivisionByZero, TypeMismatch, IntegralTypeRequired, UnsupportedTypeOperation, InvalidShiftExpression, UnknownCallFrameInstruction, InvalidAddressRange, InvalidLocationAddressRange, CfiInstructionInInvalidContext, PopWithEmptyStack, NoUnwindInfoForAddress, UnsupportedOffset, UnknownPointerEncoding, NoEntryAtGivenOffset, OffsetOutOfBounds, UnknownAugmentation, UnsupportedPointerEncoding, UnsupportedRegister, TooManyRegisterRules, CfiStackFull, VariableLengthSearchTable, UnsupportedUnitType, UnsupportedAddressIndex, UnsupportedSegmentSize, MissingUnitDie, UnsupportedAttributeForm, MissingFileEntryFormatPath, ExpectedStringAttributeValue}","parent":null,"children":[{"krate":0,"index":7331},{"krate":0,"index":7333},{"krate":0,"index":7335},{"krate":0,"index":7337},{"krate":0,"index":7339},{"krate":0,"index":7341},{"krate":0,"index":7343},{"krate":0,"index":7345},{"krate":0,"index":7347},{"krate":0,"index":7349},{"krate":0,"index":7351},{"krate":0,"index":7353},{"krate":0,"index":7355},{"krate":0,"index":7357},{"krate":0,"index":7359},{"krate":0,"index":7361},{"krate":0,"index":7363},{"krate":0,"index":7365},{"krate":0,"index":7368},{"krate":0,"index":7370},{"krate":0,"index":7373},{"krate":0,"index":7375},{"krate":0,"index":7378},{"krate":0,"index":7381},{"krate":0,"index":7384},{"krate":0,"index":7387},{"krate":0,"index":7390},{"krate":0,"index":7392},{"krate":0,"index":7394},{"krate":0,"index":7396},{"krate":0,"index":7398},{"krate":0,"index":7400},{"krate":0,"index":7402},{"krate":0,"index":7404},{"krate":0,"index":7406},{"krate":0,"index":7409},{"krate":0,"index":7411},{"krate":0,"index":7413},{"krate":0,"index":7415},{"krate":0,"index":7418},{"krate":0,"index":7420},{"krate":0,"index":7423},{"krate":0,"index":7425},{"krate":0,"index":7427},{"krate":0,"index":7429},{"krate":0,"index":7431},{"krate":0,"index":7433},{"krate":0,"index":7436},{"krate":0,"index":7438},{"krate":0,"index":7440},{"krate":0,"index":7442},{"krate":0,"index":7444},{"krate":0,"index":7446},{"krate":0,"index":7448},{"krate":0,"index":7450},{"krate":0,"index":7452},{"krate":0,"index":7454},{"krate":0,"index":7456},{"krate":0,"index":7458},{"krate":0,"index":7461},{"krate":0,"index":7463},{"krate":0,"index":7465},{"krate":0,"index":7467},{"krate":0,"index":7469},{"krate":0,"index":7471},{"krate":0,"index":7473},{"krate":0,"index":7475},{"krate":0,"index":7477},{"krate":0,"index":7479}],"decl_id":null,"docs":" An error that occurred when parsing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":94096,"byte_end":94107,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"name":"description","qualname":"<Error>::description","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" A short description of the error.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2020},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":102205,"byte_end":102211,"line_start":544,"line_end":544,"column_start":10,"column_end":16},"name":"Result","qualname":"::read::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a parse.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2022},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":102665,"byte_end":102672,"line_start":558,"line_end":558,"column_start":11,"column_end":18},"name":"Section","qualname":"::read::Section","value":"Section<R>: From<R>","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2029},{"krate":0,"index":2030}],"decl_id":null,"docs":" A convenience trait for loading DWARF sections from object files.  To be\n used like:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":102740,"byte_end":102742,"line_start":560,"line_end":560,"column_start":8,"column_end":10},"name":"id","qualname":"::read::Section::id","value":"fn () -> SectionId","parent":{"krate":0,"index":2022},"children":[],"decl_id":null,"docs":" Returns the section id for this type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":102819,"byte_end":102831,"line_start":563,"line_end":563,"column_start":8,"column_end":20},"name":"section_name","qualname":"::read::Section::section_name","value":"fn () -> &'static str","parent":{"krate":0,"index":2022},"children":[],"decl_id":null,"docs":" Returns the ELF section name for this type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":102957,"byte_end":102961,"line_start":568,"line_end":568,"column_start":8,"column_end":12},"name":"load","qualname":"::read::Section::load","value":"fn <F, E> (f: F) -> core::result::Result<Self, E>","parent":{"krate":0,"index":2022},"children":[],"decl_id":null,"docs":" Try to load the section using the given loader function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":103182,"byte_end":103188,"line_start":576,"line_end":576,"column_start":8,"column_end":14},"name":"reader","qualname":"::read::Section::reader","value":"fn (&self) -> &R","parent":{"krate":0,"index":2022},"children":[],"decl_id":null,"docs":" Returns the `Reader` for this section.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":103286,"byte_end":103302,"line_start":581,"line_end":581,"column_start":8,"column_end":24},"name":"lookup_offset_id","qualname":"::read::Section::lookup_offset_id","value":"fn (&self, id: ReaderOffsetId) -> Option<(SectionId, R::Offset)>","parent":{"krate":0,"index":2022},"children":[],"decl_id":null,"docs":" Returns the `Reader` for this section.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":2352,"byte_end":2358,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":4101,"byte_end":4113,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8041,"byte_end":8057,"line_start":172,"line_end":172,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8302,"byte_end":8315,"line_start":183,"line_end":183,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9967,"byte_end":9976,"line_start":244,"line_end":244,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40621,"byte_end":40627,"line_start":836,"line_end":836,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52401,"byte_end":52407,"line_start":1287,"line_end":1287,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":59549,"byte_end":59562,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":59828,"byte_end":59841,"line_start":197,"line_end":197,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60066,"byte_end":60078,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60179,"byte_end":60191,"line_start":215,"line_end":215,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60386,"byte_end":60395,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60490,"byte_end":60499,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":109242,"byte_end":109251,"line_start":10,"line_end":10,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":110549,"byte_end":110558,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":111371,"byte_end":111380,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":111529,"byte_end":111538,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":114623,"byte_end":114633,"line_start":34,"line_end":34,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":115193,"byte_end":115203,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":116033,"byte_end":116043,"line_start":76,"line_end":76,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":116201,"byte_end":116211,"line_start":86,"line_end":86,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":117084,"byte_end":117094,"line_start":116,"line_end":116,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":117391,"byte_end":117401,"line_start":126,"line_end":126,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":119140,"byte_end":119150,"line_start":175,"line_end":175,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":119302,"byte_end":119312,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":119405,"byte_end":119421,"line_start":191,"line_end":191,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":120734,"byte_end":120744,"line_start":222,"line_end":222,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":127101,"byte_end":127108,"line_start":407,"line_end":407,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":127350,"byte_end":127357,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128191,"byte_end":128198,"line_start":440,"line_end":440,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128353,"byte_end":128360,"line_start":450,"line_end":450,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":129137,"byte_end":129153,"line_start":481,"line_end":481,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":129277,"byte_end":129290,"line_start":491,"line_end":491,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":136903,"byte_end":136913,"line_start":693,"line_end":693,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":137856,"byte_end":137866,"line_start":733,"line_end":733,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":137967,"byte_end":137974,"line_start":737,"line_end":737,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":138783,"byte_end":138790,"line_start":773,"line_end":773,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":140938,"byte_end":140951,"line_start":831,"line_end":831,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":143646,"byte_end":143660,"line_start":913,"line_end":913,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":149339,"byte_end":149351,"line_start":1062,"line_end":1062,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":151884,"byte_end":151900,"line_start":1135,"line_end":1135,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":155415,"byte_end":155437,"line_start":1220,"line_end":1220,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":158011,"byte_end":158033,"line_start":1304,"line_end":1304,"column_start":17,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":162620,"byte_end":162648,"line_start":1443,"line_end":1443,"column_start":26,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":165456,"byte_end":165477,"line_start":1525,"line_end":1525,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":169510,"byte_end":169531,"line_start":1646,"line_end":1646,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":173973,"byte_end":173999,"line_start":1768,"line_end":1768,"column_start":17,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":174215,"byte_end":174241,"line_start":1775,"line_end":1775,"column_start":29,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":174465,"byte_end":174491,"line_start":1785,"line_end":1785,"column_start":17,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":176156,"byte_end":176169,"line_start":1831,"line_end":1831,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":179263,"byte_end":179276,"line_start":1944,"line_end":1944,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":182638,"byte_end":182649,"line_start":2023,"line_end":2023,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":193879,"byte_end":193894,"line_start":2318,"line_end":2318,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":194107,"byte_end":194122,"line_start":2326,"line_end":2326,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":194310,"byte_end":194325,"line_start":2335,"line_end":2335,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":194585,"byte_end":194600,"line_start":2345,"line_end":2345,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":194824,"byte_end":194839,"line_start":2355,"line_end":2355,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":198273,"byte_end":198288,"line_start":2454,"line_end":2454,"column_start":63,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":198861,"byte_end":198876,"line_start":2474,"line_end":2474,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":199377,"byte_end":199392,"line_start":2497,"line_end":2497,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":199644,"byte_end":199660,"line_start":2505,"line_end":2505,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":200191,"byte_end":200205,"line_start":2524,"line_end":2524,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":200468,"byte_end":200482,"line_start":2536,"line_end":2536,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":206936,"byte_end":206943,"line_start":2662,"line_end":2662,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":207106,"byte_end":207113,"line_start":2671,"line_end":2671,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":208915,"byte_end":208927,"line_start":2723,"line_end":2723,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":220791,"byte_end":220811,"line_start":3022,"line_end":3022,"column_start":17,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":228928,"byte_end":228952,"line_start":3234,"line_end":3234,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":230608,"byte_end":230615,"line_start":3291,"line_end":3291,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":230714,"byte_end":230721,"line_start":3298,"line_end":3298,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":230870,"byte_end":230877,"line_start":3307,"line_end":3307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":370551,"byte_end":370556,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":374367,"byte_end":374372,"line_start":137,"line_end":137,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":388312,"byte_end":388316,"line_start":517,"line_end":517,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":393932,"byte_end":393949,"line_start":668,"line_end":668,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":395041,"byte_end":395051,"line_start":698,"line_end":698,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":396134,"byte_end":396143,"line_start":730,"line_end":730,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":396249,"byte_end":396258,"line_start":736,"line_end":736,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399126,"byte_end":399137,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":401961,"byte_end":401972,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":403879,"byte_end":403890,"line_start":167,"line_end":167,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":404094,"byte_end":404105,"line_start":177,"line_end":177,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":404304,"byte_end":404315,"line_start":187,"line_end":187,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":404498,"byte_end":404509,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":404653,"byte_end":404664,"line_start":206,"line_end":206,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":422550,"byte_end":422561,"line_start":22,"line_end":22,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":423390,"byte_end":423401,"line_start":45,"line_end":45,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":423875,"byte_end":423886,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":424718,"byte_end":424729,"line_start":84,"line_end":84,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":424893,"byte_end":424904,"line_start":94,"line_end":94,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":425346,"byte_end":425359,"line_start":113,"line_end":113,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":428055,"byte_end":428067,"line_start":189,"line_end":189,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":431074,"byte_end":431084,"line_start":296,"line_end":296,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":431987,"byte_end":431997,"line_start":327,"line_end":327,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432116,"byte_end":432126,"line_start":333,"line_end":333,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432225,"byte_end":432235,"line_start":339,"line_end":339,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432255,"byte_end":432265,"line_start":341,"line_end":341,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432554,"byte_end":432564,"line_start":351,"line_end":351,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432863,"byte_end":432873,"line_start":364,"line_end":364,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":433250,"byte_end":433272,"line_start":379,"line_end":379,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454147,"byte_end":454158,"line_start":28,"line_end":28,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454770,"byte_end":454781,"line_start":54,"line_end":54,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454926,"byte_end":454937,"line_start":60,"line_end":60,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":455386,"byte_end":455398,"line_start":76,"line_end":76,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":458712,"byte_end":458724,"line_start":169,"line_end":169,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":459537,"byte_end":459549,"line_start":193,"line_end":193,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":460228,"byte_end":460240,"line_start":213,"line_end":213,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":460402,"byte_end":460414,"line_start":223,"line_end":223,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":460816,"byte_end":460831,"line_start":236,"line_end":236,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":467341,"byte_end":467350,"line_start":20,"line_end":20,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":468159,"byte_end":468168,"line_start":43,"line_end":43,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":469807,"byte_end":469816,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":470640,"byte_end":470649,"line_start":107,"line_end":107,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":470809,"byte_end":470818,"line_start":117,"line_end":117,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":471725,"byte_end":471746,"line_start":141,"line_end":141,"column_start":44,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":473441,"byte_end":473449,"line_start":194,"line_end":194,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":482160,"byte_end":482175,"line_start":404,"line_end":404,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":486825,"byte_end":486840,"line_start":522,"line_end":522,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":489999,"byte_end":490015,"line_start":588,"line_end":588,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":490313,"byte_end":490329,"line_start":597,"line_end":597,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":492010,"byte_end":492017,"line_start":651,"line_end":651,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":506917,"byte_end":506934,"line_start":1076,"line_end":1076,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":518927,"byte_end":518948,"line_start":1438,"line_end":1438,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":522239,"byte_end":522258,"line_start":1531,"line_end":1531,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":523833,"byte_end":523842,"line_start":1584,"line_end":1584,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":527127,"byte_end":527142,"line_start":1682,"line_end":1682,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":573586,"byte_end":573594,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":574380,"byte_end":574388,"line_start":41,"line_end":41,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":574536,"byte_end":574544,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":574832,"byte_end":574845,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":575671,"byte_end":575684,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":575837,"byte_end":575850,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":576060,"byte_end":576074,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":576338,"byte_end":576352,"line_start":122,"line_end":122,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":577646,"byte_end":577659,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":577985,"byte_end":577998,"line_start":179,"line_end":179,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":578941,"byte_end":578954,"line_start":206,"line_end":206,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":584163,"byte_end":584178,"line_start":378,"line_end":378,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":587060,"byte_end":587074,"line_start":440,"line_end":440,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":588533,"byte_end":588544,"line_start":490,"line_end":490,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":621930,"byte_end":621941,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":622161,"byte_end":622172,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":622738,"byte_end":622753,"line_start":81,"line_end":81,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":625047,"byte_end":625061,"line_start":155,"line_end":155,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":636842,"byte_end":636850,"line_start":302,"line_end":302,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":638814,"byte_end":638823,"line_start":360,"line_end":360,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":660014,"byte_end":660024,"line_start":865,"line_end":865,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":661358,"byte_end":661371,"line_start":905,"line_end":905,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":664662,"byte_end":664672,"line_start":998,"line_end":998,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":763426,"byte_end":763439,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":764030,"byte_end":764043,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":764567,"byte_end":764580,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":765419,"byte_end":765432,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":766132,"byte_end":766145,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":766308,"byte_end":766321,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":766750,"byte_end":766767,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":768027,"byte_end":768040,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":768667,"byte_end":768680,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":769200,"byte_end":769213,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":770036,"byte_end":770049,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":770749,"byte_end":770762,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":770925,"byte_end":770938,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":771367,"byte_end":771384,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":772678,"byte_end":772689,"line_start":17,"line_end":17,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":773499,"byte_end":773510,"line_start":40,"line_end":40,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":773661,"byte_end":773672,"line_start":50,"line_end":50,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":773955,"byte_end":773968,"line_start":63,"line_end":63,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":774806,"byte_end":774819,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":774972,"byte_end":774985,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":775195,"byte_end":775209,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":775473,"byte_end":775487,"line_start":122,"line_end":122,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":776787,"byte_end":776797,"line_start":168,"line_end":168,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":777126,"byte_end":777136,"line_start":179,"line_end":179,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":778073,"byte_end":778083,"line_start":206,"line_end":206,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":782759,"byte_end":782774,"line_start":358,"line_end":358,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":785163,"byte_end":785177,"line_start":409,"line_end":409,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":786637,"byte_end":786648,"line_start":459,"line_end":459,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":789677,"byte_end":789685,"line_start":551,"line_end":551,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":790901,"byte_end":790906,"line_start":590,"line_end":590,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":814206,"byte_end":814214,"line_start":15,"line_end":15,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":815013,"byte_end":815021,"line_start":38,"line_end":38,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":815788,"byte_end":815796,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":816616,"byte_end":816624,"line_start":82,"line_end":82,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":816782,"byte_end":816790,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1588}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":817052,"byte_end":817067,"line_start":104,"line_end":104,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":818423,"byte_end":818438,"line_start":136,"line_end":136,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":819269,"byte_end":819284,"line_start":160,"line_end":160,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":819439,"byte_end":819454,"line_start":170,"line_end":170,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":819745,"byte_end":819757,"line_start":183,"line_end":183,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":820063,"byte_end":820075,"line_start":192,"line_end":192,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":820897,"byte_end":820909,"line_start":216,"line_end":216,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":821061,"byte_end":821073,"line_start":226,"line_end":226,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":823511,"byte_end":823527,"line_start":21,"line_end":21,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":824171,"byte_end":824186,"line_start":40,"line_end":40,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":825004,"byte_end":825014,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":825944,"byte_end":825953,"line_start":90,"line_end":90,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":826762,"byte_end":826771,"line_start":113,"line_end":113,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":828029,"byte_end":828038,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":828862,"byte_end":828871,"line_start":176,"line_end":176,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":829031,"byte_end":829040,"line_start":186,"line_end":186,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":829472,"byte_end":829498,"line_start":202,"line_end":202,"column_start":17,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":830782,"byte_end":830803,"line_start":244,"line_end":244,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":838572,"byte_end":838582,"line_start":488,"line_end":488,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":839504,"byte_end":839514,"line_start":521,"line_end":521,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1777},{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":847135,"byte_end":847160,"line_start":747,"line_end":747,"column_start":33,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862720,"byte_end":862729,"line_start":1200,"line_end":1200,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":884675,"byte_end":884689,"line_start":1873,"line_end":1873,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":901532,"byte_end":901541,"line_start":2280,"line_end":2280,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":905847,"byte_end":905857,"line_start":2397,"line_end":2397,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":908583,"byte_end":908596,"line_start":2473,"line_end":2473,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":921593,"byte_end":921604,"line_start":2859,"line_end":2859,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":925781,"byte_end":925796,"line_start":2984,"line_end":2984,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":927006,"byte_end":927021,"line_start":3020,"line_end":3020,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":928421,"byte_end":928431,"line_start":3065,"line_end":3065,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":929242,"byte_end":929252,"line_start":3088,"line_end":3088,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":930080,"byte_end":930090,"line_start":3112,"line_end":3112,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":930252,"byte_end":930262,"line_start":3122,"line_end":3122,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":930403,"byte_end":930413,"line_start":3130,"line_end":3130,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":931574,"byte_end":931593,"line_start":3167,"line_end":3167,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":932912,"byte_end":932926,"line_start":3211,"line_end":3211,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034581,"byte_end":1034590,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1037366,"byte_end":1037371,"line_start":151,"line_end":151,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93869,"byte_end":93874,"line_start":388,"line_end":388,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":94035,"byte_end":94040,"line_start":395,"line_end":395,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":103517,"byte_end":103525,"line_start":591,"line_end":591,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2033}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1759,"byte_end":1768,"line_start":56,"line_end":56,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":33}},{"kind":"Mod","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1942,"byte_end":1948,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":89}},{"kind":"Mod","span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/lib.rs","byte_start":1984,"byte_end":1988,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":109}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":2352,"byte_end":2358,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":4101,"byte_end":4113,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2075},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8041,"byte_end":8057,"line_start":172,"line_end":172,"column_start":21,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2602},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":8302,"byte_end":8315,"line_start":183,"line_end":183,"column_start":21,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2629},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/common.rs","byte_start":9967,"byte_end":9976,"line_start":244,"line_end":244,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":40621,"byte_end":40627,"line_start":836,"line_end":836,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/constants.rs","byte_start":52401,"byte_end":52407,"line_start":1287,"line_end":1287,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55230,"byte_end":55235,"line_start":7,"line_end":7,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":7573},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55238,"byte_end":55245,"line_start":7,"line_end":7,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":2210},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55248,"byte_end":55253,"line_start":7,"line_end":7,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":2185},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55256,"byte_end":55260,"line_start":7,"line_end":7,"column_start":48,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":1548},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55263,"byte_end":55272,"line_start":7,"line_end":7,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":1,"index":2045},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":55275,"byte_end":55277,"line_start":7,"line_end":7,"column_start":67,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":59549,"byte_end":59562,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4630},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":59828,"byte_end":59841,"line_start":197,"line_end":197,"column_start":20,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4630},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60066,"byte_end":60078,"line_start":208,"line_end":208,"column_start":18,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4649},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60179,"byte_end":60191,"line_start":215,"line_end":215,"column_start":20,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4649},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60386,"byte_end":60395,"line_start":226,"line_end":226,"column_start":18,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4665},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/endianity.rs","byte_start":60490,"byte_end":60499,"line_start":233,"line_end":233,"column_start":20,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4665},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":109242,"byte_end":109251,"line_start":10,"line_end":10,"column_start":17,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":110549,"byte_end":110558,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":111371,"byte_end":111380,"line_start":67,"line_end":67,"column_start":24,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4681},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/addr.rs","byte_start":111529,"byte_end":111538,"line_start":77,"line_end":77,"column_start":21,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4681},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":114623,"byte_end":114633,"line_start":34,"line_end":34,"column_start":17,"column_end":27},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":115193,"byte_end":115203,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":116033,"byte_end":116043,"line_start":76,"line_end":76,"column_start":32,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4695},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":116201,"byte_end":116211,"line_start":86,"line_end":86,"column_start":29,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4695},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":117084,"byte_end":117094,"line_start":116,"line_end":116,"column_start":22,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":117391,"byte_end":117401,"line_start":126,"line_end":126,"column_start":17,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":119140,"byte_end":119150,"line_start":175,"line_end":175,"column_start":32,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4719},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":119302,"byte_end":119312,"line_start":185,"line_end":185,"column_start":29,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4719},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":119405,"byte_end":119421,"line_start":191,"line_end":191,"column_start":17,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":120734,"byte_end":120744,"line_start":222,"line_end":222,"column_start":26,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":127101,"byte_end":127108,"line_start":407,"line_end":407,"column_start":17,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":127350,"byte_end":127357,"line_start":416,"line_end":416,"column_start":22,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128191,"byte_end":128198,"line_start":440,"line_end":440,"column_start":32,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4768},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128353,"byte_end":128360,"line_start":450,"line_end":450,"column_start":29,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4768},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128976,"byte_end":128980,"line_start":473,"line_end":473,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":1548},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128983,"byte_end":128988,"line_start":473,"line_end":473,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":7573},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128991,"byte_end":128993,"line_start":473,"line_end":473,"column_start":51,"column_end":53},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":128996,"byte_end":129000,"line_start":473,"line_end":473,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":1,"index":2227},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":129137,"byte_end":129153,"line_start":481,"line_end":481,"column_start":29,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2602},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":129277,"byte_end":129290,"line_start":491,"line_end":491,"column_start":29,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2629},"to":{"krate":0,"index":235}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":131237,"byte_end":131242,"line_start":541,"line_end":541,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2185},"to":{"krate":0,"index":254}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":131245,"byte_end":131250,"line_start":541,"line_end":541,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":7573},"to":{"krate":0,"index":254}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":131253,"byte_end":131274,"line_start":541,"line_end":541,"column_start":53,"column_end":74},"kind":"SuperTrait","from":{"krate":0,"index":244},"to":{"krate":0,"index":254}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":136903,"byte_end":136913,"line_start":693,"line_end":693,"column_start":46,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4695},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":137856,"byte_end":137866,"line_start":733,"line_end":733,"column_start":38,"column_end":48},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4695},"to":{"krate":0,"index":254}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":137967,"byte_end":137974,"line_start":737,"line_end":737,"column_start":46,"column_end":53},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4768},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":138783,"byte_end":138790,"line_start":773,"line_end":773,"column_start":38,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4768},"to":{"krate":0,"index":254}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":140938,"byte_end":140951,"line_start":831,"line_end":831,"column_start":6,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":143646,"byte_end":143660,"line_start":913,"line_end":913,"column_start":26,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":149339,"byte_end":149351,"line_start":1062,"line_end":1062,"column_start":6,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":151884,"byte_end":151900,"line_start":1135,"line_end":1135,"column_start":6,"column_end":22},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":155415,"byte_end":155437,"line_start":1220,"line_end":1220,"column_start":17,"column_end":39},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":158011,"byte_end":158033,"line_start":1304,"line_end":1304,"column_start":17,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":162620,"byte_end":162648,"line_start":1443,"line_end":1443,"column_start":26,"column_end":54},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":165456,"byte_end":165477,"line_start":1525,"line_end":1525,"column_start":17,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":169510,"byte_end":169531,"line_start":1646,"line_end":1646,"column_start":17,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":173973,"byte_end":173999,"line_start":1768,"line_end":1768,"column_start":17,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":174215,"byte_end":174241,"line_start":1775,"line_end":1775,"column_start":29,"column_end":55},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5043},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":174465,"byte_end":174491,"line_start":1785,"line_end":1785,"column_start":17,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":176156,"byte_end":176169,"line_start":1831,"line_end":1831,"column_start":17,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":179263,"byte_end":179276,"line_start":1944,"line_end":1944,"column_start":43,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5053},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":182638,"byte_end":182649,"line_start":2023,"line_end":2023,"column_start":21,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":193879,"byte_end":193894,"line_start":2318,"line_end":2318,"column_start":35,"column_end":50},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":428},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":194107,"byte_end":194122,"line_start":2326,"line_end":2326,"column_start":29,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":428},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":194310,"byte_end":194325,"line_start":2335,"line_end":2335,"column_start":35,"column_end":50},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":428},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":194585,"byte_end":194600,"line_start":2345,"line_end":2345,"column_start":26,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":428},"to":{"krate":1,"index":1731}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":194824,"byte_end":194839,"line_start":2355,"line_end":2355,"column_start":17,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":198273,"byte_end":198288,"line_start":2454,"line_end":2454,"column_start":63,"column_end":78},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":428},"to":{"krate":1,"index":3896}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":198861,"byte_end":198876,"line_start":2474,"line_end":2474,"column_start":23,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":428},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":199377,"byte_end":199392,"line_start":2497,"line_end":2497,"column_start":16,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":428},"to":{"krate":1,"index":2050}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":199644,"byte_end":199660,"line_start":2505,"line_end":2505,"column_start":37,"column_end":53},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5101},"to":{"krate":1,"index":3602}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":200191,"byte_end":200205,"line_start":2524,"line_end":2524,"column_start":29,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5114},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":200468,"byte_end":200482,"line_start":2536,"line_end":2536,"column_start":17,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":206936,"byte_end":206943,"line_start":2662,"line_end":2662,"column_start":29,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5138},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":207106,"byte_end":207113,"line_start":2671,"line_end":2671,"column_start":17,"column_end":24},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":208915,"byte_end":208927,"line_start":2723,"line_end":2723,"column_start":17,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":220791,"byte_end":220811,"line_start":3022,"line_end":3022,"column_start":17,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":228928,"byte_end":228952,"line_start":3234,"line_end":3234,"column_start":21,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":230608,"byte_end":230615,"line_start":3291,"line_end":3291,"column_start":18,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5290},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":230714,"byte_end":230721,"line_start":3298,"line_end":3298,"column_start":20,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5290},"to":{"krate":1,"index":2224}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/cfi.rs","byte_start":230870,"byte_end":230877,"line_start":3307,"line_end":3307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":370551,"byte_end":370556,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":374367,"byte_end":374372,"line_start":137,"line_end":137,"column_start":17,"column_end":22},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":388312,"byte_end":388316,"line_start":517,"line_end":517,"column_start":17,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":393932,"byte_end":393949,"line_start":668,"line_end":668,"column_start":23,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":395041,"byte_end":395051,"line_start":698,"line_end":698,"column_start":23,"column_end":33},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":396134,"byte_end":396143,"line_start":730,"line_end":730,"column_start":29,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5363},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/dwarf.rs","byte_start":396249,"byte_end":396258,"line_start":736,"line_end":736,"column_start":17,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":399126,"byte_end":399137,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":401961,"byte_end":401972,"line_start":108,"line_end":108,"column_start":22,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":403879,"byte_end":403890,"line_start":167,"line_end":167,"column_start":39,"column_end":50},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5381},"to":{"krate":1,"index":1785}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":404094,"byte_end":404105,"line_start":177,"line_end":177,"column_start":50,"column_end":61},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5381},"to":{"krate":1,"index":1785}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":404304,"byte_end":404315,"line_start":187,"line_end":187,"column_start":32,"column_end":43},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5381},"to":{"krate":1,"index":1709}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":404498,"byte_end":404509,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5381},"to":{"krate":1,"index":2224}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/endian_slice.rs","byte_start":404653,"byte_end":404664,"line_start":206,"line_end":206,"column_start":33,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5381},"to":{"krate":0,"index":780}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408563,"byte_end":408568,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":7573},"to":{"krate":0,"index":744}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408571,"byte_end":408575,"line_start":23,"line_end":23,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":1548},"to":{"krate":0,"index":744}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408578,"byte_end":408580,"line_start":23,"line_end":23,"column_start":20,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":744}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408583,"byte_end":408586,"line_start":23,"line_end":23,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2071},"to":{"krate":0,"index":744}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408589,"byte_end":408593,"line_start":23,"line_end":23,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":7215},"to":{"krate":0,"index":744}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408596,"byte_end":408599,"line_start":23,"line_end":23,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":1601},"to":{"krate":0,"index":744}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408617,"byte_end":408626,"line_start":23,"line_end":23,"column_start":59,"column_end":68},"kind":"SuperTrait","from":{"krate":1,"index":1634},"to":{"krate":0,"index":744}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":408629,"byte_end":408632,"line_start":23,"line_end":23,"column_start":71,"column_end":74},"kind":"SuperTrait","from":{"krate":1,"index":1606},"to":{"krate":0,"index":744}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":413512,"byte_end":413517,"line_start":207,"line_end":207,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":7573},"to":{"krate":0,"index":780}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/reader.rs","byte_start":413520,"byte_end":413525,"line_start":207,"line_end":207,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":2185},"to":{"krate":0,"index":780}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":422550,"byte_end":422561,"line_start":22,"line_end":22,"column_start":22,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":423390,"byte_end":423401,"line_start":45,"line_end":45,"column_start":17,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":423875,"byte_end":423886,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":424718,"byte_end":424729,"line_start":84,"line_end":84,"column_start":24,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5438},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":424893,"byte_end":424904,"line_start":94,"line_end":94,"column_start":21,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5438},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":425346,"byte_end":425359,"line_start":113,"line_end":113,"column_start":6,"column_end":19},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":428055,"byte_end":428067,"line_start":189,"line_end":189,"column_start":6,"column_end":18},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":431074,"byte_end":431084,"line_start":296,"line_end":296,"column_start":6,"column_end":16},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":431987,"byte_end":431997,"line_start":327,"line_end":327,"column_start":16,"column_end":26},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5478},"to":{"krate":1,"index":7573}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432116,"byte_end":432126,"line_start":333,"line_end":333,"column_start":20,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5478},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432225,"byte_end":432235,"line_start":339,"line_end":339,"column_start":13,"column_end":23},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5478},"to":{"krate":1,"index":2050}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432255,"byte_end":432265,"line_start":341,"line_end":341,"column_start":16,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5478},"to":{"krate":1,"index":1709}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432554,"byte_end":432564,"line_start":351,"line_end":351,"column_start":47,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":5478},"to":{"krate":1,"index":3896}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":432863,"byte_end":432873,"line_start":364,"line_end":364,"column_start":44,"column_end":54},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5478},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/abbrev.rs","byte_start":433250,"byte_end":433272,"line_start":379,"line_end":379,"column_start":6,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454147,"byte_end":454158,"line_start":28,"line_end":28,"column_start":15,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454770,"byte_end":454781,"line_start":54,"line_end":54,"column_start":36,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5529},"to":{"krate":1,"index":2082}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":454926,"byte_end":454937,"line_start":60,"line_end":60,"column_start":29,"column_end":40},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5529},"to":{"krate":1,"index":2071}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":455386,"byte_end":455398,"line_start":76,"line_end":76,"column_start":37,"column_end":49},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5552},"to":{"krate":0,"index":1292}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":458712,"byte_end":458724,"line_start":169,"line_end":169,"column_start":22,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":459537,"byte_end":459549,"line_start":193,"line_end":193,"column_start":17,"column_end":29},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":460228,"byte_end":460240,"line_start":213,"line_end":213,"column_start":32,"column_end":44},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5561},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":460402,"byte_end":460414,"line_start":223,"line_end":223,"column_start":29,"column_end":41},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5561},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/aranges.rs","byte_start":460816,"byte_end":460831,"line_start":236,"line_end":236,"column_start":17,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":467341,"byte_end":467350,"line_start":20,"line_end":20,"column_start":22,"column_end":31},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":468159,"byte_end":468168,"line_start":43,"line_end":43,"column_start":17,"column_end":26},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":469807,"byte_end":469816,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":470640,"byte_end":470649,"line_start":107,"line_end":107,"column_start":24,"column_end":33},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5581},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":470809,"byte_end":470818,"line_start":117,"line_end":117,"column_start":21,"column_end":30},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5581},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":471725,"byte_end":471746,"line_start":141,"line_end":141,"column_start":44,"column_end":65},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5811},"to":{"krate":0,"index":1027}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":473441,"byte_end":473449,"line_start":194,"line_end":194,"column_start":26,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":482160,"byte_end":482175,"line_start":404,"line_end":404,"column_start":17,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":486825,"byte_end":486840,"line_start":522,"line_end":522,"column_start":34,"column_end":49},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5612},"to":{"krate":1,"index":7578}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":489999,"byte_end":490015,"line_start":588,"line_end":588,"column_start":17,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":490313,"byte_end":490329,"line_start":597,"line_end":597,"column_start":17,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":492010,"byte_end":492017,"line_start":651,"line_end":651,"column_start":6,"column_end":13},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":5709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":506917,"byte_end":506934,"line_start":1076,"line_end":1076,"column_start":17,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":5771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":518927,"byte_end":518948,"line_start":1438,"line_end":1438,"column_start":17,"column_end":38},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":5811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":522239,"byte_end":522258,"line_start":1531,"line_end":1531,"column_start":17,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":5838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":523833,"byte_end":523842,"line_start":1584,"line_end":1584,"column_start":17,"column_end":26},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/line.rs","byte_start":527127,"byte_end":527142,"line_start":1682,"line_end":1682,"column_start":6,"column_end":21},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":573586,"byte_end":573594,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":574380,"byte_end":574388,"line_start":41,"line_end":41,"column_start":24,"column_end":32},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5916},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":574536,"byte_end":574544,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5916},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":574832,"byte_end":574845,"line_start":64,"line_end":64,"column_start":22,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":575671,"byte_end":575684,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5930},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":575837,"byte_end":575850,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5930},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":576060,"byte_end":576074,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5944},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":576338,"byte_end":576352,"line_start":122,"line_end":122,"column_start":6,"column_end":20},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":577646,"byte_end":577659,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":577985,"byte_end":577998,"line_start":179,"line_end":179,"column_start":9,"column_end":22},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":578941,"byte_end":578954,"line_start":206,"line_end":206,"column_start":17,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":584163,"byte_end":584178,"line_start":378,"line_end":378,"column_start":17,"column_end":32},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":587060,"byte_end":587074,"line_start":440,"line_end":440,"column_start":17,"column_end":31},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/loclists.rs","byte_start":588533,"byte_end":588544,"line_start":490,"line_end":490,"column_start":17,"column_end":28},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":621930,"byte_end":621941,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6048},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":622161,"byte_end":622172,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":622738,"byte_end":622753,"line_start":81,"line_end":81,"column_start":17,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/lookup.rs","byte_start":625047,"byte_end":625061,"line_start":155,"line_end":155,"column_start":36,"column_end":50},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6098},"to":{"krate":0,"index":1292}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":636842,"byte_end":636850,"line_start":302,"line_end":302,"column_start":17,"column_end":25},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":638814,"byte_end":638823,"line_start":360,"line_end":360,"column_start":17,"column_end":26},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":660014,"byte_end":660024,"line_start":865,"line_end":865,"column_start":17,"column_end":27},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":661358,"byte_end":661371,"line_start":905,"line_end":905,"column_start":17,"column_end":30},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/op.rs","byte_start":664662,"byte_end":664672,"line_start":998,"line_end":998,"column_start":17,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":763426,"byte_end":763439,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":764030,"byte_end":764043,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6512},"to":{"krate":0,"index":1311}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":764567,"byte_end":764580,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":765419,"byte_end":765432,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":766132,"byte_end":766145,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6523},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":766308,"byte_end":766321,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6523},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubnames.rs","byte_start":766750,"byte_end":766767,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":768027,"byte_end":768040,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":768667,"byte_end":768680,"line_start":33,"line_end":33,"column_start":38,"column_end":51},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6543},"to":{"krate":0,"index":1311}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":769200,"byte_end":769213,"line_start":52,"line_end":52,"column_start":22,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":770036,"byte_end":770049,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":770749,"byte_end":770762,"line_start":97,"line_end":97,"column_start":32,"column_end":45},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6554},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":770925,"byte_end":770938,"line_start":107,"line_end":107,"column_start":29,"column_end":42},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6554},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/pubtypes.rs","byte_start":771367,"byte_end":771384,"line_start":120,"line_end":120,"column_start":17,"column_end":34},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":772678,"byte_end":772689,"line_start":17,"line_end":17,"column_start":22,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":773499,"byte_end":773510,"line_start":40,"line_end":40,"column_start":24,"column_end":35},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6574},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":773661,"byte_end":773672,"line_start":50,"line_end":50,"column_start":21,"column_end":32},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6574},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":773955,"byte_end":773968,"line_start":63,"line_end":63,"column_start":22,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":774806,"byte_end":774819,"line_start":87,"line_end":87,"column_start":24,"column_end":37},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6588},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":774972,"byte_end":774985,"line_start":97,"line_end":97,"column_start":21,"column_end":34},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6588},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":775195,"byte_end":775209,"line_start":109,"line_end":109,"column_start":18,"column_end":32},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":6602},"to":{"krate":1,"index":2210}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":775473,"byte_end":775487,"line_start":122,"line_end":122,"column_start":6,"column_end":20},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":776787,"byte_end":776797,"line_start":168,"line_end":168,"column_start":9,"column_end":19},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":6610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":777126,"byte_end":777136,"line_start":179,"line_end":179,"column_start":9,"column_end":19},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":6610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":778073,"byte_end":778083,"line_start":206,"line_end":206,"column_start":17,"column_end":27},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":6610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":782759,"byte_end":782774,"line_start":358,"line_end":358,"column_start":23,"column_end":38},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":6632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":785163,"byte_end":785177,"line_start":409,"line_end":409,"column_start":17,"column_end":31},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":6625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":786637,"byte_end":786648,"line_start":459,"line_end":459,"column_start":17,"column_end":28},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":6662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":789677,"byte_end":789685,"line_start":551,"line_end":551,"column_start":6,"column_end":14},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":6671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/rnglists.rs","byte_start":790901,"byte_end":790906,"line_start":590,"line_end":590,"column_start":6,"column_end":11},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":6689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":814206,"byte_end":814214,"line_start":15,"line_end":15,"column_start":22,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":6707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":815013,"byte_end":815021,"line_start":38,"line_end":38,"column_start":17,"column_end":25},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":6707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":815788,"byte_end":815796,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":6707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":816616,"byte_end":816624,"line_start":82,"line_end":82,"column_start":24,"column_end":32},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6707},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":816782,"byte_end":816790,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6707},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":817052,"byte_end":817067,"line_start":104,"line_end":104,"column_start":17,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":818423,"byte_end":818438,"line_start":136,"line_end":136,"column_start":9,"column_end":24},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":6721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":819269,"byte_end":819284,"line_start":160,"line_end":160,"column_start":24,"column_end":39},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6721},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":819439,"byte_end":819454,"line_start":170,"line_end":170,"column_start":21,"column_end":36},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":6721},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":819745,"byte_end":819757,"line_start":183,"line_end":183,"column_start":17,"column_end":29},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":6735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":820063,"byte_end":820075,"line_start":192,"line_end":192,"column_start":9,"column_end":21},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":820897,"byte_end":820909,"line_start":216,"line_end":216,"column_start":24,"column_end":36},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":6735},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/str.rs","byte_start":821061,"byte_end":821073,"line_start":226,"line_end":226,"column_start":21,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6735},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":823511,"byte_end":823527,"line_start":21,"line_end":21,"column_start":23,"column_end":39},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":824171,"byte_end":824186,"line_start":40,"line_end":40,"column_start":23,"column_end":38},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":825004,"byte_end":825014,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":825944,"byte_end":825953,"line_start":90,"line_end":90,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":6786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":826762,"byte_end":826771,"line_start":113,"line_end":113,"column_start":17,"column_end":26},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":6786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":828029,"byte_end":828038,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":828862,"byte_end":828871,"line_start":176,"line_end":176,"column_start":24,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":6786},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":829031,"byte_end":829040,"line_start":186,"line_end":186,"column_start":21,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":6786},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":829472,"byte_end":829498,"line_start":202,"line_end":202,"column_start":17,"column_end":43},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":830782,"byte_end":830803,"line_start":244,"line_end":244,"column_start":17,"column_end":38},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":6810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":838572,"byte_end":838582,"line_start":488,"line_end":488,"column_start":17,"column_end":27},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":6841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":839504,"byte_end":839514,"line_start":521,"line_end":521,"column_start":17,"column_end":27},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":6841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":847135,"byte_end":847160,"line_start":747,"line_end":747,"column_start":33,"column_end":58},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":862720,"byte_end":862729,"line_start":1200,"line_end":1200,"column_start":17,"column_end":26},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":884675,"byte_end":884689,"line_start":1873,"line_end":1873,"column_start":17,"column_end":31},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":6897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":901532,"byte_end":901541,"line_start":2280,"line_end":2280,"column_start":41,"column_end":50},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":7084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":905847,"byte_end":905857,"line_start":2397,"line_end":2397,"column_start":33,"column_end":43},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":7110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":908583,"byte_end":908596,"line_start":2473,"line_end":2473,"column_start":33,"column_end":46},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":7128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":921593,"byte_end":921604,"line_start":2859,"line_end":2859,"column_start":33,"column_end":44},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":7147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":925781,"byte_end":925796,"line_start":2984,"line_end":2984,"column_start":40,"column_end":55},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":927006,"byte_end":927021,"line_start":3020,"line_end":3020,"column_start":40,"column_end":55},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":7182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":928421,"byte_end":928431,"line_start":3065,"line_end":3065,"column_start":22,"column_end":32},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":7196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":929242,"byte_end":929252,"line_start":3088,"line_end":3088,"column_start":9,"column_end":19},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":7196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":930080,"byte_end":930090,"line_start":3112,"line_end":3112,"column_start":24,"column_end":34},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":7196},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":930252,"byte_end":930262,"line_start":3122,"line_end":3122,"column_start":21,"column_end":31},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":7196},"to":{"krate":1,"index":2227}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":930403,"byte_end":930413,"line_start":3130,"line_end":3130,"column_start":17,"column_end":27},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":7196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":931574,"byte_end":931593,"line_start":3167,"line_end":3167,"column_start":17,"column_end":36},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":7210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/unit.rs","byte_start":932912,"byte_end":932926,"line_start":3211,"line_end":3211,"column_start":17,"column_end":31},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":7220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1034581,"byte_end":1034590,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":7253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/value.rs","byte_start":1037366,"byte_end":1037371,"line_start":151,"line_end":151,"column_start":6,"column_end":11},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":7287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":93869,"byte_end":93874,"line_start":388,"line_end":388,"column_start":23,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":7330},"to":{"krate":1,"index":7578}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":94035,"byte_end":94040,"line_start":395,"line_end":395,"column_start":6,"column_end":11},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":7330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":102677,"byte_end":102681,"line_start":558,"line_end":558,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2227},"to":{"krate":0,"index":2022}},{"span":{"file_name":"/home/areeb/.cargo/registry/src/github.com-1ecc6299db9ec823/gimli-0.21.0/src/read/mod.rs","byte_start":103517,"byte_end":103525,"line_start":591,"line_end":591,"column_start":6,"column_end":14},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2096},"to":{"krate":4294967295,"index":4294967295}}]}